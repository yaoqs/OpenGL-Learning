// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (d1789b1d).
//
// esri3DAnalyst.tlh
//
// C++ source equivalent of Win32 type library d:/Program Files/ArcGis/com/esri3DAnalyst.olb
// compiler-generated file created 01/08/07 at 20:58:34 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "D:\Program Files\ArcGIS\com\esriGeometry.olb"
//  #import "D:\Program Files\ArcGIS\com\esriCarto.olb"
//  #import "D:\Program Files\ArcGIS\com\esriSystem.olb"
//  #import "D:\Program Files\ArcGIS\com\esriGeoDatabase.olb"
//  #import "D:\Program Files\ArcGIS\com\esriDisplay.olb"
//  #import "D:\Program Files\ArcGIS\com\esriDataSourcesRaster.olb"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("787f54e2-ba26-11d2-92f8-44d1f8c00000"))
/* interface */ IScene;
struct __declspec(uuid("37576410-c469-11d2-b1da-00c04fa33d14"))
/* interface */ ISceneGraph;
struct __declspec(uuid("cb6f53c2-c46b-11d2-b1da-00c04fa33d14"))
/* interface */ ISceneRenderer;
struct __declspec(uuid("bc6f44cc-21e8-11d4-a383-00c04f6bc619"))
/* interface */ I3DProperties;
struct __declspec(uuid("03485a91-59d0-11d3-8172-0080c7597e71"))
/* interface */ ISceneViewer;
struct __declspec(uuid("b3fa596f-ada3-11d2-9fae-00c04f8ece3d"))
/* interface */ ICamera;
struct __declspec(uuid("768d13f2-9a2d-11d4-b270-00508bcdde28"))
/* interface */ IHit3DSet;
struct __declspec(uuid("bbf1af30-a6ec-11d5-b2a0-00508bcdde28"))
/* interface */ IAnimationType;
struct __declspec(uuid("767c9b53-5a8e-11d5-b295-00508bcdde28"))
/* interface */ IKeyframe;
struct __declspec(uuid("bd3c7aad-a869-11d5-b2a0-00508bcdde28"))
/* interface */ IBookmarkToKeyframe;
struct __declspec(uuid("bbf1af31-a6ec-11d5-b2a0-00508bcdde28"))
/* interface */ IAnimationTrack;
struct /* coclass */ AnimationTrack;
struct /* coclass */ LayerKeyframe;
struct /* coclass */ SceneKeyframe;
struct /* coclass */ AnimationTypeCamera;
struct /* coclass */ AnimationTypeLayer;
struct /* coclass */ AnimationTypeScene;
struct __declspec(uuid("a4c0b647-82ad-11d5-b29b-00508bcdde28"))
/* interface */ ISxAnimationEnvironment;
struct __declspec(uuid("f406fe81-1101-47eb-9a45-5c4f64b9a0f0"))
/* interface */ ISxAnimationEnvironment2;
struct /* coclass */ SxAnimationEnvironment;
struct __declspec(uuid("44e9928e-bf72-4838-b956-2940d0564f3f"))
/* interface */ ICamera2;
struct __declspec(uuid("1a8927bc-9f9a-44ba-a921-3c3ac1aa476c"))
/* interface */ IStereoCamera;
struct /* coclass */ Camera;
struct __declspec(uuid("bcdb3324-9afa-11d5-b29f-00508bcdde28"))
/* interface */ IBookmark3D;
struct /* coclass */ Bookmark3D;
struct __declspec(uuid("4d8ca7d2-0aaa-4502-adc7-0388051c5f5c"))
/* interface */ IViewers3D;
struct __declspec(uuid("ec4e4b1c-5a64-499d-a475-bc2ddc237838"))
/* interface */ IBasicScene;
struct __declspec(uuid("ef879196-01de-11d4-ab69-0008c73fd50c"))
/* interface */ IGraphicsContainer3D;
struct __declspec(uuid("79103a54-1e53-11d4-a109-00c04f8ece27"))
/* interface */ IGraphicsSelection;
struct __declspec(uuid("bcdb3325-9afa-11d5-b29f-00508bcdde28"))
/* interface */ ISceneBookmarks;
struct __declspec(uuid("fa3dba5b-a879-11d5-b2a0-00508bcdde28"))
/* interface */ IAnimationTracks;
struct /* coclass */ Scene;
struct /* coclass */ GraphicsLayer3D;
struct __declspec(uuid("bbc7c2e8-1fb3-11d4-ab72-0008c73fd50c"))
/* interface */ ISceneRendererEvents;
struct __declspec(uuid("4a4cece5-f53a-11d3-80d9-00c04fa0adf8"))
/* interface */ IFeature3DProperties;
struct __declspec(uuid("ff699cbe-9340-4724-9b4c-f88979314bc0"))
/* interface */ IFeature3DProperties2;
struct __declspec(uuid("3c957f4d-2120-11d4-a383-00c04f6bc619"))
/* interface */ IExpression;
struct /* coclass */ Basic3DProperties;
struct /* coclass */ Tin3DProperties;
struct /* coclass */ Raster3DProperties;
struct /* coclass */ Feature3DProperties;
struct __declspec(uuid("3044c30e-37d0-11d4-a167-444553547777"))
/* interface */ IVRMLExporter;
struct __declspec(uuid("bd62a8fa-8833-11d4-ab87-0008c73fd50c"))
/* interface */ IMessageDispatcher;
struct __declspec(uuid("f7873924-9a19-11d4-b270-00508bcdde28"))
/* interface */ IHit3D;
struct __declspec(uuid("1d1c669a-13de-11d4-80df-00c04fa0adf8"))
/* interface */ ISceneGraphEvents;
struct __declspec(uuid("1d1c669b-13de-11d4-80df-00c04fa0adf8"))
/* interface */ ISceneGraphEventsDisp;
struct /* coclass */ SceneGraph;
struct /* coclass */ SceneGraphEvents;
struct /* coclass */ MessageDispatcher;
struct /* coclass */ Hit3D;
struct /* coclass */ Hit3DSet;
struct __declspec(uuid("0aa361c1-06a2-11d5-9163-0080c7074326"))
/* interface */ ILayerRenderers;
struct __declspec(uuid("ea6581ec-082d-435c-8f73-b4161ca06f20"))
/* interface */ I3DViewer;
struct __declspec(uuid("3455fdb6-ee56-455e-a44e-28a0c76d3196"))
/* interface */ IRasterSurface;
struct /* coclass */ RasterSurface;
struct __declspec(uuid("3044c30b-37d0-11d4-a167-444553547777"))
/* interface */ ISceneExporter3d;
struct /* coclass */ VRMLExporter;
struct __declspec(uuid("4251ba07-9106-11d5-b29f-00508bcdde28"))
/* interface */ ISceneVideoExporter;
struct __declspec(uuid("26eb3a30-9e6d-443c-b904-79b16c5028aa"))
/* interface */ IVideoExporterProperties;
struct __declspec(uuid("4251ba08-9106-11d5-b29f-00508bcdde28"))
/* interface */ IAVIExporter;
struct __declspec(uuid("206fda1e-5622-4189-9f9a-486cd52e3457"))
/* interface */ IQuickTimeExporter;
struct /* coclass */ AVIExporter;
struct /* coclass */ QuickTimeExporter;
struct __declspec(uuid("95e48b87-336e-4062-9b68-eb8ec9177ab8"))
/* interface */ IImport3DFile;
struct __declspec(uuid("e9f95f61-2bec-11d6-a4cd-444553547777"))
/* interface */ IGeometryMaterial;
struct __declspec(uuid("b7685a34-2bc8-11d6-a4cc-444553547777"))
/* interface */ IGeometryMaterialList;
struct __declspec(uuid("821003c1-2c6b-11d6-a4ce-444553547777"))
/* interface */ IGeneralMultiPatchCreator;
struct __declspec(uuid("773f7276-aefb-11d5-8112-00c04fa0adf8"))
/* interface */ IMarker3DPlacement;
struct __declspec(uuid("773f726f-aefb-11d5-8112-00c04fa0adf8"))
/* interface */ ISimpleMarker3DSymbol;
struct __declspec(uuid("773f7272-aefb-11d5-8112-00c04fa0adf8"))
/* interface */ IMarker3DSymbol;
struct __declspec(uuid("6e8ec8f8-e90a-11d5-a129-00508bd60cb9"))
/* interface */ ICharacterMarker3DSymbol;
struct __declspec(uuid("470b7273-3552-11d6-a12d-00508bd60cb9"))
/* interface */ ILine3DPlacement;
struct __declspec(uuid("470b7274-3552-11d6-a12d-00508bd60cb9"))
/* interface */ ISimpleLine3DSymbol;
struct __declspec(uuid("3f6d8301-5a5a-4b84-969f-433af07ee1a3"))
/* interface */ ITextureFillSymbol;
struct __declspec(uuid("d47a4da5-6d42-11d6-a13e-00508bd60cb9"))
/* interface */ ITextureLineSymbol;
struct /* coclass */ SimpleMarker3DSymbol;
struct /* coclass */ Marker3DSymbol;
struct /* coclass */ CharacterMarker3DSymbol;
struct /* coclass */ SimpleLine3DSymbol;
struct /* coclass */ TextureFillSymbol;
struct /* coclass */ TextureLineSymbol;
struct /* coclass */ Import3DFile;
struct /* coclass */ GeometryMaterial;
struct /* coclass */ GeometryMaterialList;
struct /* coclass */ GeneralMultiPatchCreator;
struct /* coclass */ Controls3DAnalystSteepestPathTool;
struct /* coclass */ Controls3DAnalystContourTool;
struct /* coclass */ ControlsSceneExpandFOVCommand;
struct /* coclass */ ControlsSceneFlyTool;
struct /* coclass */ ControlsSceneFullExtentCommand;
struct /* coclass */ ControlsSceneNarrowFOVCommand;
struct /* coclass */ ControlsSceneNavigateTool;
struct /* coclass */ ControlsScenePanTool;
struct /* coclass */ ControlsSceneSelectFeaturesTool;
struct /* coclass */ ControlsSceneSelectGraphicsTool;
struct /* coclass */ ControlsSceneSetObserverTool;
struct /* coclass */ ControlsSceneTargetCenterTool;
struct /* coclass */ ControlsSceneTargetZoomTool;
struct /* coclass */ ControlsSceneZoomInTool;
struct /* coclass */ ControlsSceneZoomInOutTool;
struct /* coclass */ ControlsSceneZoomOutTool;
struct /* coclass */ ControlsSceneOpenDocCommand;
struct /* coclass */ ControlsSceneSceneToolbar;
struct __declspec(uuid("aa4f27cf-0c2b-44d3-9531-5d1d48cbf3e4"))
/* interface */ ISceneCommandHook;
struct __declspec(uuid("142dce00-0dd2-4761-b639-5fc7af74fa1b"))
/* interface */ ISceneHookHelper;
struct /* coclass */ SceneHookHelper;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IScene, __uuidof(IScene));
_COM_SMARTPTR_TYPEDEF(ISceneGraph, __uuidof(ISceneGraph));
_COM_SMARTPTR_TYPEDEF(ISceneRenderer, __uuidof(ISceneRenderer));
_COM_SMARTPTR_TYPEDEF(I3DProperties, __uuidof(I3DProperties));
_COM_SMARTPTR_TYPEDEF(ISceneViewer, __uuidof(ISceneViewer));
_COM_SMARTPTR_TYPEDEF(ICamera, __uuidof(ICamera));
_COM_SMARTPTR_TYPEDEF(IHit3DSet, __uuidof(IHit3DSet));
_COM_SMARTPTR_TYPEDEF(IAnimationType, __uuidof(IAnimationType));
_COM_SMARTPTR_TYPEDEF(IKeyframe, __uuidof(IKeyframe));
_COM_SMARTPTR_TYPEDEF(IBookmarkToKeyframe, __uuidof(IBookmarkToKeyframe));
_COM_SMARTPTR_TYPEDEF(IAnimationTrack, __uuidof(IAnimationTrack));
_COM_SMARTPTR_TYPEDEF(ISxAnimationEnvironment, __uuidof(ISxAnimationEnvironment));
_COM_SMARTPTR_TYPEDEF(ISxAnimationEnvironment2, __uuidof(ISxAnimationEnvironment2));
_COM_SMARTPTR_TYPEDEF(ICamera2, __uuidof(ICamera2));
_COM_SMARTPTR_TYPEDEF(IStereoCamera, __uuidof(IStereoCamera));
_COM_SMARTPTR_TYPEDEF(IBookmark3D, __uuidof(IBookmark3D));
_COM_SMARTPTR_TYPEDEF(IViewers3D, __uuidof(IViewers3D));
_COM_SMARTPTR_TYPEDEF(IBasicScene, __uuidof(IBasicScene));
_COM_SMARTPTR_TYPEDEF(IGraphicsContainer3D, __uuidof(IGraphicsContainer3D));
_COM_SMARTPTR_TYPEDEF(IGraphicsSelection, __uuidof(IGraphicsSelection));
_COM_SMARTPTR_TYPEDEF(ISceneBookmarks, __uuidof(ISceneBookmarks));
_COM_SMARTPTR_TYPEDEF(IAnimationTracks, __uuidof(IAnimationTracks));
_COM_SMARTPTR_TYPEDEF(ISceneRendererEvents, __uuidof(ISceneRendererEvents));
_COM_SMARTPTR_TYPEDEF(IFeature3DProperties, __uuidof(IFeature3DProperties));
_COM_SMARTPTR_TYPEDEF(IFeature3DProperties2, __uuidof(IFeature3DProperties2));
_COM_SMARTPTR_TYPEDEF(IExpression, __uuidof(IExpression));
_COM_SMARTPTR_TYPEDEF(IVRMLExporter, __uuidof(IVRMLExporter));
_COM_SMARTPTR_TYPEDEF(IMessageDispatcher, __uuidof(IMessageDispatcher));
_COM_SMARTPTR_TYPEDEF(IHit3D, __uuidof(IHit3D));
_COM_SMARTPTR_TYPEDEF(ISceneGraphEvents, __uuidof(ISceneGraphEvents));
_COM_SMARTPTR_TYPEDEF(ISceneGraphEventsDisp, __uuidof(ISceneGraphEventsDisp));
_COM_SMARTPTR_TYPEDEF(ILayerRenderers, __uuidof(ILayerRenderers));
_COM_SMARTPTR_TYPEDEF(I3DViewer, __uuidof(I3DViewer));
_COM_SMARTPTR_TYPEDEF(IRasterSurface, __uuidof(IRasterSurface));
_COM_SMARTPTR_TYPEDEF(ISceneExporter3d, __uuidof(ISceneExporter3d));
_COM_SMARTPTR_TYPEDEF(ISceneVideoExporter, __uuidof(ISceneVideoExporter));
_COM_SMARTPTR_TYPEDEF(IVideoExporterProperties, __uuidof(IVideoExporterProperties));
_COM_SMARTPTR_TYPEDEF(IAVIExporter, __uuidof(IAVIExporter));
_COM_SMARTPTR_TYPEDEF(IQuickTimeExporter, __uuidof(IQuickTimeExporter));
_COM_SMARTPTR_TYPEDEF(IImport3DFile, __uuidof(IImport3DFile));
_COM_SMARTPTR_TYPEDEF(IGeometryMaterial, __uuidof(IGeometryMaterial));
_COM_SMARTPTR_TYPEDEF(IGeometryMaterialList, __uuidof(IGeometryMaterialList));
_COM_SMARTPTR_TYPEDEF(IGeneralMultiPatchCreator, __uuidof(IGeneralMultiPatchCreator));
_COM_SMARTPTR_TYPEDEF(IMarker3DPlacement, __uuidof(IMarker3DPlacement));
_COM_SMARTPTR_TYPEDEF(ISimpleMarker3DSymbol, __uuidof(ISimpleMarker3DSymbol));
_COM_SMARTPTR_TYPEDEF(IMarker3DSymbol, __uuidof(IMarker3DSymbol));
_COM_SMARTPTR_TYPEDEF(ICharacterMarker3DSymbol, __uuidof(ICharacterMarker3DSymbol));
_COM_SMARTPTR_TYPEDEF(ILine3DPlacement, __uuidof(ILine3DPlacement));
_COM_SMARTPTR_TYPEDEF(ISimpleLine3DSymbol, __uuidof(ISimpleLine3DSymbol));
_COM_SMARTPTR_TYPEDEF(ITextureFillSymbol, __uuidof(ITextureFillSymbol));
_COM_SMARTPTR_TYPEDEF(ITextureLineSymbol, __uuidof(ITextureLineSymbol));
_COM_SMARTPTR_TYPEDEF(ISceneCommandHook, __uuidof(ISceneCommandHook));
_COM_SMARTPTR_TYPEDEF(ISceneHookHelper, __uuidof(ISceneHookHelper));

//
// Type library items
//

enum esriAnimationPropertyType
{
    esriAnimationPropertyInt = 1,
    esriAnimationPropertyLong = 2,
    esriAnimationPropertyDouble = 3,
    esriAnimationPropertyBoolean = 4,
    esriAnimationPropertyPoint = 5,
    esriAnimationPropertyExtent = 6,
    esriAnimationPropertyRGBColor = 7
};

struct __declspec(uuid("787f54e2-ba26-11d2-92f8-44d1f8c00000"))
IScene : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Extent (
        struct IEnvelope * * pExtent ) = 0;
    virtual HRESULT __stdcall SuggestExaggerationFactor (
        double aspectRatio,
        double * ExaggerationFactor ) = 0;
    virtual HRESULT __stdcall get_ExaggerationFactor (
        double * ExaggerationFactor ) = 0;
    virtual HRESULT __stdcall put_ExaggerationFactor (
        double ExaggerationFactor ) = 0;
    virtual HRESULT __stdcall Applies (
        IUnknown * Object,
        VARIANT_BOOL * Applies ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * descr ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR descr ) = 0;
    virtual HRESULT __stdcall get_AreaOfInterest (
        struct IEnvelope * * aoi ) = 0;
    virtual HRESULT __stdcall put_AreaOfInterest (
        struct IEnvelope * aoi ) = 0;
    virtual HRESULT __stdcall get_LayerCount (
        long * pcLayers ) = 0;
    virtual HRESULT __stdcall get_Layer (
        long index,
        struct ILayer * * ppLayer ) = 0;
    virtual HRESULT __stdcall get_Layers (
        struct IUID * uid,
        VARIANT_BOOL recursive,
        struct IEnumLayer * * Layers ) = 0;
    virtual HRESULT __stdcall AddLayer (
        struct ILayer * pLayer,
        VARIANT_BOOL autoArrange ) = 0;
    virtual HRESULT __stdcall AddLayers (
        struct IEnumLayer * Layers,
        VARIANT_BOOL autoArrange ) = 0;
    virtual HRESULT __stdcall DeleteLayer (
        struct ILayer * Layer ) = 0;
    virtual HRESULT __stdcall MoveLayer (
        struct ILayer * Layer,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearLayers ( ) = 0;
    virtual HRESULT __stdcall get_SpatialReference (
        struct ISpatialReference * * spatialRef ) = 0;
    virtual HRESULT __stdcall putref_SpatialReference (
        struct ISpatialReference * spatialRef ) = 0;
    virtual HRESULT __stdcall ProposeSpatialReference (
        struct ISpatialReference * pProposedSR,
        VARIANT_BOOL * pbChanged ) = 0;
    virtual HRESULT __stdcall get_BasicGraphicsLayer (
        struct IGraphicsLayer * * ppLayer ) = 0;
    virtual HRESULT __stdcall get_ActiveGraphicsLayer (
        struct ILayer * * ppLayer ) = 0;
    virtual HRESULT __stdcall putref_ActiveGraphicsLayer (
        struct ILayer * ppLayer ) = 0;
    virtual HRESULT __stdcall DelayEvents (
        VARIANT_BOOL delay ) = 0;
    virtual HRESULT __stdcall get_SelectionCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall SelectFeature (
        struct ILayer * Layer,
        struct IFeature * pFeature ) = 0;
    virtual HRESULT __stdcall ClearSelection ( ) = 0;
    virtual HRESULT __stdcall get_FeatureSelection (
        struct ISelection * * selection ) = 0;
    virtual HRESULT __stdcall putref_FeatureSelection (
        struct ISelection * selection ) = 0;
    virtual HRESULT __stdcall SelectByShape (
        struct IGeometry * Shape,
        struct ISelectionEnvironment * env,
        VARIANT_BOOL justOne ) = 0;
    virtual HRESULT __stdcall RecalculateExtent ( ) = 0;
    virtual HRESULT __stdcall get_SceneGraph (
        struct ISceneGraph * * ppSceneGraph ) = 0;
    virtual HRESULT __stdcall SetDefaultBackgroundColor (
        float red,
        float green,
        float blue ) = 0;
    virtual HRESULT __stdcall GetDefaultBackgroundColor (
        float * red,
        float * green,
        float * blue ) = 0;
};

struct __declspec(uuid("37576410-c469-11d2-b1da-00c04fa33d14"))
ISceneGraph : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Scene (
        struct IScene * * pVal ) = 0;
    virtual HRESULT __stdcall putref_Scene (
        struct IScene * pVal ) = 0;
    virtual HRESULT __stdcall get_IsEmpty (
        VARIANT_BOOL * bIsEmpty ) = 0;
    virtual HRESULT __stdcall AddSimpleGraphics (
        struct ISceneRenderer * pRecorder ) = 0;
    virtual HRESULT __stdcall AddSimpleActor (
        struct ISceneRenderer * pRecorder,
        struct IGeoDataset * pGeoDataset ) = 0;
    virtual HRESULT __stdcall BeginCompositeActor (
        struct ICompositeLayer * pGroupLayer ) = 0;
    virtual HRESULT __stdcall EndCompositeActor ( ) = 0;
    virtual HRESULT __stdcall Remove (
        IUnknown * pObject,
        VARIANT_BOOL bUpdateExtent ) = 0;
    virtual HRESULT __stdcall Invalidate (
        IUnknown * pObject,
        VARIANT_BOOL bInvalidateGeography,
        VARIANT_BOOL bInvalidateSelection ) = 0;
    virtual HRESULT __stdcall put_ImmediateMode (
        VARIANT_BOOL pbIsAllImmediate ) = 0;
    virtual HRESULT __stdcall get_ImmediateMode (
        VARIANT_BOOL * pbIsAllImmediate ) = 0;
    virtual HRESULT __stdcall SetOwnerVisibility (
        IUnknown * pObject,
        VARIANT_BOOL visible ) = 0;
    virtual HRESULT __stdcall SetOwnerNavigationVisibility (
        IUnknown * pObject,
        VARIANT_BOOL visibleWhenNavigating,
        VARIANT_BOOL visibleWhenStill ) = 0;
    virtual HRESULT __stdcall SetOwnerLightingOption (
        IUnknown * pObject,
        VARIANT_BOOL lighting ) = 0;
    virtual HRESULT __stdcall SetOwnerShadingMode (
        IUnknown * pObject,
        VARIANT_BOOL bIsSmooth ) = 0;
    virtual HRESULT __stdcall SetOwnerDepthPriority (
        IUnknown * pObject,
        short depthPriority ) = 0;
    virtual HRESULT __stdcall SetOwnerTimeThreshold (
        IUnknown * pObject,
        double timeThreshold ) = 0;
    virtual HRESULT __stdcall SetOwnerImmediateMode (
        IUnknown * pObject,
        VARIANT_BOOL bIsLayerImmediate ) = 0;
    virtual HRESULT __stdcall SetOwnerFaceCulling (
        IUnknown * pObject,
        enum esri3DFaceCulling cullingMode ) = 0;
    virtual HRESULT __stdcall SetOwnerTransparencyState (
        IUnknown * pObject,
        VARIANT_BOOL bIsTransparent ) = 0;
    virtual HRESULT __stdcall GetOwnerTransparency (
        IUnknown * pObject,
        long * pTranspPercent ) = 0;
    virtual HRESULT __stdcall put_OwnerExtrusion (
        IUnknown * pObject,
        VARIANT_BOOL _arg2 ) = 0;
    virtual HRESULT __stdcall get_Extent (
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall get_GeographySelectionExtent (
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall get_OwnerExtent (
        IUnknown * pOwner,
        VARIANT_BOOL bSelectionOnly,
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall RegisterViewer (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall UnregisterViewer (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall FindViewer (
        BSTR Caption,
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall GetAllViewers (
        struct IArray * * ppViewers ) = 0;
    virtual HRESULT __stdcall putref_ActiveViewer (
        struct ISceneViewer * ppViewer ) = 0;
    virtual HRESULT __stdcall get_ActiveViewer (
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall putref_CurrentViewer (
        struct ISceneViewer * ppViewer ) = 0;
    virtual HRESULT __stdcall get_CurrentViewer (
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall ReplayFrame (
        struct ICamera * Camera ) = 0;
    virtual HRESULT __stdcall SetupProjection (
        struct ICamera * pCamera ) = 0;
    virtual HRESULT __stdcall RefreshViewers ( ) = 0;
    virtual HRESULT __stdcall EnableRefresh (
        VARIANT_BOOL bEnable ) = 0;
    virtual HRESULT __stdcall SetBackgroundColor (
        float red,
        float green,
        float blue ) = 0;
    virtual HRESULT __stdcall GetBackgroundColor (
        float * pRed,
        float * pGreen,
        float * pBlue ) = 0;
    virtual HRESULT __stdcall putref_SelectionColor (
        struct IColor * pSelectionColor ) = 0;
    virtual HRESULT __stdcall get_SelectionColor (
        struct IColor * * pSelectionColor ) = 0;
    virtual HRESULT __stdcall get_IsNavigating (
        VARIANT_BOOL * pbIsNavigating ) = 0;
    virtual HRESULT __stdcall put_IsNavigating (
        VARIANT_BOOL pbIsNavigating ) = 0;
    virtual HRESULT __stdcall put_GestureEnabled (
        VARIANT_BOOL pbEnabled ) = 0;
    virtual HRESULT __stdcall get_GestureEnabled (
        VARIANT_BOOL * pbEnabled ) = 0;
    virtual HRESULT __stdcall Locate (
        struct ISceneViewer * pViewer,
        long x,
        long y,
        enum esriScenePickMode mode,
        VARIANT_BOOL bGetTransformed,
        struct IPoint * * ppPt,
        IUnknown * * ppOwner,
        IUnknown * * ppObject ) = 0;
    virtual HRESULT __stdcall LocateMultiple (
        struct ISceneViewer * pViewer,
        long x,
        long y,
        enum esriScenePickMode mode,
        VARIANT_BOOL bGetTransformed,
        struct IHit3DSet * * ppHits ) = 0;
    virtual HRESULT __stdcall get_VerticalExaggeration (
        double * pZFactor ) = 0;
    virtual HRESULT __stdcall put_VerticalExaggeration (
        double pZFactor ) = 0;
    virtual HRESULT __stdcall get_SunVector (
        struct IVector3D * * ppSun ) = 0;
    virtual HRESULT __stdcall put_SunVector (
        struct IVector3D * ppSun ) = 0;
    virtual HRESULT __stdcall get_Contrast (
        long * pContrast ) = 0;
    virtual HRESULT __stdcall put_Contrast (
        long pContrast ) = 0;
    virtual HRESULT __stdcall Clear (
        VARIANT_BOOL bKeepBasicGraph ) = 0;
    virtual HRESULT __stdcall LockViewers (
        VARIANT_BOOL lock ) = 0;
    virtual HRESULT __stdcall GetDrawingTimeInfo (
        double * pLastFrameDuration,
        double * pMeanFrameRate ) = 0;
    virtual HRESULT __stdcall GetOwnerSymbols (
        IUnknown * pOwner,
        struct IArray * * ppSymbols,
        struct ILongArray * * ppDisplayListIDs ) = 0;
    virtual HRESULT __stdcall RecordSymbol (
        struct ISymbol * pSymbol,
        long glList,
        VARIANT_BOOL bIsExtruded,
        VARIANT_BOOL bLighting,
        int layerTransparencyPercent,
        VARIANT_BOOL bOptimizeState ) = 0;
    virtual HRESULT __stdcall get_IsRecordingMessageEnabled (
        VARIANT_BOOL * pbIsEnabled ) = 0;
    virtual HRESULT __stdcall put_IsRecordingMessageEnabled (
        VARIANT_BOOL pbIsEnabled ) = 0;
};

struct __declspec(uuid("cb6f53c2-c46b-11d2-b1da-00c04fa33d14"))
ISceneRenderer : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CallRecording (
        VARIANT_BOOL * pbCallFlag ) = 0;
    virtual HRESULT __stdcall put_CallRecording (
        VARIANT_BOOL pbCallFlag ) = 0;
    virtual HRESULT __stdcall StartRecording (
        VARIANT_BOOL bImmediateMode ) = 0;
    virtual HRESULT __stdcall Record (
        struct IDisplay3D * pDisplay,
        IUnknown * pGeoNode,
        struct ITrackCancel * pTrackCancel ) = 0;
    virtual HRESULT __stdcall get_DddProperties (
        struct I3DProperties * * ppFilter ) = 0;
    virtual HRESULT __stdcall putref_DddProperties (
        struct I3DProperties * ppFilter ) = 0;
    virtual HRESULT __stdcall Locate (
        long hint,
        struct IRay * pQueryRay,
        VARIANT_BOOL bGetTransformed,
        IUnknown * pGeoNode,
        struct IPoint * * ppPoint,
        IUnknown * * ppObject ) = 0;
    virtual HRESULT __stdcall putref_Represents (
        IUnknown * ppObject ) = 0;
    virtual HRESULT __stdcall get_Represents (
        IUnknown * * ppObject ) = 0;
    virtual HRESULT __stdcall get_AccumulatedExtent (
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall QueryAccumulatedExtent (
        struct IEnvelope * pExtent ) = 0;
};

struct __declspec(uuid("bc6f44cc-21e8-11d4-a383-00c04f6bc619"))
I3DProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BaseOption (
        enum esriBaseOption * pBaseOption ) = 0;
    virtual HRESULT __stdcall put_BaseOption (
        enum esriBaseOption pBaseOption ) = 0;
    virtual HRESULT __stdcall get_BaseExpressionString (
        BSTR * pBaseExpression ) = 0;
    virtual HRESULT __stdcall put_BaseExpressionString (
        BSTR pBaseExpression ) = 0;
    virtual HRESULT __stdcall get_BaseSurface (
        struct IFunctionalSurface * * ppBase ) = 0;
    virtual HRESULT __stdcall putref_BaseSurface (
        struct IFunctionalSurface * ppBase ) = 0;
    virtual HRESULT __stdcall get_BaseName (
        struct IName * * Name ) = 0;
    virtual HRESULT __stdcall get_ZFactor (
        double * pZFactor ) = 0;
    virtual HRESULT __stdcall put_ZFactor (
        double pZFactor ) = 0;
    virtual HRESULT __stdcall get_OffsetExpressionString (
        BSTR * pOffset ) = 0;
    virtual HRESULT __stdcall put_OffsetExpressionString (
        BSTR pOffset ) = 0;
    virtual HRESULT __stdcall get_ExtrusionType (
        enum esriExtrusionType * pType ) = 0;
    virtual HRESULT __stdcall put_ExtrusionType (
        enum esriExtrusionType pType ) = 0;
    virtual HRESULT __stdcall get_ExtrusionExpressionString (
        BSTR * pExtrusion ) = 0;
    virtual HRESULT __stdcall put_ExtrusionExpressionString (
        BSTR pExtrusion ) = 0;
    virtual HRESULT __stdcall get_RenderVisibility (
        enum esriRenderVisibility * pRenderOption ) = 0;
    virtual HRESULT __stdcall put_RenderVisibility (
        enum esriRenderVisibility pRenderOption ) = 0;
    virtual HRESULT __stdcall get_RenderRefreshRate (
        double * pRefresh ) = 0;
    virtual HRESULT __stdcall put_RenderRefreshRate (
        double pRefresh ) = 0;
    virtual HRESULT __stdcall get_Illuminate (
        VARIANT_BOOL * pIlluminate ) = 0;
    virtual HRESULT __stdcall put_Illuminate (
        VARIANT_BOOL pIlluminate ) = 0;
    virtual HRESULT __stdcall get_RenderMode (
        enum esriRenderMode * pRenderMode ) = 0;
    virtual HRESULT __stdcall put_RenderMode (
        enum esriRenderMode pRenderMode ) = 0;
    virtual HRESULT __stdcall get_SmoothShading (
        VARIANT_BOOL * pbSmoothShading ) = 0;
    virtual HRESULT __stdcall put_SmoothShading (
        VARIANT_BOOL pbSmoothShading ) = 0;
    virtual HRESULT __stdcall get_MaxTextureMemory (
        long * pMaxTextureMemory ) = 0;
    virtual HRESULT __stdcall put_MaxTextureMemory (
        long pMaxTextureMemory ) = 0;
    virtual HRESULT __stdcall get_MaxRasterColumns (
        long * pMaxRasterColumns ) = 0;
    virtual HRESULT __stdcall put_MaxRasterColumns (
        long pMaxRasterColumns ) = 0;
    virtual HRESULT __stdcall get_MaxRasterRows (
        long * pMaxRasterRows ) = 0;
    virtual HRESULT __stdcall put_MaxRasterRows (
        long pMaxRasterRows ) = 0;
    virtual HRESULT __stdcall put_DepthPriorityValue (
        short DepthPriorityValue ) = 0;
    virtual HRESULT __stdcall get_DepthPriorityValue (
        short * DepthPriorityValue ) = 0;
    virtual HRESULT __stdcall put_FaceCulling (
        enum esri3DFaceCulling pCullingMode ) = 0;
    virtual HRESULT __stdcall get_FaceCulling (
        enum esri3DFaceCulling * pCullingMode ) = 0;
    virtual HRESULT __stdcall Apply3DProperties (
        IUnknown * Owner ) = 0;
};

enum esriBaseOption
{
    esriBaseExpression = 0,
    esriBaseSurface = 1,
    esriBaseShape = 2
};

enum esriExtrusionType
{
    esriExtrusionNone = 0,
    esriExtrusionMinZ = 1,
    esriExtrusionMaxZ = 2,
    esriExtrusionBase = 3,
    esriExtrusionAbsolute = 4
};

enum esriRenderVisibility
{
    esriRenderAlways = 0,
    esriRenderWhenStopped = 1,
    esriRenderWhenNavigating = 2
};

enum esriRenderMode
{
    esriRenderCache = 0,
    esriRenderImmediate = 1
};

enum esri3DFaceCulling
{
    esriFaceCullingNone = 0,
    esriFaceCullingFront = 1,
    esriFaceCullingBack = 2
};

struct __declspec(uuid("03485a91-59d0-11d3-8172-0080c7597e71"))
ISceneViewer : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Caption (
        BSTR * pCaption ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR pCaption ) = 0;
    virtual HRESULT __stdcall get_SceneGraph (
        struct ISceneGraph * * ppSceneGraph ) = 0;
    virtual HRESULT __stdcall putref_SceneGraph (
        struct ISceneGraph * ppSceneGraph ) = 0;
    virtual HRESULT __stdcall get_Camera (
        struct ICamera * * ppCamera ) = 0;
    virtual HRESULT __stdcall putref_Camera (
        struct ICamera * ppCamera ) = 0;
    virtual HRESULT __stdcall MakeCurrent ( ) = 0;
    virtual HRESULT __stdcall Redraw (
        VARIANT_BOOL cameraMoved ) = 0;
    virtual HRESULT __stdcall DrawToMetafile (
        OLE_HANDLE hDC,
        float resolutionFactor,
        long left,
        long top,
        long right,
        long bottom,
        VARIANT_BOOL bOffScreen ) = 0;
    virtual HRESULT __stdcall GetSnapshot (
        long Width,
        long height,
        enum esri3DOutputImageType Type,
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall GetScreenShot (
        enum esri3DOutputImageType Type,
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall get_hWnd (
        OLE_HANDLE * pHwnd ) = 0;
    virtual HRESULT __stdcall put_hWnd (
        OLE_HANDLE pHwnd ) = 0;
    virtual HRESULT __stdcall get_hDC (
        OLE_HANDLE * pHDC ) = 0;
    virtual HRESULT __stdcall put_hRC (
        OLE_HANDLE pHRC ) = 0;
    virtual HRESULT __stdcall get_hRC (
        OLE_HANDLE * pHRC ) = 0;
    virtual HRESULT __stdcall put_GestureSensitivity (
        long pcPixels ) = 0;
    virtual HRESULT __stdcall get_GestureSensitivity (
        long * pcPixels ) = 0;
    virtual HRESULT __stdcall put_GestureEnabled (
        VARIANT_BOOL pbEnabled ) = 0;
    virtual HRESULT __stdcall get_GestureEnabled (
        VARIANT_BOOL * pbEnabled ) = 0;
    virtual HRESULT __stdcall ClearGesture ( ) = 0;
    virtual HRESULT __stdcall OverrideDefaultHandler ( ) = 0;
};

struct __declspec(uuid("b3fa596f-ada3-11d2-9fae-00c04f8ece3d"))
ICamera : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Observer (
        struct IPoint * * Observer ) = 0;
    virtual HRESULT __stdcall put_Observer (
        struct IPoint * Observer ) = 0;
    virtual HRESULT __stdcall get_Target (
        struct IPoint * * Target ) = 0;
    virtual HRESULT __stdcall put_Target (
        struct IPoint * Target ) = 0;
    virtual HRESULT __stdcall get_UpDirection (
        struct IVector3D * * upVector ) = 0;
    virtual HRESULT __stdcall put_UpDirection (
        struct IVector3D * upVector ) = 0;
    virtual HRESULT __stdcall get_ViewingDistance (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_ViewingDistance (
        double distance ) = 0;
    virtual HRESULT __stdcall get_ViewFieldAngle (
        double * ViewFieldAngle ) = 0;
    virtual HRESULT __stdcall put_ViewFieldAngle (
        double ViewFieldAngle ) = 0;
    virtual HRESULT __stdcall get_RollAngle (
        double * RollAngle ) = 0;
    virtual HRESULT __stdcall put_RollAngle (
        double RollAngle ) = 0;
    virtual HRESULT __stdcall get_ProjectionType (
        enum esri3DProjectionType * ProjectionType ) = 0;
    virtual HRESULT __stdcall put_ProjectionType (
        enum esri3DProjectionType ProjectionType ) = 0;
    virtual HRESULT __stdcall get_IsUsable (
        VARIANT_BOOL * IsValid ) = 0;
    virtual HRESULT __stdcall get_Inclination (
        double * Inclination ) = 0;
    virtual HRESULT __stdcall put_Inclination (
        double Inclination ) = 0;
    virtual HRESULT __stdcall get_Azimuth (
        double * Azimuth ) = 0;
    virtual HRESULT __stdcall put_Azimuth (
        double Azimuth ) = 0;
    virtual HRESULT __stdcall Rotate (
        double Angle ) = 0;
    virtual HRESULT __stdcall PolarUpdate (
        double distanceFactor,
        double dAzimuth,
        double dInclination,
        VARIANT_BOOL bLimitInclination ) = 0;
    virtual HRESULT __stdcall Apply ( ) = 0;
    virtual HRESULT __stdcall SetViewport (
        long x,
        long y,
        long Width,
        long height ) = 0;
    virtual HRESULT __stdcall GetViewport (
        long * x,
        long * y,
        long * Width,
        long * height ) = 0;
    virtual HRESULT __stdcall SetBackgroundColor (
        float red,
        float green,
        float blue ) = 0;
    virtual HRESULT __stdcall GetBackgroundColor (
        float * pRed,
        float * pGreen,
        float * pBlue ) = 0;
    virtual HRESULT __stdcall RecalcUp ( ) = 0;
    virtual HRESULT __stdcall PropertiesChanged ( ) = 0;
    virtual HRESULT __stdcall SetDefaultsMBB (
        struct IEnvelope * pExtent ) = 0;
    virtual HRESULT __stdcall SetDefaultsSphere (
        struct IPoint * pCenter,
        double radius ) = 0;
    virtual HRESULT __stdcall QueryViewingPlatformMBB (
        struct IEnvelope * pExtent,
        double * pNearPlane,
        double * pFarPlane,
        double * pAngle,
        double * pAspect ) = 0;
    virtual HRESULT __stdcall QueryViewingPlatformSphere (
        struct IPoint * pCenter,
        double radius,
        double * pNearPlane,
        double * pFarPlane,
        double * pAngle,
        double * pAspect ) = 0;
    virtual HRESULT __stdcall QueryOrthoViewingPlatform (
        struct IEnvelope * pInExtent,
        struct IEnvelope * pOutExtent,
        double * pScale ) = 0;
    virtual HRESULT __stdcall get_OrthoViewingExtent (
        struct IEnvelope * * ppVisExtent ) = 0;
    virtual HRESULT __stdcall ReplayFrame (
        struct ISceneGraph * pSceneGraph ) = 0;
    virtual HRESULT __stdcall CanSeeMBB (
        struct IEnvelope * pExtent,
        VARIANT_BOOL * canSee ) = 0;
    virtual HRESULT __stdcall CanSeeSphere (
        struct IPoint * pCenter,
        double radius,
        VARIANT_BOOL * canSee ) = 0;
    virtual HRESULT __stdcall QueryDistanceToMBB (
        struct IEnvelope * pExtent,
        double * distance ) = 0;
    virtual HRESULT __stdcall QueryDistanceToSphere (
        struct IPoint * pCenter,
        double radius,
        double * distance ) = 0;
    virtual HRESULT __stdcall QueryDistanceToSphereCenter (
        struct IPoint * pCenter,
        double radius,
        double * distance ) = 0;
    virtual HRESULT __stdcall QueryIdentifyVector (
        long dx,
        long dy,
        struct IVector3D * pIdentifyVect ) = 0;
    virtual HRESULT __stdcall GetIdentifyVector (
        struct IPoint * pCursor,
        struct IVector3D * * result ) = 0;
    virtual HRESULT __stdcall GetIdentifyRay (
        long dx,
        long dy,
        struct IRay * * ppRay ) = 0;
    virtual HRESULT __stdcall Move (
        enum esriCameraMovementType direction,
        double factor ) = 0;
    virtual HRESULT __stdcall Pan (
        struct IPoint * startPoint,
        struct IPoint * endPoint ) = 0;
    virtual HRESULT __stdcall LevelTargetToObs ( ) = 0;
    virtual HRESULT __stdcall LevelObsToTarget ( ) = 0;
    virtual HRESULT __stdcall HTurnAround (
        double dAzimuth ) = 0;
    virtual HRESULT __stdcall Zoom (
        double ratio ) = 0;
    virtual HRESULT __stdcall ZoomToRect (
        struct IEnvelope * pExtent ) = 0;
    virtual HRESULT __stdcall get_Scale (
        double * pScale ) = 0;
    virtual HRESULT __stdcall put_MultiPhaseRendering (
        VARIANT_BOOL pbMultiPhase ) = 0;
    virtual HRESULT __stdcall get_MultiPhaseRendering (
        VARIANT_BOOL * pbMultiPhase ) = 0;
    virtual HRESULT __stdcall put_VerticalExaggeration (
        double _arg1 ) = 0;
    virtual HRESULT __stdcall SetCoordOrigin (
        double xOrig,
        double yOrig,
        double zOrig ) = 0;
};

enum esri3DProjectionType
{
    esriPerspectiveProjection = 1,
    esriOrthoProjection = 2
};

enum esriCameraMovementType
{
    esriCameraMoveAway = 1,
    esriCameraMoveToward = 2,
    esriCameraMoveLeft = 3,
    esriCameraMoveRight = 4,
    esriCameraMoveUp = 5,
    esriCameraMoveDown = 6
};

enum esri3DOutputImageType
{
    BMP = 1,
    JPEG = 2
};

enum esriScenePickMode
{
    esriScenePickGeography = 1,
    esriScenePickGraphics = 2,
    esriScenePickAll = 3,
    esriScenePickAllPlus = 4,
    esriScenePickPlane = 5,
    esriScenePickSphere = 6
};

struct __declspec(uuid("768d13f2-9a2d-11d4-b270-00508bcdde28"))
IHit3DSet : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Hits (
        struct IArray * ppHits ) = 0;
    virtual HRESULT __stdcall get_Hits (
        struct IArray * * ppHits ) = 0;
    virtual HRESULT __stdcall Topmost (
        double factor ) = 0;
    virtual HRESULT __stdcall OnePerLayer ( ) = 0;
};

struct __declspec(uuid("bbf1af30-a6ec-11d5-b2a0-00508bcdde28"))
IAnimationType : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall get_CLSID (
        struct IUID * * ppCLSID ) = 0;
    virtual HRESULT __stdcall get_KeyframeCLSID (
        struct IUID * * ppCLSID ) = 0;
    virtual HRESULT __stdcall get_AppliesToObject (
        VARIANT pObject,
        VARIANT_BOOL * pbApplies ) = 0;
    virtual HRESULT __stdcall get_PropertyCount (
        long * pPropCount ) = 0;
    virtual HRESULT __stdcall get_PropertyType (
        long index,
        enum esriAnimationPropertyType * pPropType ) = 0;
    virtual HRESULT __stdcall get_PropertyName (
        long index,
        BSTR * pPropName ) = 0;
    virtual HRESULT __stdcall get_IsEnumProperty (
        long index,
        VARIANT_BOOL * pbIsEnum ) = 0;
    virtual HRESULT __stdcall get_EnumPropertyValueName (
        long index,
        long Value,
        BSTR * pValueName ) = 0;
    virtual HRESULT __stdcall get_EnumPropertyMinValue (
        long index,
        long * pMinValue ) = 0;
    virtual HRESULT __stdcall get_EnumPropertyMaxValue (
        long index,
        long * pMaxValue ) = 0;
    virtual HRESULT __stdcall get_ObjectArray (
        struct IScene * pScene,
        struct IArray * * ppObjects ) = 0;
    virtual HRESULT __stdcall get_AnimationObjectID (
        struct IScene * pScene,
        VARIANT pObject,
        long * pObjectID ) = 0;
    virtual HRESULT __stdcall get_AnimationObjectByID (
        struct IScene * pScene,
        long objectID,
        VARIANT * ppObject ) = 0;
    virtual HRESULT __stdcall get_AnimationObjectName (
        struct IScene * pScene,
        VARIANT pObject,
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall ResetObject (
        struct IScene * pScene,
        VARIANT pObject ) = 0;
};

struct __declspec(uuid("767c9b53-5a8e-11d5-b295-00508bcdde28"))
IKeyframe : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_ActiveProperties (
        struct ILongArray * * ppActiveProps ) = 0;
    virtual HRESULT __stdcall put_ActiveProperties (
        struct ILongArray * ppActiveProps ) = 0;
    virtual HRESULT __stdcall get_IsActiveProperty (
        long propIndex,
        VARIANT_BOOL * pbIsActiveProp ) = 0;
    virtual HRESULT __stdcall put_IsActiveProperty (
        long propIndex,
        VARIANT_BOOL pbIsActiveProp ) = 0;
    virtual HRESULT __stdcall get_PropertyValueInt (
        long propIndex,
        int * pIntValue ) = 0;
    virtual HRESULT __stdcall get_PropertyValueLong (
        long propIndex,
        long * pLongValue ) = 0;
    virtual HRESULT __stdcall get_PropertyValueDouble (
        long propIndex,
        double * pDoubleValue ) = 0;
    virtual HRESULT __stdcall get_PropertyValueBoolean (
        long propIndex,
        VARIANT_BOOL * pBoolValue ) = 0;
    virtual HRESULT __stdcall get_PropertyValuePoint (
        long propIndex,
        struct IPoint * * ppPoint ) = 0;
    virtual HRESULT __stdcall get_PropertyValueExtent (
        long propIndex,
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall get_PropertyValueRGBColor (
        long propIndex,
        struct IColor * * ppColor ) = 0;
    virtual HRESULT __stdcall put_PropertyValueInt (
        long propIndex,
        int pIntValue ) = 0;
    virtual HRESULT __stdcall put_PropertyValueLong (
        long propIndex,
        long pLongValue ) = 0;
    virtual HRESULT __stdcall put_PropertyValueDouble (
        long propIndex,
        double pDoubleValue ) = 0;
    virtual HRESULT __stdcall put_PropertyValueBoolean (
        long propIndex,
        VARIANT_BOOL pBoolValue ) = 0;
    virtual HRESULT __stdcall put_PropertyValuePoint (
        long propIndex,
        struct IPoint * ppPoint ) = 0;
    virtual HRESULT __stdcall put_PropertyValueExtent (
        long propIndex,
        struct IEnvelope * ppExtent ) = 0;
    virtual HRESULT __stdcall put_PropertyValueRGBColor (
        long propIndex,
        struct IColor * ppColor ) = 0;
    virtual HRESULT __stdcall put_TimeStamp (
        double pTimeStamp ) = 0;
    virtual HRESULT __stdcall get_TimeStamp (
        double * pTimeStamp ) = 0;
    virtual HRESULT __stdcall get_AnimationType (
        struct IAnimationType * * ppAnimationType ) = 0;
    virtual HRESULT __stdcall Apply (
        struct IScene * pScene,
        VARIANT pObject ) = 0;
    virtual HRESULT __stdcall CaptureProperties (
        struct IScene * pScene,
        VARIANT pObject ) = 0;
    virtual HRESULT __stdcall Interpolate (
        struct IScene * pScene,
        VARIANT pObject,
        long propertyIndex,
        double time,
        struct IKeyframe * pNextKeyframe,
        struct IKeyframe * pPrevKeyframe,
        struct IKeyframe * pAfterNextKeyframe ) = 0;
    virtual HRESULT __stdcall get_ObjectNeedsRefresh (
        VARIANT_BOOL * pNeedsRefresh ) = 0;
    virtual HRESULT __stdcall RefreshObject (
        struct IScene * pScene,
        VARIANT pObject ) = 0;
};

struct __declspec(uuid("bd3c7aad-a869-11d5-b2a0-00508bcdde28"))
IBookmarkToKeyframe : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ConvertToKeyframe (
        struct IKeyframe * * ppOutKeyframe ) = 0;
};

struct __declspec(uuid("bbf1af31-a6ec-11d5-b2a0-00508bcdde28"))
IAnimationTrack : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ActiveProperties (
        struct ILongArray * * ppActiveProps ) = 0;
    virtual HRESULT __stdcall put_ActiveProperties (
        struct ILongArray * ppActiveProps ) = 0;
    virtual HRESULT __stdcall get_IsActiveProperty (
        long propIndex,
        VARIANT_BOOL * pbIsActiveProp ) = 0;
    virtual HRESULT __stdcall put_IsActiveProperty (
        long propIndex,
        VARIANT_BOOL pbIsActiveProp ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_AnimationType (
        struct IAnimationType * * ppAnimationType ) = 0;
    virtual HRESULT __stdcall putref_AnimationType (
        struct IAnimationType * ppAnimationType ) = 0;
    virtual HRESULT __stdcall get_KeyframeCount (
        long * pKeyframeCount ) = 0;
    virtual HRESULT __stdcall get_Keyframe (
        long index,
        struct IKeyframe * * ppKeyframe ) = 0;
    virtual HRESULT __stdcall get_IsCycle (
        VARIANT_BOOL * pbIsCycle ) = 0;
    virtual HRESULT __stdcall put_IsCycle (
        VARIANT_BOOL pbIsCycle ) = 0;
    virtual HRESULT __stdcall get_BeginTime (
        double * pBeginTime ) = 0;
    virtual HRESULT __stdcall put_BeginTime (
        double pBeginTime ) = 0;
    virtual HRESULT __stdcall get_EndTime (
        double * pEndTime ) = 0;
    virtual HRESULT __stdcall put_EndTime (
        double pEndTime ) = 0;
    virtual HRESULT __stdcall get_IsEnabled (
        VARIANT_BOOL * pbIsEnabled ) = 0;
    virtual HRESULT __stdcall put_IsEnabled (
        VARIANT_BOOL pbIsEnabled ) = 0;
    virtual HRESULT __stdcall put_EvenTimeStamps (
        VARIANT_BOOL pbEvenTimeStamps ) = 0;
    virtual HRESULT __stdcall get_EvenTimeStamps (
        VARIANT_BOOL * pbEvenTimeStamps ) = 0;
    virtual HRESULT __stdcall put_ApplyToAllViewers (
        VARIANT_BOOL pbApplyToAllViewers ) = 0;
    virtual HRESULT __stdcall get_ApplyToAllViewers (
        VARIANT_BOOL * pbApplyToAllViewers ) = 0;
    virtual HRESULT __stdcall get_AttachedObjectsCount (
        long * pObjectCount ) = 0;
    virtual HRESULT __stdcall get_AttachedObjects (
        struct IArray * * ppObjectArray ) = 0;
    virtual HRESULT __stdcall get_IsAttached (
        IUnknown * pObject,
        VARIANT_BOOL * pbIsAttached ) = 0;
    virtual HRESULT __stdcall put_AttachedObjects (
        struct IArray * ppObjectArray ) = 0;
    virtual HRESULT __stdcall AttachObject (
        IUnknown * pObject ) = 0;
    virtual HRESULT __stdcall DetachObject (
        IUnknown * pObject ) = 0;
    virtual HRESULT __stdcall DetachAllObjects ( ) = 0;
    virtual HRESULT __stdcall ResetAttachedObjects (
        struct IScene * pScene ) = 0;
    virtual HRESULT __stdcall InsertKeyframe (
        struct IKeyframe * pKeyframe,
        long index ) = 0;
    virtual HRESULT __stdcall RemoveKeyframe (
        long index ) = 0;
    virtual HRESULT __stdcall RemoveAllKeyframes ( ) = 0;
    virtual HRESULT __stdcall FindKeyframe (
        BSTR Name,
        struct IKeyframe * * ppKeyframe ) = 0;
    virtual HRESULT __stdcall MoveKeyframe (
        long originIndex,
        long destinationIndex ) = 0;
    virtual HRESULT __stdcall SortKeyframes ( ) = 0;
    virtual HRESULT __stdcall ResetTimeStamps ( ) = 0;
    virtual HRESULT __stdcall SaveObjectProperties (
        struct IScene * pScene,
        long index ) = 0;
    virtual HRESULT __stdcall RestoreObjectProperties (
        struct IScene * pScene,
        long index ) = 0;
    virtual HRESULT __stdcall InterpolateObjectProperties (
        struct IScene * pScene,
        double time ) = 0;
};

struct __declspec(uuid("4fedc9cb-a7be-11d5-b2a0-00508bcdde28"))
AnimationTrack;
    // [ default ] interface IUnknown
    // interface IAnimationTrack
    // interface IPersistStream

struct __declspec(uuid("24aa4277-adf3-11d5-b2a0-00508bcdde28"))
LayerKeyframe;
    // [ default ] interface IUnknown
    // interface IKeyframe

struct __declspec(uuid("24aa4278-adf3-11d5-b2a0-00508bcdde28"))
SceneKeyframe;
    // [ default ] interface IUnknown
    // interface IKeyframe

struct __declspec(uuid("500f4707-a798-11d5-b2a0-00508bcdde28"))
AnimationTypeCamera;
    // [ default ] interface IUnknown
    // interface IAnimationType

struct __declspec(uuid("24aa4279-adf3-11d5-b2a0-00508bcdde28"))
AnimationTypeLayer;
    // [ default ] interface IUnknown
    // interface IAnimationType

struct __declspec(uuid("24aa427a-adf3-11d5-b2a0-00508bcdde28"))
AnimationTypeScene;
    // [ default ] interface IUnknown
    // interface IAnimationType

enum esriAnimationState
{
    esriAnimationStopped = 1,
    esriAnimationPlaying = 2,
    esriAnimationPausedPlay = 3,
    esriAnimationRecording = 4,
    esriAnimationPausedRecord = 5
};

enum esriAnimationPlayMode
{
    esriAnimationPlayOnceForward = 0,
    esriAnimationPlayOnceReverse = 1,
    esriAnimationPlayLoopForward = 2,
    esriAnimationPlayLoopReverse = 3
};

struct __declspec(uuid("a4c0b647-82ad-11d5-b29b-00508bcdde28"))
ISxAnimationEnvironment : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SelectedAnimationType (
        struct IAnimationType * * ppAnimType ) = 0;
    virtual HRESULT __stdcall putref_SelectedAnimationType (
        struct IAnimationType * ppAnimType ) = 0;
    virtual HRESULT __stdcall get_SelectedTracks (
        struct IArray * * ppTracks ) = 0;
    virtual HRESULT __stdcall putref_SelectedTracks (
        struct IArray * ppTracks ) = 0;
    virtual HRESULT __stdcall get_SelectedKeyframes (
        struct ILongArray * * ppIndices ) = 0;
    virtual HRESULT __stdcall putref_SelectedKeyframes (
        struct ILongArray * ppIndices ) = 0;
    virtual HRESULT __stdcall get_State (
        enum esriAnimationState * pState ) = 0;
    virtual HRESULT __stdcall put_State (
        enum esriAnimationState pState ) = 0;
    virtual HRESULT __stdcall get_AnimationDuration (
        double * pSeconds ) = 0;
    virtual HRESULT __stdcall put_AnimationDuration (
        double pSeconds ) = 0;
    virtual HRESULT __stdcall get_IsIntervalPlay (
        VARIANT_BOOL * pbIsInterval ) = 0;
    virtual HRESULT __stdcall put_IsIntervalPlay (
        VARIANT_BOOL pbIsInterval ) = 0;
    virtual HRESULT __stdcall GetPlayInterval (
        double * pBeginTime,
        double * pEndTime ) = 0;
    virtual HRESULT __stdcall PutPlayInterval (
        double BeginTime,
        double EndTime ) = 0;
    virtual HRESULT __stdcall get_AnimationControlsHWnd (
        OLE_HANDLE * pHwnd ) = 0;
    virtual HRESULT __stdcall put_AnimationControlsHWnd (
        OLE_HANDLE pHwnd ) = 0;
};

struct __declspec(uuid("f406fe81-1101-47eb-9a45-5c4f64b9a0f0"))
ISxAnimationEnvironment2 : ISxAnimationEnvironment
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PlayTime (
        double * pTime ) = 0;
    virtual HRESULT __stdcall put_PlayTime (
        double pTime ) = 0;
    virtual HRESULT __stdcall get_PlayInAllViewers (
        VARIANT_BOOL * pbPlayInAll ) = 0;
    virtual HRESULT __stdcall put_PlayInAllViewers (
        VARIANT_BOOL pbPlayInAll ) = 0;
    virtual HRESULT __stdcall get_PlayMode (
        enum esriAnimationPlayMode * pPlayMode ) = 0;
    virtual HRESULT __stdcall put_PlayMode (
        enum esriAnimationPlayMode pPlayMode ) = 0;
};

struct __declspec(uuid("592d0b58-82ad-11d5-b29b-00508bcdde28"))
SxAnimationEnvironment;
    // [ default ] interface IUnknown
    // interface ISxAnimationEnvironment2
    // interface IPersistStream

enum esriDisplayType
{
    esriNonstereoDisplay = 1,
    esriStereoDisplay = 2
};

enum esriEyeType
{
    esriLeftEye = 1,
    esriRightEye = 2
};

enum esriStereoViewType
{
    esriRedBlueStereoView = 1,
    esriQuadBufferedStereoView = 2,
    esriFreeStereoView = 3
};

struct __declspec(uuid("44e9928e-bf72-4838-b956-2940d0564f3f"))
ICamera2 : ICamera
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetupProjection (
        struct IEnvelope * Extent,
        WKSPointZ * origin ) = 0;
    virtual HRESULT __stdcall SetupProjectionForSelection (
        struct IEnvelope * Extent,
        WKSPointZ * origin ) = 0;
    virtual HRESULT __stdcall SetupPerspectiveProjetion (
        double nearPlane,
        double farPlane,
        double vAngle,
        double vAspect,
        VARIANT_BOOL bUpdateViewport ) = 0;
    virtual HRESULT __stdcall get_DisplayType (
        enum esriDisplayType * pType ) = 0;
    virtual HRESULT __stdcall put_DisplayType (
        enum esriDisplayType pType ) = 0;
};

struct __declspec(uuid("1a8927bc-9f9a-44ba-a921-3c3ac1aa476c"))
IStereoCamera : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_EyeType (
        enum esriEyeType * pType ) = 0;
    virtual HRESULT __stdcall put_EyeType (
        enum esriEyeType pType ) = 0;
    virtual HRESULT __stdcall get_StereoViewType (
        enum esriStereoViewType * pType ) = 0;
    virtual HRESULT __stdcall put_StereoViewType (
        enum esriStereoViewType pType ) = 0;
    virtual HRESULT __stdcall get_EyeSeparation (
        double * EyeSeparation ) = 0;
    virtual HRESULT __stdcall put_EyeSeparation (
        double EyeSeparation ) = 0;
    virtual HRESULT __stdcall get_Parallax (
        double * pParallax ) = 0;
    virtual HRESULT __stdcall put_Parallax (
        double pParallax ) = 0;
    virtual HRESULT __stdcall get_LRviewFirst (
        enum esriEyeType * pView ) = 0;
    virtual HRESULT __stdcall put_LRviewFirst (
        enum esriEyeType pView ) = 0;
    virtual HRESULT __stdcall get_IsStereoSupported (
        VARIANT_BOOL * pbStereo ) = 0;
};

struct __declspec(uuid("b3fa5970-ada3-11d2-9fae-00c04f8ece3d"))
Camera;
    // [ default ] interface IUnknown
    // interface ICamera
    // interface ICamera2
    // interface IStereoCamera

struct __declspec(uuid("bcdb3324-9afa-11d5-b29f-00508bcdde28"))
IBookmark3D : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall Capture (
        struct ICamera * pCamera ) = 0;
    virtual HRESULT __stdcall Apply (
        struct ISceneViewer * pViewer,
        VARIANT_BOOL bAnimate,
        double animDuration ) = 0;
};

struct __declspec(uuid("bcdb3323-9afa-11d5-b29f-00508bcdde28"))
Bookmark3D;
    // [ default ] interface IUnknown
    // interface IBookmark3D
    // interface IKeyframe
    // interface IBookmarkToKeyframe
    // interface IPersistStream

struct __declspec(uuid("4d8ca7d2-0aaa-4502-adc7-0388051c5f5c"))
IViewers3D : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Scene (
        struct IScene * * pVal ) = 0;
    virtual HRESULT __stdcall putref_Scene (
        struct IScene * pVal ) = 0;
    virtual HRESULT __stdcall RegisterViewer (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall UnregisterViewer (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall FindViewer (
        BSTR Caption,
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall GetAllViewers (
        struct IArray * * ppViewers ) = 0;
    virtual HRESULT __stdcall putref_ActiveViewer (
        struct ISceneViewer * ppViewer ) = 0;
    virtual HRESULT __stdcall get_ActiveViewer (
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall RefreshViewers ( ) = 0;
    virtual HRESULT __stdcall get_IsNavigating (
        VARIANT_BOOL * pbIsNavigating ) = 0;
    virtual HRESULT __stdcall put_IsNavigating (
        VARIANT_BOOL pbIsNavigating ) = 0;
    virtual HRESULT __stdcall put_GestureEnabled (
        VARIANT_BOOL pbEnabled ) = 0;
    virtual HRESULT __stdcall get_GestureEnabled (
        VARIANT_BOOL * pbEnabled ) = 0;
    virtual HRESULT __stdcall SetBackgroundColor (
        float red,
        float green,
        float blue ) = 0;
    virtual HRESULT __stdcall GetBackgroundColor (
        float * pRed,
        float * pGreen,
        float * pBlue ) = 0;
    virtual HRESULT __stdcall putref_CurrentViewer (
        struct ISceneViewer * ppViewer ) = 0;
    virtual HRESULT __stdcall get_CurrentViewer (
        struct ISceneViewer * * ppViewer ) = 0;
    virtual HRESULT __stdcall ReplayFrame (
        struct ICamera * Camera ) = 0;
};

struct __declspec(uuid("ec4e4b1c-5a64-499d-a475-bc2ddc237838"))
IBasicScene : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BasicDisplay (
        struct IViewers3D * * pDisplay ) = 0;
    virtual HRESULT __stdcall SaveAnimation (
        BSTR pFilename ) = 0;
    virtual HRESULT __stdcall LoadAnimation (
        BSTR pFilename ) = 0;
};

struct __declspec(uuid("ef879196-01de-11d4-ab69-0008c73fd50c"))
IGraphicsContainer3D : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        struct IElement * * ppElement ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall get_ElementCount (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Element (
        long index,
        struct IElement * * ppElement ) = 0;
    virtual HRESULT __stdcall BeginBatchUpdate ( ) = 0;
    virtual HRESULT __stdcall EndBatchUpdate ( ) = 0;
    virtual HRESULT __stdcall AddElement (
        struct IElement * Element ) = 0;
    virtual HRESULT __stdcall AddElements (
        struct IElementCollection * elements ) = 0;
    virtual HRESULT __stdcall DeleteElement (
        struct IElement * Element ) = 0;
    virtual HRESULT __stdcall DeleteAllElements ( ) = 0;
    virtual HRESULT __stdcall MoveElementToGroup (
        struct IElement * pElement,
        struct IGroupElement * pGroup ) = 0;
    virtual HRESULT __stdcall MoveElementFromGroup (
        struct IGroupElement * pGroup,
        struct IElement * pElement ) = 0;
    virtual HRESULT __stdcall LocateElements (
        struct IPoint * pPoint,
        double tolerance,
        struct IEnumElement * * ppElements ) = 0;
    virtual HRESULT __stdcall LocateElementsByEnvelope (
        struct IEnvelope * pEnvelope,
        struct IEnumElement * * ppElements ) = 0;
};

struct __declspec(uuid("79103a54-1e53-11d4-a109-00c04f8ece27"))
IGraphicsSelection : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SelectElement (
        struct IElement * pElement ) = 0;
    virtual HRESULT __stdcall SelectElements (
        struct IEnumElement * pElements ) = 0;
    virtual HRESULT __stdcall SelectAllElements ( ) = 0;
    virtual HRESULT __stdcall UnselectElement (
        struct IElement * pElement ) = 0;
    virtual HRESULT __stdcall UnselectElements (
        struct IEnumElement * pElements ) = 0;
    virtual HRESULT __stdcall UnselectAllElements ( ) = 0;
    virtual HRESULT __stdcall DeleteAllSelectedElements ( ) = 0;
    virtual HRESULT __stdcall SwitchSelection ( ) = 0;
    virtual HRESULT __stdcall get_SelectedElements (
        struct IEnumElement * * pElements ) = 0;
    virtual HRESULT __stdcall get_SelectedElementCount (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_SelectedElementsExtent (
        struct IEnvelope * * ppExtent ) = 0;
    virtual HRESULT __stdcall ElementSelected (
        struct IElement * Element,
        VARIANT_BOOL * pbIsSelected ) = 0;
};

struct __declspec(uuid("bcdb3325-9afa-11d5-b29f-00508bcdde28"))
ISceneBookmarks : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Bookmarks (
        struct IArray * * ppBookmarks ) = 0;
    virtual HRESULT __stdcall AddBookmark (
        struct IBookmark3D * pBookmark ) = 0;
    virtual HRESULT __stdcall FindBookmark (
        BSTR Name,
        struct IBookmark3D * * ppBookmark ) = 0;
    virtual HRESULT __stdcall RemoveBookmark (
        struct IBookmark3D * bookmark ) = 0;
    virtual HRESULT __stdcall RemoveAllBookmarks ( ) = 0;
    virtual HRESULT __stdcall get_BookmarkCount (
        long * pBookmarkCount ) = 0;
    virtual HRESULT __stdcall SaveBookmarks (
        struct IStream * pStm ) = 0;
    virtual HRESULT __stdcall LoadBookmarks (
        struct IStream * pStm ) = 0;
};

struct __declspec(uuid("fa3dba5b-a879-11d5-b2a0-00508bcdde28"))
IAnimationTracks : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AnimationTypes (
        struct IArray * * ppAnimationTypes ) = 0;
    virtual HRESULT __stdcall get_TrackCount (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Tracks (
        struct IArray * * ppTracks ) = 0;
    virtual HRESULT __stdcall get_TracksOfType (
        struct IAnimationType * pType,
        struct IArray * * ppTracks ) = 0;
    virtual HRESULT __stdcall AddTrack (
        struct IAnimationTrack * pTrack ) = 0;
    virtual HRESULT __stdcall FindTrack (
        BSTR Name,
        struct IAnimationTrack * * ppTrack ) = 0;
    virtual HRESULT __stdcall RemoveTrack (
        struct IAnimationTrack * pTrack ) = 0;
    virtual HRESULT __stdcall RemoveAllTracks ( ) = 0;
    virtual HRESULT __stdcall SaveTracks (
        struct IStream * pStm ) = 0;
    virtual HRESULT __stdcall LoadTracks (
        struct IStream * pStm ) = 0;
    virtual HRESULT __stdcall DetachObject (
        IUnknown * pObject ) = 0;
    virtual HRESULT __stdcall RefreshAttachedObjects ( ) = 0;
    virtual HRESULT __stdcall ApplyTracks (
        struct ISceneViewer * pViewer,
        double time,
        double duration ) = 0;
    virtual HRESULT __stdcall ChangePriority (
        struct IAnimationTrack * pTrack,
        VARIANT_BOOL bAbsolute,
        VARIANT_BOOL bInSameType,
        long changeInIndex ) = 0;
};

struct __declspec(uuid("b7a0a25c-24f7-11d3-9f4d-00c04f6bc5f4"))
Scene;
    // [ default ] interface IUnknown
    // interface IScene
    // interface IBasicScene
    // interface IBasicMap
    // interface IMapLayers
    // interface ISelectionEvents
    // interface ITableCollection
    // interface IStandaloneTableCollection
    // interface ISceneBookmarks
    // interface IAnimationTracks
    // interface ISupportErrorInfo
    // interface IConnectionPointContainer
    // interface IPersistStream
    // [ default, source ] interface IActiveViewEvents

struct __declspec(uuid("4c87a8f0-01e3-11d4-ab69-0008c73fd50c"))
GraphicsLayer3D;
    // [ default ] interface IUnknown
    // interface ILayer
    // interface IGraphicsLayer
    // interface IGraphicsContainer3D
    // interface IGraphicsSelection
    // interface ILayerExtensions
    // interface ILayerEvents
    // interface ILayerEffects
    // interface IGeoDataset
    // interface IConnectionPointContainer
    // interface IPersistStream
    // [ default, source ] interface ISceneRendererEvents
    // [ source ] interface IActiveViewEvents
    // interface IPublishLayer

struct __declspec(uuid("bbc7c2e8-1fb3-11d4-ab72-0008c73fd50c"))
ISceneRendererEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SelectionChanged (
        struct ISceneRenderer * pSource ) = 0;
};

struct __declspec(uuid("4a4cece5-f53a-11d3-80d9-00c04fa0adf8"))
IFeature3DProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Locate (
        long hint,
        struct IRay * pQueryRay,
        struct IFeature * * ppFeat,
        struct IPoint * * ppPoint ) = 0;
    virtual HRESULT __stdcall ApplyFeatureProperties (
        struct IFeature * feature,
        struct IGeometry * * newGeometry,
        VARIANT_BOOL ignoreOffsetAndScale ) = 0;
    virtual HRESULT __stdcall PrepareQueryFilter (
        struct IFeatureClass * pFc,
        struct IQueryFilter * pQueryFilter ) = 0;
};

struct __declspec(uuid("ff699cbe-9340-4724-9b4c-f88979314bc0"))
IFeature3DProperties2 : IFeature3DProperties
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall LocateSymbolized (
        long hint,
        struct IRay * pQueryRay,
        struct IFeatureLayer * pLayer,
        struct IFeature * * ppFeat,
        struct IPoint * * ppPoint ) = 0;
};

struct __declspec(uuid("3c957f4d-2120-11d4-a383-00c04f6bc619"))
IExpression : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Expression (
        BSTR * pExpression ) = 0;
    virtual HRESULT __stdcall put_Expression (
        BSTR pExpression ) = 0;
    virtual HRESULT __stdcall Calculate (
        struct IFeature * pFeature,
        double * result ) = 0;
    virtual HRESULT __stdcall IsValid (
        struct ITable * pTable,
        VARIANT_BOOL * valid ) = 0;
};

struct __declspec(uuid("a5a8dc61-268c-11d4-914a-0080c7074326"))
Basic3DProperties;
    // [ default ] interface IUnknown
    // interface IDataLayerExtension
    // interface I3DProperties
    // interface IPersistStream

struct __declspec(uuid("b7a0a25d-24f7-11d3-9f4d-00c04f6bc5f4"))
Tin3DProperties;
    // [ default ] interface IUnknown
    // interface IDataLayerExtension
    // interface I3DProperties
    // interface IPersistStream

struct __declspec(uuid("4a4cece3-f53a-11d3-80d9-00c04fa0adf8"))
Raster3DProperties;
    // [ default ] interface IUnknown
    // interface IDataLayerExtension
    // interface I3DProperties
    // interface IPersistStream

struct __declspec(uuid("4a4cece4-f53a-11d3-80d9-00c04fa0adf8"))
Feature3DProperties;
    // [ default ] interface IUnknown
    // interface IDataLayerExtension
    // interface IFeature3DProperties
    // interface IFeature3DProperties2
    // interface I3DProperties
    // interface IPersistStream

struct __declspec(uuid("3044c30e-37d0-11d4-a167-444553547777"))
IVRMLExporter : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Indentation (
        VARIANT_BOOL pIndentation ) = 0;
    virtual HRESULT __stdcall get_Indentation (
        VARIANT_BOOL * pIndentation ) = 0;
    virtual HRESULT __stdcall put_SaveOnlyVisible (
        VARIANT_BOOL pSaveOnlyVisible ) = 0;
    virtual HRESULT __stdcall get_SaveOnlyVisible (
        VARIANT_BOOL * pSaveOnlyVisible ) = 0;
    virtual HRESULT __stdcall put_IsYUp (
        VARIANT_BOOL pIsYUp ) = 0;
    virtual HRESULT __stdcall get_IsYUp (
        VARIANT_BOOL * pIsYUp ) = 0;
    virtual HRESULT __stdcall put_MoveToOrigin (
        VARIANT_BOOL pbMoveToOrigin ) = 0;
    virtual HRESULT __stdcall get_MoveToOrigin (
        VARIANT_BOOL * pbMoveToOrigin ) = 0;
    virtual HRESULT __stdcall put_UseGeoVRML (
        VARIANT_BOOL pbUseGeoVRML ) = 0;
    virtual HRESULT __stdcall get_UseGeoVRML (
        VARIANT_BOOL * pbUseGeoVRML ) = 0;
    virtual HRESULT __stdcall put_UseElevationGrid (
        VARIANT_BOOL pbUseElevationGrid ) = 0;
    virtual HRESULT __stdcall get_UseElevationGrid (
        VARIANT_BOOL * pbUseElevationGrid ) = 0;
    virtual HRESULT __stdcall put_Quality (
        int Quality ) = 0;
    virtual HRESULT __stdcall get_Quality (
        int * Quality ) = 0;
};

enum esri3DAxis
{
    esriXAxis = 0,
    esriYAxis = 1,
    esriZAxis = 2
};

enum esriSceneNodeType
{
    esriSceneAnyNode = 0,
    esriSceneGroupNode = 1,
    esriSceneGeometryNode = 2,
    esriSceneChoiceNode = 3,
    esriSceneTransformNode = 4,
    esriSceneLayerNode = 5,
    esriSceneTileNode = 6
};

enum esriSceneGeomNodeType
{
    esriSceneGeomGeographyNode = 0,
    esriSceneGeomGraphicsNode = 1
};

enum esriSceneTraversalFlag
{
    esriSceneDrawTraversal = 1,
    esriScenePickTraversal = 2,
    esriSceneImmediateDrawTraversal = 4,
    esriSceneTransparencyTraversal = 8,
    esriSceneDrawWhileNavigateTraversal = 16,
    esriSceneDrawWhileStillTraversal = 32,
    esriSceneLightingTraversal = 64,
    esriSceneSmoothShadingTraversal = 128,
    esriSceneNeedMBBUpdateTraversal = 256
};

struct __declspec(uuid("bd62a8fa-8833-11d4-ab87-0008c73fd50c"))
IMessageDispatcher : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CancelOnEscPress (
        VARIANT_BOOL * pbCancelOnEscPress ) = 0;
    virtual HRESULT __stdcall put_CancelOnEscPress (
        VARIANT_BOOL pbCancelOnEscPress ) = 0;
    virtual HRESULT __stdcall get_CancelOnClick (
        VARIANT_BOOL * pbCancelOnClick ) = 0;
    virtual HRESULT __stdcall put_CancelOnClick (
        VARIANT_BOOL pbCancelOnClick ) = 0;
    virtual HRESULT __stdcall get_Cancelled (
        OLE_HANDLE hWnd,
        VARIANT_BOOL * pbCancelled ) = 0;
    virtual HRESULT __stdcall Dispatch (
        OLE_HANDLE hWnd,
        VARIANT_BOOL bSingle,
        VARIANT * pbCancelled ) = 0;
    virtual HRESULT __stdcall Remove (
        OLE_HANDLE hWnd,
        VARIANT_BOOL bSingle,
        VARIANT * pbCancelled ) = 0;
};

struct __declspec(uuid("f7873924-9a19-11d4-b270-00508bcdde28"))
IHit3D : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Point (
        struct IPoint * ppPoint ) = 0;
    virtual HRESULT __stdcall get_Point (
        struct IPoint * * ppPoint ) = 0;
    virtual HRESULT __stdcall putref_Owner (
        IUnknown * ppOwner ) = 0;
    virtual HRESULT __stdcall get_Owner (
        IUnknown * * ppOwner ) = 0;
    virtual HRESULT __stdcall putref_Object (
        IUnknown * ppObject ) = 0;
    virtual HRESULT __stdcall get_Object (
        IUnknown * * ppObject ) = 0;
    virtual HRESULT __stdcall put_DistanceToObserver (
        double pDistanceToObs ) = 0;
    virtual HRESULT __stdcall get_DistanceToObserver (
        double * pDistanceToObs ) = 0;
    virtual HRESULT __stdcall put_DistanceToRay (
        double pDistanceToRay ) = 0;
    virtual HRESULT __stdcall get_DistanceToRay (
        double * pDistanceToRay ) = 0;
    virtual HRESULT __stdcall SetDepthRange (
        double dMin,
        double dMax ) = 0;
    virtual HRESULT __stdcall GetDepthRange (
        double * pDMin,
        double * pDMax ) = 0;
    virtual HRESULT __stdcall put_ExactHit (
        VARIANT_BOOL hit ) = 0;
    virtual HRESULT __stdcall get_ExactHit (
        VARIANT_BOOL * hit ) = 0;
};

struct __declspec(uuid("1d1c669a-13de-11d4-80df-00c04fa0adf8"))
ISceneGraphEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ActiveViewerChanged (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall ViewerAdded (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall ViewerRemoved (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall InteractionStopped ( ) = 0;
    virtual HRESULT __stdcall RecordingStarted (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall RecordingStopped ( ) = 0;
    virtual HRESULT __stdcall BeforeDraw (
        struct ISceneViewer * pViewer,
        VARIANT_BOOL * pbHandled ) = 0;
    virtual HRESULT __stdcall AfterDraw (
        struct ISceneViewer * pViewer ) = 0;
};

struct __declspec(uuid("1d1c669b-13de-11d4-80df-00c04fa0adf8"))
ISceneGraphEventsDisp : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ActiveViewerChanged (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall ViewerAdded (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall ViewerRemoved (
        struct ISceneViewer * pViewer ) = 0;
    virtual HRESULT __stdcall InteractionStopped ( ) = 0;
    virtual HRESULT __stdcall RecordingStarted (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall RecordingStopped ( ) = 0;
    virtual HRESULT __stdcall BeforeDraw (
        struct ISceneViewer * pViewer,
        VARIANT_BOOL * pbHandled ) = 0;
    virtual HRESULT __stdcall AfterDraw (
        struct ISceneViewer * pViewer ) = 0;
};

struct __declspec(uuid("477ff406-c469-11d2-b1da-00c04fa33d14"))
SceneGraph;
    // [ default ] interface IUnknown
    // interface IActiveViewEvents
    // interface ISceneRendererEvents
    // interface ISceneGraph
    // interface IViewers3D
    // interface ISupportErrorInfo
    // interface IConnectionPointContainer
    // interface IDisplay3D
    // [ default, source ] interface ISceneGraphEventsDisp
    // [ source ] interface ISceneGraphEvents

struct __declspec(uuid("a1bf0693-63a1-4276-89ef-4951dd0cb37f"))
SceneGraphEvents;
    // [ default ] interface IUnknown
    // [ default, source ] interface ISceneGraphEvents

struct __declspec(uuid("517b7bc6-8833-11d4-ab87-0008c73fd50c"))
MessageDispatcher;
    // [ default ] interface IUnknown
    // interface IMessageDispatcher

struct __declspec(uuid("f7873923-9a19-11d4-b270-00508bcdde28"))
Hit3D;
    // [ default ] interface IUnknown
    // interface IHit3D

struct __declspec(uuid("768d13f1-9a2d-11d4-b270-00508bcdde28"))
Hit3DSet;
    // [ default ] interface IUnknown
    // interface IHit3DSet

struct __declspec(uuid("0aa361c1-06a2-11d5-9163-0080c7074326"))
ILayerRenderers : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RendererCount (
        long * RendererCount ) = 0;
    virtual HRESULT __stdcall GetRenderer (
        long index,
        IUnknown * * Renderer ) = 0;
    virtual HRESULT __stdcall AddRenderer (
        IUnknown * Renderer ) = 0;
    virtual HRESULT __stdcall InsertRenderer (
        IUnknown * Renderer,
        long index ) = 0;
    virtual HRESULT __stdcall RemoveRenderer (
        IUnknown * Renderer ) = 0;
    virtual HRESULT __stdcall ClearRenderers ( ) = 0;
};

struct __declspec(uuid("ea6581ec-082d-435c-8f73-b4161ca06f20"))
I3DViewer : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Caption (
        BSTR * pCaption ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR pCaption ) = 0;
    virtual HRESULT __stdcall get_Camera (
        struct ICamera * * ppCamera ) = 0;
    virtual HRESULT __stdcall putref_Camera (
        struct ICamera * ppCamera ) = 0;
    virtual HRESULT __stdcall MakeCurrent ( ) = 0;
    virtual HRESULT __stdcall Redraw (
        VARIANT_BOOL bCameraMoved ) = 0;
    virtual HRESULT __stdcall DrawToMetafile (
        OLE_HANDLE hDC,
        float resolutionFactor,
        long left,
        long top,
        long right,
        long bottom,
        VARIANT_BOOL bOffScreen ) = 0;
    virtual HRESULT __stdcall GetSnapshot (
        long Width,
        long height,
        enum esri3DOutputImageType Type,
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall GetScreenShot (
        enum esri3DOutputImageType Type,
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall get_hWnd (
        OLE_HANDLE * pHwnd ) = 0;
    virtual HRESULT __stdcall put_hWnd (
        OLE_HANDLE pHwnd ) = 0;
    virtual HRESULT __stdcall get_hDC (
        OLE_HANDLE * pHDC ) = 0;
    virtual HRESULT __stdcall put_hRC (
        OLE_HANDLE pHRC ) = 0;
    virtual HRESULT __stdcall get_hRC (
        OLE_HANDLE * pHRC ) = 0;
    virtual HRESULT __stdcall put_GestureSensitivity (
        long pcPixels ) = 0;
    virtual HRESULT __stdcall get_GestureSensitivity (
        long * pcPixels ) = 0;
    virtual HRESULT __stdcall put_GestureEnabled (
        VARIANT_BOOL pbEnabled ) = 0;
    virtual HRESULT __stdcall get_GestureEnabled (
        VARIANT_BOOL * pbEnabled ) = 0;
    virtual HRESULT __stdcall ClearGesture ( ) = 0;
    virtual HRESULT __stdcall OverrideDefaultHandler ( ) = 0;
    virtual HRESULT __stdcall put_FullScreenEnabled (
        VARIANT_BOOL pbEnabled ) = 0;
    virtual HRESULT __stdcall get_FullScreenEnabled (
        VARIANT_BOOL * pbEnabled ) = 0;
    virtual HRESULT __stdcall get_IsFullScreen (
        VARIANT_BOOL * pbIsFullScreen ) = 0;
    virtual HRESULT __stdcall SetFullScreen (
        VARIANT_BOOL bFullScreen ) = 0;
};

struct __declspec(uuid("3455fdb6-ee56-455e-a44e-28a0c76d3196"))
IRasterSurface : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_RasterBand (
        struct IRasterBand * RasterBand ) = 0;
    virtual HRESULT __stdcall get_RasterBand (
        struct IRasterBand * * RasterBand ) = 0;
    virtual HRESULT __stdcall PutRaster (
        struct IRaster * Raster,
        long bandIndex ) = 0;
    virtual HRESULT __stdcall get_Raster (
        struct IRaster * * Raster ) = 0;
    virtual HRESULT __stdcall put_SampleDistance (
        double pSampleDistance ) = 0;
    virtual HRESULT __stdcall get_SampleDistance (
        double * pSampleDistance ) = 0;
};

struct __declspec(uuid("95ef6781-3de4-4f97-84b4-6db6ef90b67b"))
RasterSurface;
    // [ default ] interface IUnknown
    // interface IRasterSurface
    // interface IFunctionalSurface
    // interface IFunctionalSurface2
    // interface ISurface

struct __declspec(uuid("3044c30b-37d0-11d4-a167-444553547777"))
ISceneExporter3d : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall get_Filter (
        BSTR * Filter ) = 0;
    virtual HRESULT __stdcall get_FileExtension (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_ExportFileName (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall get_ExportFileName (
        BSTR * FileName ) = 0;
    virtual HRESULT __stdcall ExportScene (
        struct IScene * pScene ) = 0;
};

struct __declspec(uuid("3044c312-37d0-11d4-a167-444553547777"))
VRMLExporter;
    // [ default ] interface IUnknown
    // interface ISceneExporter3d
    // interface IVRMLExporter

struct __declspec(uuid("4251ba07-9106-11d5-b29f-00508bcdde28"))
ISceneVideoExporter : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Viewer (
        struct ISceneViewer * _arg1 ) = 0;
    virtual HRESULT __stdcall put_VideoDuration (
        double pSeconds ) = 0;
    virtual HRESULT __stdcall get_VideoDuration (
        double * pSeconds ) = 0;
    virtual HRESULT __stdcall put_FrameRate (
        int pImagesPerSecond ) = 0;
    virtual HRESULT __stdcall get_FrameRate (
        int * pImagesPerSecond ) = 0;
    virtual HRESULT __stdcall put_UseCustomSize (
        VARIANT_BOOL pbUseCustomSize ) = 0;
    virtual HRESULT __stdcall get_UseCustomSize (
        VARIANT_BOOL * pbUseCustomSize ) = 0;
    virtual HRESULT __stdcall PutCustomSize (
        int Width,
        int height ) = 0;
    virtual HRESULT __stdcall GetCustomSize (
        int * pWidth,
        int * pHeight ) = 0;
};

struct __declspec(uuid("26eb3a30-9e6d-443c-b904-79b16c5028aa"))
IVideoExporterProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsInstalled (
        VARIANT_BOOL * pbIsInstalled ) = 0;
    virtual HRESULT __stdcall get_CodecList (
        struct IStringArray * * ppCodecs ) = 0;
    virtual HRESULT __stdcall get_CodecCodeList (
        struct IStringArray * * ppCodecCodes ) = 0;
    virtual HRESULT __stdcall put_Codec (
        BSTR pCodecName ) = 0;
    virtual HRESULT __stdcall get_Codec (
        BSTR * pCodecName ) = 0;
    virtual HRESULT __stdcall put_CodecCode (
        BSTR pCodecCode ) = 0;
    virtual HRESULT __stdcall get_CodecCode (
        BSTR * pCodecCode ) = 0;
    virtual HRESULT __stdcall put_ColorDepth (
        short pColorDepth ) = 0;
    virtual HRESULT __stdcall get_ColorDepth (
        short * pColorDepth ) = 0;
    virtual HRESULT __stdcall put_Quality (
        int pQualityPercent ) = 0;
    virtual HRESULT __stdcall get_Quality (
        int * pQualityPercent ) = 0;
    virtual HRESULT __stdcall put_KeyFrameRate (
        long pKeyFrameRate ) = 0;
    virtual HRESULT __stdcall get_KeyFrameRate (
        long * pKeyFrameRate ) = 0;
    virtual HRESULT __stdcall put_DataRate (
        long pDataRate ) = 0;
    virtual HRESULT __stdcall get_DataRate (
        long * pDataRate ) = 0;
    virtual HRESULT __stdcall put_FrameDuration (
        long pFrameDuration ) = 0;
    virtual HRESULT __stdcall get_FrameDuration (
        long * pFrameDuration ) = 0;
    virtual HRESULT __stdcall put_RecordWindow (
        VARIANT_BOOL pbRecordAppWindow ) = 0;
    virtual HRESULT __stdcall get_RecordWindow (
        VARIANT_BOOL * pbRecordAppWindow ) = 0;
    virtual HRESULT __stdcall put_RecordOffScreen (
        VARIANT_BOOL pbRecordOffScreen ) = 0;
    virtual HRESULT __stdcall get_RecordOffScreen (
        VARIANT_BOOL * pbRecordOffScreen ) = 0;
    virtual HRESULT __stdcall put_ShowSettingsDialog (
        VARIANT_BOOL pbShowSettingsDialog ) = 0;
    virtual HRESULT __stdcall get_ShowSettingsDialog (
        VARIANT_BOOL * pbShowSettingsDialog ) = 0;
};

struct __declspec(uuid("4251ba08-9106-11d5-b29f-00508bcdde28"))
IAVIExporter : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Quality (
        int pQualityPercent ) = 0;
    virtual HRESULT __stdcall get_Quality (
        int * pQualityPercent ) = 0;
};

struct __declspec(uuid("206fda1e-5622-4189-9f9a-486cd52e3457"))
IQuickTimeExporter : IUnknown
{};

struct __declspec(uuid("4251ba06-9106-11d5-b29f-00508bcdde28"))
AVIExporter;
    // [ default ] interface IUnknown
    // interface ISceneExporter3d
    // interface ISceneVideoExporter
    // interface IVideoExporterProperties
    // interface IAVIExporter

struct __declspec(uuid("bc9f9a95-6d45-438d-b0fe-e7337510fcc2"))
QuickTimeExporter;
    // [ default ] interface IUnknown
    // interface ISceneExporter3d
    // interface ISceneVideoExporter
    // interface IVideoExporterProperties

enum esriSimple3DMarkerStyle
{
    esriS3DMSTetra = 0,
    esriS3DMSCube = 1,
    esriS3DMSCone = 2,
    esriS3DMSCylinder = 3,
    esriS3DMSDiamond = 4,
    esriS3DMSSphere = 5,
    esriS3DMSSphereFrame = 6
};

enum esri3DMarkerType
{
    esri3DMTSimple = 0,
    esri3DMTGeometry = 1,
    esri3DMTGeomMaterial = 2
};

enum esriSimple3DLineStyle
{
    esriS3DLSTube = 0,
    esriS3DLSStrip = 1,
    esriS3DLSWall = 2
};

struct __declspec(uuid("95e48b87-336e-4062-9b68-eb8ec9177ab8"))
IImport3DFile : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsValidFile (
        BSTR FilePath,
        VARIANT_BOOL * pValid ) = 0;
    virtual HRESULT __stdcall CreateFromFile (
        BSTR FilePath ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall get_CanBrowse (
        VARIANT_BOOL * pCanBrowse ) = 0;
    virtual HRESULT __stdcall get_FileDescription (
        BSTR * pDescription ) = 0;
    virtual HRESULT __stdcall get_FileExtension (
        BSTR * pFileExtention ) = 0;
};

struct __declspec(uuid("e9f95f61-2bec-11d6-a4cd-444553547777"))
IGeometryMaterial : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetColor (
        double red,
        double green,
        double blue ) = 0;
    virtual HRESULT __stdcall GetColor (
        double * pRed,
        double * pGreen,
        double * pBlue ) = 0;
    virtual HRESULT __stdcall putref_Color (
        struct IRgbColor * ppRgbColor ) = 0;
    virtual HRESULT __stdcall get_Color (
        struct IRgbColor * * ppRgbColor ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        double pTransparency ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        double * pTransparency ) = 0;
    virtual HRESULT __stdcall put_TextureImage (
        BSTR pFilePath ) = 0;
    virtual HRESULT __stdcall get_TextureImage (
        BSTR * pFilePath ) = 0;
    virtual HRESULT __stdcall ClearTextureImage ( ) = 0;
    virtual HRESULT __stdcall putref_TransparentTextureColor (
        struct IRgbColor * ppRgbColor ) = 0;
    virtual HRESULT __stdcall get_TransparentTextureColor (
        struct IRgbColor * * ppRgbColor ) = 0;
    virtual HRESULT __stdcall get_HasTransparentTextureColor (
        VARIANT_BOOL * pHasTransparentColor ) = 0;
    virtual HRESULT __stdcall ClearTransparentTextureColor ( ) = 0;
    virtual HRESULT __stdcall get_TextureColorPalette (
        struct IArray * * ppRgbColors ) = 0;
};

struct __declspec(uuid("b7685a34-2bc8-11d6-a4cc-444553547777"))
IGeometryMaterialList : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall AddMaterial (
        struct IGeometryMaterial * pMaterial ) = 0;
    virtual HRESULT __stdcall InsertMaterial (
        long index,
        struct IGeometryMaterial * pMaterial ) = 0;
    virtual HRESULT __stdcall RemoveMaterial (
        long index ) = 0;
    virtual HRESULT __stdcall EmptyList ( ) = 0;
    virtual HRESULT __stdcall get_GeometryMaterial (
        long index,
        struct IGeometryMaterial * * pGeometryMaterial ) = 0;
};

struct __declspec(uuid("821003c1-2c6b-11d6-a4ce-444553547777"))
IGeneralMultiPatchCreator : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Init (
        long PointCount,
        long partCount,
        VARIANT_BOOL hasMs,
        VARIANT_BOOL hasIDs,
        VARIANT_BOOL hasNormals,
        long TexturePointCount,
        struct IGeometryMaterialList * pGeometryMaterialList ) = 0;
    virtual HRESULT __stdcall SetPatchPointIndex (
        long patch,
        long index ) = 0;
    virtual HRESULT __stdcall SetPatchType (
        long patch,
        enum esriPatchType Type ) = 0;
    virtual HRESULT __stdcall SetPatchPriority (
        long patch,
        long priority ) = 0;
    virtual HRESULT __stdcall SetMaterialIndex (
        long patch,
        long index ) = 0;
    virtual HRESULT __stdcall SetPoint (
        long index,
        struct IPoint * pPoint ) = 0;
    virtual HRESULT __stdcall SetWKSPointZ (
        long index,
        WKSPointZ * pPoint ) = 0;
    virtual HRESULT __stdcall SetM (
        long index,
        double mValue ) = 0;
    virtual HRESULT __stdcall SetNormal (
        long index,
        struct IVector3D * pVector ) = 0;
    virtual HRESULT __stdcall SetPatchTexturePointIndex (
        long part,
        long index ) = 0;
    virtual HRESULT __stdcall SetTexturePoint (
        long index,
        struct IPoint * pPoint ) = 0;
    virtual HRESULT __stdcall SetTextureWKSPoint (
        long index,
        WKSPoint * pPoint ) = 0;
    virtual HRESULT __stdcall SetID (
        long index,
        long ID ) = 0;
    virtual HRESULT __stdcall ClearResources ( ) = 0;
    virtual HRESULT __stdcall CreateMultiPatch (
        struct IGeometry * * pGeometry ) = 0;
};

struct __declspec(uuid("773f7276-aefb-11d5-8112-00c04fa0adf8"))
IMarker3DPlacement : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Units (
        enum esriUnits * unitsCode ) = 0;
    virtual HRESULT __stdcall put_Units (
        enum esriUnits unitsCode ) = 0;
    virtual HRESULT __stdcall get_NormalizedOriginOffset (
        struct IVector3D * * offset ) = 0;
    virtual HRESULT __stdcall putref_NormalizedOriginOffset (
        struct IVector3D * offset ) = 0;
    virtual HRESULT __stdcall get_ZOffset (
        double * ZOffset ) = 0;
    virtual HRESULT __stdcall put_ZOffset (
        double ZOffset ) = 0;
    virtual HRESULT __stdcall get_Shape (
        struct IGeometry * * Shape ) = 0;
    virtual HRESULT __stdcall ApplyToPoint (
        struct IPoint * inShape,
        struct IGeometry * * outShape,
        double enforcedZ,
        double unitFactor,
        double zScale ) = 0;
    virtual HRESULT __stdcall QueryRotationAngles (
        double * xAngle,
        double * yAngle,
        double * zAngle ) = 0;
    virtual HRESULT __stdcall SetRotationAngles (
        double xAngle,
        double yAngle,
        double zAngle ) = 0;
    virtual HRESULT __stdcall get_Width (
        double * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        double Width ) = 0;
    virtual HRESULT __stdcall get_Depth (
        double * Depth ) = 0;
    virtual HRESULT __stdcall put_Depth (
        double Depth ) = 0;
    virtual HRESULT __stdcall get_MaintainAspectRatio (
        VARIANT_BOOL * bAspectRatio ) = 0;
    virtual HRESULT __stdcall put_MaintainAspectRatio (
        VARIANT_BOOL bAspectRatio ) = 0;
};

struct __declspec(uuid("773f726f-aefb-11d5-8112-00c04fa0adf8"))
ISimpleMarker3DSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriSimple3DMarkerStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriSimple3DMarkerStyle Style ) = 0;
    virtual HRESULT __stdcall get_ResolutionQuality (
        double * Quality ) = 0;
    virtual HRESULT __stdcall put_ResolutionQuality (
        double Quality ) = 0;
};

struct __declspec(uuid("773f7272-aefb-11d5-8112-00c04fa0adf8"))
IMarker3DSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Shape (
        struct IGeometry * Shape ) = 0;
    virtual HRESULT __stdcall get_Shape (
        struct IGeometry * * Shape ) = 0;
    virtual HRESULT __stdcall get_UseMaterialDraping (
        VARIANT_BOOL * useDraping ) = 0;
    virtual HRESULT __stdcall put_UseMaterialDraping (
        VARIANT_BOOL useDraping ) = 0;
    virtual HRESULT __stdcall get_MaterialCount (
        long * cMaterials ) = 0;
    virtual HRESULT __stdcall CreateFromFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall get_Thumbnail (
        struct IPicture * * Thumbnail ) = 0;
    virtual HRESULT __stdcall putref_Thumbnail (
        struct IPicture * Thumbnail ) = 0;
    virtual HRESULT __stdcall RestrictAccessToShape ( ) = 0;
    virtual HRESULT __stdcall get_IsRestricted (
        VARIANT_BOOL * IsRestricted ) = 0;
};

struct __declspec(uuid("6e8ec8f8-e90a-11d5-a129-00508bd60cb9"))
ICharacterMarker3DSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Font (
        IFontDisp * * fontDisp ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * fontDisp ) = 0;
    virtual HRESULT __stdcall get_CharacterIndex (
        long * charIndex ) = 0;
    virtual HRESULT __stdcall put_CharacterIndex (
        long charIndex ) = 0;
    virtual HRESULT __stdcall get_VerticalOrientation (
        VARIANT_BOOL * bVertical ) = 0;
    virtual HRESULT __stdcall put_VerticalOrientation (
        VARIANT_BOOL bVertical ) = 0;
};

struct __declspec(uuid("470b7273-3552-11d6-a12d-00508bd60cb9"))
ILine3DPlacement : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Units (
        enum esriUnits * unitsCode ) = 0;
    virtual HRESULT __stdcall put_Units (
        enum esriUnits unitsCode ) = 0;
    virtual HRESULT __stdcall ApplyToLine (
        struct IGeometry * inShape,
        struct IGeometry * * outShape,
        double enforcedZ,
        double zScale ) = 0;
};

struct __declspec(uuid("470b7274-3552-11d6-a12d-00508bd60cb9"))
ISimpleLine3DSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriSimple3DLineStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriSimple3DLineStyle Style ) = 0;
    virtual HRESULT __stdcall get_ResolutionQuality (
        double * Quality ) = 0;
    virtual HRESULT __stdcall put_ResolutionQuality (
        double Quality ) = 0;
};

struct __declspec(uuid("3f6d8301-5a5a-4b84-969f-433af07ee1a3"))
ITextureFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Texture (
        struct IGeometryMaterial * * Texture ) = 0;
    virtual HRESULT __stdcall putref_Texture (
        struct IGeometryMaterial * Texture ) = 0;
    virtual HRESULT __stdcall put_BitmapTransparencyColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_BitmapTransparencyColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_Size (
        double * pSize ) = 0;
    virtual HRESULT __stdcall put_Size (
        double pSize ) = 0;
    virtual HRESULT __stdcall CreateFillSymbolFromFile (
        BSTR FileName ) = 0;
};

struct __declspec(uuid("d47a4da5-6d42-11d6-a13e-00508bd60cb9"))
ITextureLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Texture (
        struct IGeometryMaterial * * Texture ) = 0;
    virtual HRESULT __stdcall putref_Texture (
        struct IGeometryMaterial * Texture ) = 0;
    virtual HRESULT __stdcall put_BitmapTransparencyColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_BitmapTransparencyColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall CreateLineSymbolFromFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall get_TextureFillSymbol (
        struct ITextureFillSymbol * * textureFillSym ) = 0;
    virtual HRESULT __stdcall get_VerticalOrientation (
        VARIANT_BOOL * bVertical ) = 0;
    virtual HRESULT __stdcall put_VerticalOrientation (
        VARIANT_BOOL bVertical ) = 0;
};

struct __declspec(uuid("773f7270-aefb-11d5-8112-00c04fa0adf8"))
SimpleMarker3DSymbol;
    // [ default ] interface IUnknown
    // interface ISimpleMarker3DSymbol
    // interface IMarker3DPlacement
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ISymbol3D

struct __declspec(uuid("773f7274-aefb-11d5-8112-00c04fa0adf8"))
Marker3DSymbol;
    // [ default ] interface IUnknown
    // interface IMarker3DSymbol
    // interface IMarker3DPlacement
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ISymbol3D

struct __declspec(uuid("6e8ec8f7-e90a-11d5-a129-00508bd60cb9"))
CharacterMarker3DSymbol;
    // [ default ] interface IUnknown
    // interface ICharacterMarker3DSymbol
    // interface IMarker3DPlacement
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ISymbol3D

struct __declspec(uuid("470b7275-3552-11d6-a12d-00508bd60cb9"))
SimpleLine3DSymbol;
    // [ default ] interface IUnknown
    // interface ISimpleLine3DSymbol
    // interface ILine3DPlacement
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ISymbol3D

struct __declspec(uuid("8d738780-c069-42e0-9dfa-2b7b61707ba9"))
TextureFillSymbol;
    // [ default ] interface IUnknown
    // interface ITextureFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ISymbol3D

struct __declspec(uuid("b5710c9c-a9bc-4a16-b578-54be176ed57b"))
TextureLineSymbol;
    // [ default ] interface IUnknown
    // interface ITextureLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface ILine3DPlacement
    // interface ISymbol3D

struct __declspec(uuid("f7491560-b744-11d5-a3ef-444553547777"))
Import3DFile;
    // [ default ] interface IUnknown
    // interface IImport3DFile

struct __declspec(uuid("0e6f4b27-2bd0-11d6-a4cc-444553547777"))
GeometryMaterial;
    // [ default ] interface IUnknown
    // interface IGeometryMaterial
    // interface IPersistStream
    // interface IPersist

struct __declspec(uuid("0e6f4b2c-2bd0-11d6-a4cc-444553547777"))
GeometryMaterialList;
    // [ default ] interface IUnknown
    // interface IGeometryMaterialList

struct __declspec(uuid("776b5584-2c7f-11d6-a4ce-444553547777"))
GeneralMultiPatchCreator;
    // [ default ] interface IUnknown
    // interface IGeneralMultiPatchCreator

enum esri3DServerType
{
    esri3DServerScene = 0,
    esri3DServerGlobe = 1
};

struct __declspec(uuid("41cf2277-a8ce-4815-9270-6f0a7bd49d45"))
Controls3DAnalystSteepestPathTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool
    // interface IToolSelectedLayer

struct __declspec(uuid("813a66cc-f7c0-4256-9e52-60a1d7d4d864"))
Controls3DAnalystContourTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool
    // interface IToolSelectedLayer

struct __declspec(uuid("48bc36e8-0f8e-4e36-a00d-472c29a07ef6"))
ControlsSceneExpandFOVCommand;
    // [ default ] interface IUnknown
    // interface ICommand

struct __declspec(uuid("c62ab5da-bdb2-41fd-804f-cf5342539b7a"))
ControlsSceneFlyTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("3e11f70e-4ff3-489a-b49f-d7190633a096"))
ControlsSceneFullExtentCommand;
    // [ default ] interface IUnknown
    // interface ICommand

struct __declspec(uuid("311bbb00-3907-471f-8e81-e01384aa1969"))
ControlsSceneNarrowFOVCommand;
    // [ default ] interface IUnknown
    // interface ICommand

struct __declspec(uuid("71b9d454-1bdd-4861-baaf-375e7ba19db4"))
ControlsSceneNavigateTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("857173f9-f6af-40ac-b985-a7d71597b5ec"))
ControlsScenePanTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("ff0bec24-fd26-4993-8ff1-f83d924ed8d4"))
ControlsSceneSelectFeaturesTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("cc255490-e1cf-4205-9577-96cd9d680268"))
ControlsSceneSelectGraphicsTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("c609e3ba-8585-4272-bf63-192257012e6e"))
ControlsSceneSetObserverTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("86d9a49b-d776-46e1-86b4-90146b95bfa1"))
ControlsSceneTargetCenterTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("ea4e0cd6-8365-4db0-b5ac-d36782117ad2"))
ControlsSceneTargetZoomTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("85f0d11f-b96f-4617-97c9-a90a3f7eb0cd"))
ControlsSceneZoomInTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("fb72e6cc-b66a-4a34-bf81-5f6f3ffcf06b"))
ControlsSceneZoomInOutTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("f6f85407-fbd0-467c-9ba4-ec1d2646432c"))
ControlsSceneZoomOutTool;
    // [ default ] interface IUnknown
    // interface ICommand
    // interface ITool

struct __declspec(uuid("93320166-ece7-4a2c-b6d0-22416fd08ef5"))
ControlsSceneOpenDocCommand;
    // [ default ] interface IUnknown
    // interface ICommand

struct __declspec(uuid("18a9ffdf-7b77-413a-af57-81f58bfcffb3"))
ControlsSceneSceneToolbar;
    // [ default ] interface IUnknown
    // interface IToolBarDef

struct __declspec(uuid("aa4f27cf-0c2b-44d3-9531-5d1d48cbf3e4"))
ISceneCommandHook : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Scene (
        struct IScene * * ppScene ) = 0;
};

struct __declspec(uuid("142dce00-0dd2-4761-b639-5fc7af74fa1b"))
ISceneHookHelper : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Hook (
        IDispatch * ppHook ) = 0;
    virtual HRESULT __stdcall get_Hook (
        IDispatch * * ppHook ) = 0;
    virtual HRESULT __stdcall get_Scene (
        struct IScene * * ppScene ) = 0;
    virtual HRESULT __stdcall get_SceneGraph (
        struct ISceneGraph * * ppSceneGraph ) = 0;
    virtual HRESULT __stdcall get_ActiveViewer (
        struct ISceneViewer * * ppSceneViewer ) = 0;
    virtual HRESULT __stdcall get_Camera (
        struct ICamera * * ppOperationStack ) = 0;
};

struct __declspec(uuid("b68aa59e-ad9a-4bc4-a6b8-5c73e5da2881"))
SceneHookHelper;
    // [ default ] interface IUnknown
    // interface ISceneHookHelper
    // interface ISupportErrorInfo

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_esri3DAnalyst =
    {0x639fe90a,0xcc9a,0x48c6,{0xac,0x1d,0x10,0x5f,0xe5,0x09,0x15,0xb5}};
extern "C" const GUID __declspec(selectany) IID_IScene =
    {0x787f54e2,0xba26,0x11d2,{0x92,0xf8,0x44,0xd1,0xf8,0xc0,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_ISceneGraph =
    {0x37576410,0xc469,0x11d2,{0xb1,0xda,0x00,0xc0,0x4f,0xa3,0x3d,0x14}};
extern "C" const GUID __declspec(selectany) IID_ISceneRenderer =
    {0xcb6f53c2,0xc46b,0x11d2,{0xb1,0xda,0x00,0xc0,0x4f,0xa3,0x3d,0x14}};
extern "C" const GUID __declspec(selectany) IID_I3DProperties =
    {0xbc6f44cc,0x21e8,0x11d4,{0xa3,0x83,0x00,0xc0,0x4f,0x6b,0xc6,0x19}};
extern "C" const GUID __declspec(selectany) IID_ISceneViewer =
    {0x03485a91,0x59d0,0x11d3,{0x81,0x72,0x00,0x80,0xc7,0x59,0x7e,0x71}};
extern "C" const GUID __declspec(selectany) IID_ICamera =
    {0xb3fa596f,0xada3,0x11d2,{0x9f,0xae,0x00,0xc0,0x4f,0x8e,0xce,0x3d}};
extern "C" const GUID __declspec(selectany) IID_IHit3DSet =
    {0x768d13f2,0x9a2d,0x11d4,{0xb2,0x70,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IAnimationType =
    {0xbbf1af30,0xa6ec,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IKeyframe =
    {0x767c9b53,0x5a8e,0x11d5,{0xb2,0x95,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IBookmarkToKeyframe =
    {0xbd3c7aad,0xa869,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IAnimationTrack =
    {0xbbf1af31,0xa6ec,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_AnimationTrack =
    {0x4fedc9cb,0xa7be,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_LayerKeyframe =
    {0x24aa4277,0xadf3,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_SceneKeyframe =
    {0x24aa4278,0xadf3,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_AnimationTypeCamera =
    {0x500f4707,0xa798,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_AnimationTypeLayer =
    {0x24aa4279,0xadf3,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_AnimationTypeScene =
    {0x24aa427a,0xadf3,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_ISxAnimationEnvironment =
    {0xa4c0b647,0x82ad,0x11d5,{0xb2,0x9b,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_ISxAnimationEnvironment2 =
    {0xf406fe81,0x1101,0x47eb,{0x9a,0x45,0x5c,0x4f,0x64,0xb9,0xa0,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SxAnimationEnvironment =
    {0x592d0b58,0x82ad,0x11d5,{0xb2,0x9b,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_ICamera2 =
    {0x44e9928e,0xbf72,0x4838,{0xb9,0x56,0x29,0x40,0xd0,0x56,0x4f,0x3f}};
extern "C" const GUID __declspec(selectany) IID_IStereoCamera =
    {0x1a8927bc,0x9f9a,0x44ba,{0xa9,0x21,0x3c,0x3a,0xc1,0xaa,0x47,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_Camera =
    {0xb3fa5970,0xada3,0x11d2,{0x9f,0xae,0x00,0xc0,0x4f,0x8e,0xce,0x3d}};
extern "C" const GUID __declspec(selectany) IID_IBookmark3D =
    {0xbcdb3324,0x9afa,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_Bookmark3D =
    {0xbcdb3323,0x9afa,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IViewers3D =
    {0x4d8ca7d2,0x0aaa,0x4502,{0xad,0xc7,0x03,0x88,0x05,0x1c,0x5f,0x5c}};
extern "C" const GUID __declspec(selectany) IID_IBasicScene =
    {0xec4e4b1c,0x5a64,0x499d,{0xa4,0x75,0xbc,0x2d,0xdc,0x23,0x78,0x38}};
extern "C" const GUID __declspec(selectany) IID_IGraphicsContainer3D =
    {0xef879196,0x01de,0x11d4,{0xab,0x69,0x00,0x08,0xc7,0x3f,0xd5,0x0c}};
extern "C" const GUID __declspec(selectany) IID_IGraphicsSelection =
    {0x79103a54,0x1e53,0x11d4,{0xa1,0x09,0x00,0xc0,0x4f,0x8e,0xce,0x27}};
extern "C" const GUID __declspec(selectany) IID_ISceneBookmarks =
    {0xbcdb3325,0x9afa,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IAnimationTracks =
    {0xfa3dba5b,0xa879,0x11d5,{0xb2,0xa0,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_Scene =
    {0xb7a0a25c,0x24f7,0x11d3,{0x9f,0x4d,0x00,0xc0,0x4f,0x6b,0xc5,0xf4}};
extern "C" const GUID __declspec(selectany) CLSID_GraphicsLayer3D =
    {0x4c87a8f0,0x01e3,0x11d4,{0xab,0x69,0x00,0x08,0xc7,0x3f,0xd5,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ISceneRendererEvents =
    {0xbbc7c2e8,0x1fb3,0x11d4,{0xab,0x72,0x00,0x08,0xc7,0x3f,0xd5,0x0c}};
extern "C" const GUID __declspec(selectany) IID_IFeature3DProperties =
    {0x4a4cece5,0xf53a,0x11d3,{0x80,0xd9,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_IFeature3DProperties2 =
    {0xff699cbe,0x9340,0x4724,{0x9b,0x4c,0xf8,0x89,0x79,0x31,0x4b,0xc0}};
extern "C" const GUID __declspec(selectany) IID_IExpression =
    {0x3c957f4d,0x2120,0x11d4,{0xa3,0x83,0x00,0xc0,0x4f,0x6b,0xc6,0x19}};
extern "C" const GUID __declspec(selectany) CLSID_Basic3DProperties =
    {0xa5a8dc61,0x268c,0x11d4,{0x91,0x4a,0x00,0x80,0xc7,0x07,0x43,0x26}};
extern "C" const GUID __declspec(selectany) CLSID_Tin3DProperties =
    {0xb7a0a25d,0x24f7,0x11d3,{0x9f,0x4d,0x00,0xc0,0x4f,0x6b,0xc5,0xf4}};
extern "C" const GUID __declspec(selectany) CLSID_Raster3DProperties =
    {0x4a4cece3,0xf53a,0x11d3,{0x80,0xd9,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_Feature3DProperties =
    {0x4a4cece4,0xf53a,0x11d3,{0x80,0xd9,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_IVRMLExporter =
    {0x3044c30e,0x37d0,0x11d4,{0xa1,0x67,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) IID_IMessageDispatcher =
    {0xbd62a8fa,0x8833,0x11d4,{0xab,0x87,0x00,0x08,0xc7,0x3f,0xd5,0x0c}};
extern "C" const GUID __declspec(selectany) IID_IHit3D =
    {0xf7873924,0x9a19,0x11d4,{0xb2,0x70,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_ISceneGraphEvents =
    {0x1d1c669a,0x13de,0x11d4,{0x80,0xdf,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_ISceneGraphEventsDisp =
    {0x1d1c669b,0x13de,0x11d4,{0x80,0xdf,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_SceneGraph =
    {0x477ff406,0xc469,0x11d2,{0xb1,0xda,0x00,0xc0,0x4f,0xa3,0x3d,0x14}};
extern "C" const GUID __declspec(selectany) CLSID_SceneGraphEvents =
    {0xa1bf0693,0x63a1,0x4276,{0x89,0xef,0x49,0x51,0xdd,0x0c,0xb3,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_MessageDispatcher =
    {0x517b7bc6,0x8833,0x11d4,{0xab,0x87,0x00,0x08,0xc7,0x3f,0xd5,0x0c}};
extern "C" const GUID __declspec(selectany) CLSID_Hit3D =
    {0xf7873923,0x9a19,0x11d4,{0xb2,0x70,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_Hit3DSet =
    {0x768d13f1,0x9a2d,0x11d4,{0xb2,0x70,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_ILayerRenderers =
    {0x0aa361c1,0x06a2,0x11d5,{0x91,0x63,0x00,0x80,0xc7,0x07,0x43,0x26}};
extern "C" const GUID __declspec(selectany) IID_I3DViewer =
    {0xea6581ec,0x082d,0x435c,{0x8f,0x73,0xb4,0x16,0x1c,0xa0,0x6f,0x20}};
extern "C" const GUID __declspec(selectany) IID_IRasterSurface =
    {0x3455fdb6,0xee56,0x455e,{0xa4,0x4e,0x28,0xa0,0xc7,0x6d,0x31,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_RasterSurface =
    {0x95ef6781,0x3de4,0x4f97,{0x84,0xb4,0x6d,0xb6,0xef,0x90,0xb6,0x7b}};
extern "C" const GUID __declspec(selectany) IID_ISceneExporter3d =
    {0x3044c30b,0x37d0,0x11d4,{0xa1,0x67,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_VRMLExporter =
    {0x3044c312,0x37d0,0x11d4,{0xa1,0x67,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) IID_ISceneVideoExporter =
    {0x4251ba07,0x9106,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IVideoExporterProperties =
    {0x26eb3a30,0x9e6d,0x443c,{0xb9,0x04,0x79,0xb1,0x6c,0x50,0x28,0xaa}};
extern "C" const GUID __declspec(selectany) IID_IAVIExporter =
    {0x4251ba08,0x9106,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) IID_IQuickTimeExporter =
    {0x206fda1e,0x5622,0x4189,{0x9f,0x9a,0x48,0x6c,0xd5,0x2e,0x34,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_AVIExporter =
    {0x4251ba06,0x9106,0x11d5,{0xb2,0x9f,0x00,0x50,0x8b,0xcd,0xde,0x28}};
extern "C" const GUID __declspec(selectany) CLSID_QuickTimeExporter =
    {0xbc9f9a95,0x6d45,0x438d,{0xb0,0xfe,0xe7,0x33,0x75,0x10,0xfc,0xc2}};
extern "C" const GUID __declspec(selectany) IID_IImport3DFile =
    {0x95e48b87,0x336e,0x4062,{0x9b,0x68,0xeb,0x8e,0xc9,0x17,0x7a,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IGeometryMaterial =
    {0xe9f95f61,0x2bec,0x11d6,{0xa4,0xcd,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) IID_IGeometryMaterialList =
    {0xb7685a34,0x2bc8,0x11d6,{0xa4,0xcc,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) IID_IGeneralMultiPatchCreator =
    {0x821003c1,0x2c6b,0x11d6,{0xa4,0xce,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) IID_IMarker3DPlacement =
    {0x773f7276,0xaefb,0x11d5,{0x81,0x12,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_ISimpleMarker3DSymbol =
    {0x773f726f,0xaefb,0x11d5,{0x81,0x12,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_IMarker3DSymbol =
    {0x773f7272,0xaefb,0x11d5,{0x81,0x12,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) IID_ICharacterMarker3DSymbol =
    {0x6e8ec8f8,0xe90a,0x11d5,{0xa1,0x29,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) IID_ILine3DPlacement =
    {0x470b7273,0x3552,0x11d6,{0xa1,0x2d,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) IID_ISimpleLine3DSymbol =
    {0x470b7274,0x3552,0x11d6,{0xa1,0x2d,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) IID_ITextureFillSymbol =
    {0x3f6d8301,0x5a5a,0x4b84,{0x96,0x9f,0x43,0x3a,0xf0,0x7e,0xe1,0xa3}};
extern "C" const GUID __declspec(selectany) IID_ITextureLineSymbol =
    {0xd47a4da5,0x6d42,0x11d6,{0xa1,0x3e,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleMarker3DSymbol =
    {0x773f7270,0xaefb,0x11d5,{0x81,0x12,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_Marker3DSymbol =
    {0x773f7274,0xaefb,0x11d5,{0x81,0x12,0x00,0xc0,0x4f,0xa0,0xad,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_CharacterMarker3DSymbol =
    {0x6e8ec8f7,0xe90a,0x11d5,{0xa1,0x29,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleLine3DSymbol =
    {0x470b7275,0x3552,0x11d6,{0xa1,0x2d,0x00,0x50,0x8b,0xd6,0x0c,0xb9}};
extern "C" const GUID __declspec(selectany) CLSID_TextureFillSymbol =
    {0x8d738780,0xc069,0x42e0,{0x9d,0xfa,0x2b,0x7b,0x61,0x70,0x7b,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_TextureLineSymbol =
    {0xb5710c9c,0xa9bc,0x4a16,{0xb5,0x78,0x54,0xbe,0x17,0x6e,0xd5,0x7b}};
extern "C" const GUID __declspec(selectany) CLSID_Import3DFile =
    {0xf7491560,0xb744,0x11d5,{0xa3,0xef,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_GeometryMaterial =
    {0x0e6f4b27,0x2bd0,0x11d6,{0xa4,0xcc,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_GeometryMaterialList =
    {0x0e6f4b2c,0x2bd0,0x11d6,{0xa4,0xcc,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_GeneralMultiPatchCreator =
    {0x776b5584,0x2c7f,0x11d6,{0xa4,0xce,0x44,0x45,0x53,0x54,0x77,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_Controls3DAnalystSteepestPathTool =
    {0x41cf2277,0xa8ce,0x4815,{0x92,0x70,0x6f,0x0a,0x7b,0xd4,0x9d,0x45}};
extern "C" const GUID __declspec(selectany) CLSID_Controls3DAnalystContourTool =
    {0x813a66cc,0xf7c0,0x4256,{0x9e,0x52,0x60,0xa1,0xd7,0xd4,0xd8,0x64}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneExpandFOVCommand =
    {0x48bc36e8,0x0f8e,0x4e36,{0xa0,0x0d,0x47,0x2c,0x29,0xa0,0x7e,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneFlyTool =
    {0xc62ab5da,0xbdb2,0x41fd,{0x80,0x4f,0xcf,0x53,0x42,0x53,0x9b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneFullExtentCommand =
    {0x3e11f70e,0x4ff3,0x489a,{0xb4,0x9f,0xd7,0x19,0x06,0x33,0xa0,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneNarrowFOVCommand =
    {0x311bbb00,0x3907,0x471f,{0x8e,0x81,0xe0,0x13,0x84,0xaa,0x19,0x69}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneNavigateTool =
    {0x71b9d454,0x1bdd,0x4861,{0xba,0xaf,0x37,0x5e,0x7b,0xa1,0x9d,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsScenePanTool =
    {0x857173f9,0xf6af,0x40ac,{0xb9,0x85,0xa7,0xd7,0x15,0x97,0xb5,0xec}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneSelectFeaturesTool =
    {0xff0bec24,0xfd26,0x4993,{0x8f,0xf1,0xf8,0x3d,0x92,0x4e,0xd8,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneSelectGraphicsTool =
    {0xcc255490,0xe1cf,0x4205,{0x95,0x77,0x96,0xcd,0x9d,0x68,0x02,0x68}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneSetObserverTool =
    {0xc609e3ba,0x8585,0x4272,{0xbf,0x63,0x19,0x22,0x57,0x01,0x2e,0x6e}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneTargetCenterTool =
    {0x86d9a49b,0xd776,0x46e1,{0x86,0xb4,0x90,0x14,0x6b,0x95,0xbf,0xa1}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneTargetZoomTool =
    {0xea4e0cd6,0x8365,0x4db0,{0xb5,0xac,0xd3,0x67,0x82,0x11,0x7a,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneZoomInTool =
    {0x85f0d11f,0xb96f,0x4617,{0x97,0xc9,0xa9,0x0a,0x3f,0x7e,0xb0,0xcd}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneZoomInOutTool =
    {0xfb72e6cc,0xb66a,0x4a34,{0xbf,0x81,0x5f,0x6f,0x3f,0xfc,0xf0,0x6b}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneZoomOutTool =
    {0xf6f85407,0xfbd0,0x467c,{0x9b,0xa4,0xec,0x1d,0x26,0x46,0x43,0x2c}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneOpenDocCommand =
    {0x93320166,0xece7,0x4a2c,{0xb6,0xd0,0x22,0x41,0x6f,0xd0,0x8e,0xf5}};
extern "C" const GUID __declspec(selectany) CLSID_ControlsSceneSceneToolbar =
    {0x18a9ffdf,0x7b77,0x413a,{0xaf,0x57,0x81,0xf5,0x8b,0xfc,0xff,0xb3}};
extern "C" const GUID __declspec(selectany) IID_ISceneCommandHook =
    {0xaa4f27cf,0x0c2b,0x44d3,{0x95,0x31,0x5d,0x1d,0x48,0xcb,0xf3,0xe4}};
extern "C" const GUID __declspec(selectany) IID_ISceneHookHelper =
    {0x142dce00,0x0dd2,0x4761,{0xb6,0x39,0x5f,0xc7,0xaf,0x74,0xfa,0x1b}};
extern "C" const GUID __declspec(selectany) CLSID_SceneHookHelper =
    {0xb68aa59e,0xad9a,0x4bc4,{0xa6,0xb8,0x5c,0x73,0xe5,0xda,0x28,0x81}};

#pragma pack(pop)
