// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (af26884f).
//
// esriDisplay.tlh
//
// C++ source equivalent of Win32 type library d:/Program Files/ArcGis/com/esriDisplay.olb
// compiler-generated file created 01/08/07 at 20:58:34 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "D:\Program Files\ArcGIS\com\esriSystem.olb"
//  #import "D:\Program Files\ArcGIS\com\esriGeometry.olb"
//  #import "D:\Program Files\ArcGIS\com\esriSystemUI.olb"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("20cd40b0-8f3d-11d0-8590-0800091a2a72"))
/* interface */ IColor;
struct __declspec(uuid("20cd40b1-8f3d-11d0-8590-0800091a2a72"))
/* interface */ IRgbColor;
struct __declspec(uuid("20cd40b2-8f3d-11d0-8590-0800091a2a72"))
/* interface */ ICmykColor;
struct __declspec(uuid("20cd40b3-8f3d-11d0-8590-0800091a2a72"))
/* interface */ IHsvColor;
struct __declspec(uuid("20cd40b4-8f3d-11d0-8590-0800091a2a72"))
/* interface */ IGrayColor;
struct __declspec(uuid("7ee9c491-d123-11d0-8383-080009b996cc"))
/* interface */ IHlsColor;
struct __declspec(uuid("6060613e-1233-11d3-9f45-00c04f6bc709"))
/* interface */ IPostScriptColor;
struct __declspec(uuid("9db25fdf-3c75-11d2-aaf6-00c04fa334b3"))
/* interface */ IMonitorSettings;
struct __declspec(uuid("137e39db-3e98-11d2-aaf7-00c04fa334b3"))
/* interface */ ICieLabConversion;
struct /* coclass */ RgbColor;
struct /* coclass */ CmykColor;
struct /* coclass */ HsvColor;
struct /* coclass */ GrayColor;
struct /* coclass */ HlsColor;
struct /* coclass */ MonitorSettings;
struct /* coclass */ CieLabConversion;
struct __declspec(uuid("beb87092-c0b4-11d0-8379-080009b996cc"))
/* interface */ IEnumColors;
struct __declspec(uuid("beb87091-c0b4-11d0-8379-080009b996cc"))
/* interface */ IColorRamp;
struct __declspec(uuid("beb87095-c0b4-11d0-8379-080009b996cc"))
/* interface */ IRandomColorRamp;
struct __declspec(uuid("beb87096-c0b4-11d0-8379-080009b996cc"))
/* interface */ IAlgorithmicColorRamp;
struct __declspec(uuid("beb87097-c0b4-11d0-8379-080009b996cc"))
/* interface */ IPresetColorRamp;
struct __declspec(uuid("beb87098-c0b4-11d0-8379-080009b996cc"))
/* interface */ IMultiPartColorRamp;
struct /* coclass */ RandomColorRamp;
struct /* coclass */ AlgorithmicColorRamp;
struct /* coclass */ PresetColorRamp;
struct /* coclass */ MultiPartColorRamp;
struct __declspec(uuid("f3435802-5779-11d0-98bf-00805f7ced21"))
/* interface */ ISymbol;
struct __declspec(uuid("e6bdaa7c-4d35-11d0-98be-00805f7ced21"))
/* interface */ IMarkerSymbol;
struct __declspec(uuid("e6bdaa7d-4d35-11d0-98be-00805f7ced21"))
/* interface */ ILineSymbol;
struct __declspec(uuid("e6bdaa7e-4d35-11d0-98be-00805f7ced21"))
/* interface */ IFillSymbol;
struct __declspec(uuid("a80b5e91-7f9c-11d0-9410-080009eebecb"))
/* interface */ ITextSymbol;
struct __declspec(uuid("2f77f380-4448-11d2-97cc-0080c7e04196"))
/* interface */ IEnumSymbol;
struct __declspec(uuid("869331a4-a283-4dcb-a4d9-dfd02dc95f3a"))
/* interface */ ISymbol3D;
struct __declspec(uuid("19f85377-1387-11d3-b89c-00600802e603"))
/* interface */ IDisplayFilter;
struct __declspec(uuid("19f85378-1387-11d3-b89c-00600802e603"))
/* interface */ ITransparencyDisplayFilter;
struct __declspec(uuid("12e361f0-1907-11d3-80c7-0080c79f0371"))
/* interface */ IDisplayAdmin;
struct __declspec(uuid("f0815360-19e1-11d3-80c8-0080c79f0371"))
/* interface */ IDisplayFilterManager;
struct __declspec(uuid("d915ec07-7b4f-47fd-b59b-3252f3a3b610"))
/* interface */ IDisplayAdmin2;
struct __declspec(uuid("e6bdb000-4d35-11d0-98be-00805f7ced21"))
/* interface */ IDisplayTransformation;
struct __declspec(uuid("e6bdb001-4d35-11d0-98be-00805f7ced21"))
/* interface */ ITransformEvents;
struct __declspec(uuid("1c352f3f-298e-11d3-9f4f-00c04f6bc619"))
/* interface */ IIlluminationProps;
struct __declspec(uuid("e6bdb002-4d35-11d0-98be-00805f7ced21"))
/* interface */ IDisplay;
struct __declspec(uuid("7ef23a93-f475-11d3-9f54-00c04f6bdf0d"))
/* interface */ IDraw;
typedef enum _esriTextureInterpolationMode esriTextureInterpolationMode;
struct __declspec(uuid("dc8333bd-a1d9-11d3-9f61-00c04f6bc5f4"))
/* interface */ IDisplay3D;
struct __declspec(uuid("42817971-a1f4-11d3-92dc-00600802e603"))
/* interface */ IDisplayTransformationAdmin;
struct __declspec(uuid("e6bdb003-4d35-11d0-98be-00805f7ced21"))
/* interface */ IDisplayEvents;
struct __declspec(uuid("e6bdaa7f-4d35-11d0-98be-00805f7ced21"))
/* interface */ IDicerCallback;
struct __declspec(uuid("5ba46487-1d16-42b8-847b-b7b9c8100b13"))
/* interface */ IDelayEvents;
struct __declspec(uuid("f13aac6f-9c3d-11d3-a644-0008c7df8de1"))
/* interface */ IRasterOutputSettings;
typedef enum esriResampleRatioType esriResampleRatio;
struct __declspec(uuid("28444834-e9cb-44f8-806a-d313373f69b8"))
/* interface */ IOutputRasterSettings;
struct __declspec(uuid("e6bdb004-4d35-11d0-98be-00805f7ced21"))
/* interface */ IScreenDisplay;
struct __declspec(uuid("dc321087-108f-43ae-932a-dfc1f7c4529e"))
/* interface */ IScreenDisplay2;
struct __declspec(uuid("534e08d6-e65a-11d0-8681-0000f8751720"))
/* interface */ IAppDisplay;
struct __declspec(uuid("7b3572f2-57a7-46b3-af86-9c9bca1c8f15"))
/* interface */ IScreenCacheManager;
struct __declspec(uuid("c1ccbfc2-6722-49f0-9242-ba2f312e24bf"))
/* interface */ IScreenInvalidate;
struct __declspec(uuid("1c6a7a03-e716-11d0-8681-0000f8751720"))
/* interface */ IEnumScreenDisplay;
struct /* coclass */ ScreenDisplay;
struct /* coclass */ SimpleDisplay;
struct /* coclass */ DisplayTransformation;
struct /* coclass */ CancelTracker;
struct /* coclass */ TransparencyDisplayFilter;
struct /* coclass */ IlluminationProps;
struct __declspec(uuid("d2c13e55-4bea-11d1-b6cc-080009b996cc"))
/* interface */ IDisplayFeedback;
struct __declspec(uuid("e6bdb00c-4d35-11d0-98be-00805f7ced21"))
/* interface */ ISelectionTracker;
struct __declspec(uuid("71fc8720-0164-11d2-84a4-0000f875b9c6"))
/* interface */ IAnchorPoint;
struct __declspec(uuid("a761d652-065f-11d4-826f-0080c79f0371"))
/* interface */ ICalloutTracker;
struct __declspec(uuid("66770313-fbc0-11d1-a24e-080009b6f22b"))
/* interface */ IRotateTracker;
struct __declspec(uuid("2dc98f3b-38aa-11d3-9f3c-00c04f6bc979"))
/* interface */ IScaleTracker;
struct __declspec(uuid("77748c81-73fc-11d2-8506-0000f875b9c6"))
/* interface */ IVertexFeedback;
struct __declspec(uuid("4e315500-f4dd-11d1-8498-0000f875b9c6"))
/* interface */ IReshapeFeedback;
struct __declspec(uuid("9bf56f82-4f36-11d1-b6cd-080009b996cc"))
/* interface */ INewEnvelopeFeedback;
struct __declspec(uuid("4e08b552-f52b-11d3-9315-00600802e603"))
/* interface */ INewEnvelopeFeedback2;
struct __declspec(uuid("9bf56f81-4f36-11d1-b6cd-080009b996cc"))
/* interface */ IMoveEnvelopeFeedback;
struct __declspec(uuid("dd61d811-a912-48e6-9146-073d1264da48"))
/* interface */ IMoveTextFeedback;
struct __declspec(uuid("4516b1d1-f799-4902-a4dd-1cbae5035be3"))
/* interface */ IMoveCurvedTextFeedback;
struct __declspec(uuid("b44637c6-f488-41b4-b222-07aa9c04a3d6"))
/* interface */ IMoveTextAlongShapeFeedback;
struct __declspec(uuid("c3182fe1-4fb0-11d1-b6cd-080009b996cc"))
/* interface */ IResizeEnvelopeFeedback;
struct __declspec(uuid("4e08b551-f52b-11d3-9315-00600802e603"))
/* interface */ IResizeEnvelopeFeedback2;
struct __declspec(uuid("1c9915ff-239b-49a1-a2f3-c9d0e4173ce1"))
/* interface */ IResizeTextFeedback;
struct __declspec(uuid("7a8276c1-5483-11d1-b6cf-080009b996cc"))
/* interface */ INewMultiPointFeedback;
struct __declspec(uuid("861a7b31-516d-11d1-b6ce-080009b996cc"))
/* interface */ INewLineFeedback;
struct __declspec(uuid("417af471-cd15-11d2-9f30-00c04f6bc8dd"))
/* interface */ INewBezierCurveFeedback;
struct __declspec(uuid("5c3ac217-10c5-401b-b3eb-6a6d93e5d58c"))
/* interface */ INewTextBezierCurveFeedback;
struct __declspec(uuid("7a8276c7-5483-11d1-b6cf-080009b996cc"))
/* interface */ IMoveLineFeedback;
struct __declspec(uuid("3c70bada-2429-11d3-9f36-00c04f6bdd7f"))
/* interface */ IMovePointFeedback;
struct __declspec(uuid("7a8276cb-5483-11d1-b6cf-080009b996cc"))
/* interface */ ILineMovePointFeedback;
struct __declspec(uuid("7a8276c5-5483-11d1-b6cf-080009b996cc"))
/* interface */ INewPolygonFeedback;
struct __declspec(uuid("7a8276c9-5483-11d1-b6cf-080009b996cc"))
/* interface */ IMovePolygonFeedback;
struct __declspec(uuid("7a8276cd-5483-11d1-b6cf-080009b996cc"))
/* interface */ IPolygonMovePointFeedback;
struct __declspec(uuid("89967502-a95f-11d1-ae9c-0000f80372b4"))
/* interface */ IStretchLineFeedback;
struct __declspec(uuid("521b9df3-0166-11d2-a254-080009b6f22b"))
/* interface */ IMoveGeometryFeedback;
struct __declspec(uuid("8c25c471-2030-11d2-a28c-080009b6f22b"))
/* interface */ IMoveImageFeedback;
struct __declspec(uuid("781e1c4c-1bfd-44de-b524-024437710fab"))
/* interface */ IMoveImageFeedback2;
struct __declspec(uuid("e4543891-040c-11d4-8267-0080c79f0371"))
/* interface */ ICalloutFeedback;
struct __declspec(uuid("b48ffe7a-396b-4188-b4dd-85e9d7e16b3e"))
/* interface */ ICalloutFeedback2;
struct __declspec(uuid("b6f4b6cb-b455-487c-84d0-6f9e2726ba20"))
/* interface */ INewCircleFeedback;
struct __declspec(uuid("e6bdb005-4d35-11d0-98be-00805f7ced21"))
/* interface */ IRubberBand;
struct __declspec(uuid("ae629199-b816-45b9-b20b-d84d919fe0c4"))
/* interface */ IRotateTextFeedback;
struct __declspec(uuid("b46b915d-d256-481b-82e8-c48ed99f4d19"))
/* interface */ INewTextFeedback;
struct __declspec(uuid("956b2b6b-c169-441a-9203-6e1b4c2b4fbf"))
/* interface */ IMoveBitmapFeedback;
struct __declspec(uuid("4c929701-12f0-4ce0-bb67-f08f6b65b66b"))
/* interface */ IPointCollectionTracker;
struct /* coclass */ NewEnvelopeFeedback;
struct /* coclass */ VertexFeedback;
struct /* coclass */ MoveEnvelopeFeedback;
struct /* coclass */ ResizeEnvelopeFeedback;
struct /* coclass */ ResizeTextFeedback;
struct /* coclass */ NewMultiPointFeedback;
struct /* coclass */ NewLineFeedback;
struct /* coclass */ NewBezierCurveFeedback;
struct /* coclass */ MoveLineFeedback;
struct /* coclass */ MovePointFeedback;
struct /* coclass */ LineMovePointFeedback;
struct /* coclass */ BezierMovePointFeedback;
struct /* coclass */ NewPolygonFeedback;
struct /* coclass */ MovePolygonFeedback;
struct /* coclass */ PolygonMovePointFeedback;
struct /* coclass */ StretchLineFeedback;
struct /* coclass */ GroupFeedback;
struct /* coclass */ MoveGeometryFeedback;
struct /* coclass */ MoveImageFeedback;
struct /* coclass */ CalloutFeedback;
struct /* coclass */ EnvelopeTracker;
struct /* coclass */ LineTracker;
struct /* coclass */ PolygonTracker;
struct /* coclass */ PointTracker;
struct /* coclass */ CalloutTracker;
struct /* coclass */ EngineRotateTracker;
struct /* coclass */ RubberEnvelope;
struct /* coclass */ RubberRectangularPolygon;
struct /* coclass */ RubberPoint;
struct /* coclass */ RubberLine;
struct /* coclass */ RubberPolygon;
struct /* coclass */ ReshapeFeedback;
struct /* coclass */ AnchorPoint;
struct /* coclass */ RubberCircle;
struct /* coclass */ NewCircleFeedback;
struct /* coclass */ MoveTextFeedback;
struct /* coclass */ MoveCurvedTextFeedback;
struct /* coclass */ MoveTextAlongShapeFeedback;
struct /* coclass */ RotateTextFeedback;
struct /* coclass */ NewTextFeedback;
struct /* coclass */ MoveBitmapFeedback;
struct /* coclass */ NewTextBezierCurveFeedback;
struct __declspec(uuid("7914e5f4-c892-11d0-8bb6-080009ee4e41"))
/* interface */ ITemplate;
struct __declspec(uuid("533d88f0-0a1a-11d2-b27f-0000f878229e"))
/* interface */ ILineDecoration;
struct __declspec(uuid("533d88f2-0a1a-11d2-b27f-0000f878229e"))
/* interface */ ILineDecorationElement;
struct __declspec(uuid("6a7ef984-6924-11d2-980d-0080c7e04196"))
/* interface */ IMask;
struct __declspec(uuid("b65a3e75-2993-11d1-9a43-0080c7ec5c96"))
/* interface */ ITextPath;
struct __declspec(uuid("8feb6611-2a0d-11d1-9a44-0080c7ec5c96"))
/* interface */ ITextBackground;
struct __declspec(uuid("6a7ef980-6924-11d2-980d-0080c7e04196"))
/* interface */ ICallout;
struct __declspec(uuid("c8d09ed1-4fbb-11d1-9a72-0080c7ec5c96"))
/* interface */ ILineCallout;
struct esriGDICommentBeginText;
struct esriGDICommentBeginTextEx;
struct esriGDICommentEndText;
struct esriGDICommentSetTextExtra;
struct esriGDICommentSetCmykColor;
struct esriGDICommentBeginLayer;
struct esriGDICommentEndLayer;
struct esriGDICommentBeginGroup;
struct esriGDICommentEndGroup;
struct esriGDICommentFillWithPattern;
struct esriGDICommentMaskLayer;
struct esriGDICommentMaskLayerBeforeClipping;
struct __declspec(uuid("cef72580-c1d9-11d2-9888-0080c7e04196"))
/* interface */ IMapLevel;
struct __declspec(uuid("f47b9b56-7efe-4ee4-b7d4-445f93ff390e"))
/* interface */ IDisplayName;
struct __declspec(uuid("8e1b88f1-0a46-11d4-8276-0080c79f0371"))
/* interface */ IQueryGeometry;
struct __declspec(uuid("a9360291-5828-11d0-98bf-00805f7ced21"))
/* interface */ ISimpleLineSymbol;
struct __declspec(uuid("7914e5dc-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IReferenceLineSymbol;
struct __declspec(uuid("7914e5de-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IMultiLayerLineSymbol;
struct __declspec(uuid("d7301b50-e92e-11d2-98ce-0080c7e04196"))
/* interface */ ILayerVisible;
struct __declspec(uuid("d7301b51-e92e-11d2-98ce-0080c7e04196"))
/* interface */ ILayerColorLock;
struct __declspec(uuid("b04bc357-c36e-11d0-bfa1-0080c7e24280"))
/* interface */ ILineProperties;
struct __declspec(uuid("b04bc359-c36e-11d0-bfa1-0080c7e24280"))
/* interface */ ICartographicLineSymbol;
struct __declspec(uuid("b04bc35a-c36e-11d0-bfa1-0080c7e24280"))
/* interface */ IHashLineSymbol;
struct __declspec(uuid("b04bc35b-c36e-11d0-bfa1-0080c7e24280"))
/* interface */ IMarkerLineSymbol;
struct __declspec(uuid("22c8c5a0-84fc-11d4-834d-0080c79f0371"))
/* interface */ IPictureLineSymbol;
struct __declspec(uuid("a9360290-5828-11d0-98bf-00805f7ced21"))
/* interface */ ISimpleMarkerSymbol;
struct __declspec(uuid("88539430-e06e-11d1-b277-0000f878229e"))
/* interface */ IArrowMarkerSymbol;
struct __declspec(uuid("7914e5e2-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IReferenceMarkerSymbol;
struct __declspec(uuid("7914e5e4-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IMultiLayerMarkerSymbol;
struct __declspec(uuid("7914e5e6-c892-11d0-8bb6-080009ee4e41"))
/* interface */ ICartographicMarkerSymbol;
struct __declspec(uuid("7914e5e7-c892-11d0-8bb6-080009ee4e41"))
/* interface */ ICharacterMarkerSymbol;
struct __declspec(uuid("7914e5e9-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IPictureMarkerSymbol;
struct __declspec(uuid("6cff7e07-0502-11d4-9f7c-00c04f6bc709"))
/* interface */ ISymbolArray;
struct __declspec(uuid("50317363-bd70-11d3-9f79-00c04f6bc709"))
/* interface */ IChartSymbol;
struct __declspec(uuid("50317364-bd70-11d3-9f79-00c04f6bc709"))
/* interface */ IPieChartSymbol;
struct __declspec(uuid("50317365-bd70-11d3-9f79-00c04f6bc709"))
/* interface */ IBarChartSymbol;
struct __declspec(uuid("50317366-bd70-11d3-9f79-00c04f6bc709"))
/* interface */ IStackedChartSymbol;
struct __declspec(uuid("50317367-bd70-11d3-9f79-00c04f6bc709"))
/* interface */ I3DChartSymbol;
struct __declspec(uuid("ae41e4f0-dde7-11d3-8216-0080c79f0371"))
/* interface */ IMarkerBackground;
struct __declspec(uuid("9ce9d410-ddeb-11d3-8216-0080c79f0371"))
/* interface */ IMarkerBackgroundSupport;
struct __declspec(uuid("572d1037-7815-11d3-9f6a-00c04f6bc8dd"))
/* interface */ IMarkerMask;
struct __declspec(uuid("a9360292-5828-11d0-98bf-00805f7ced21"))
/* interface */ ISimpleFillSymbol;
struct __declspec(uuid("7914e5ea-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IReferenceFillSymbol;
struct __declspec(uuid("7914e5ec-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IMultiLayerFillSymbol;
struct __declspec(uuid("7914e5ef-c892-11d0-8bb6-080009ee4e41"))
/* interface */ ILineFillSymbol;
struct __declspec(uuid("d842b081-330c-11d2-9168-0000f87808ee"))
/* interface */ IPictureFillSymbol;
struct __declspec(uuid("7914e5f1-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IMarkerFillSymbol;
struct __declspec(uuid("7914e5f2-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IGradientFillSymbol;
struct __declspec(uuid("85e413a0-cdf9-11d3-81eb-0080c79f0371"))
/* interface */ IDotDensityFillSymbol;
struct __declspec(uuid("de641030-cfc0-4465-beaf-33245d3ea1e9"))
/* interface */ IDotDensityFillSymbol2;
struct __declspec(uuid("758fc2b0-d2ac-11d3-81f3-0080c79f0371"))
/* interface */ IDotDensityMasking;
struct __declspec(uuid("7914e5f3-c892-11d0-8bb6-080009ee4e41"))
/* interface */ IFillProperties;
struct __declspec(uuid("a80b5e8c-7f9c-11d0-9410-080009eebecb"))
/* interface */ ISimpleTextSymbol;
struct __declspec(uuid("b65a3e72-2993-11d1-9a43-0080c7ec5c96"))
/* interface */ IFormattedTextSymbol;
struct __declspec(uuid("1fa841f8-a2cb-433d-88ac-10a945852320"))
/* interface */ ICharacterOrientation;
struct __declspec(uuid("533d88f7-0a1a-11d2-b27f-0000f878229e"))
/* interface */ ISimpleLineDecorationElement;
struct __declspec(uuid("6ea0e1e0-13e5-46d0-82ad-69f8993a67e3"))
/* interface */ ITextPath2;
struct __declspec(uuid("63fc25a7-438b-4f97-888e-105e6d461828"))
/* interface */ ITextBackground2;
struct __declspec(uuid("c8d09ed0-4fbb-11d1-9a72-0080c7ec5c96"))
/* interface */ IBalloonCallout;
struct __declspec(uuid("a8577a00-7283-11d2-9816-0080c7e04196"))
/* interface */ IMarkerTextBackground;
struct __declspec(uuid("6a7ef982-6924-11d2-980d-0080c7e04196"))
/* interface */ ITextMargins;
struct __declspec(uuid("086c95cb-4366-467f-b6a3-6f8a2b693f97"))
/* interface */ IMarginProperties;
struct __declspec(uuid("741451a0-5f13-11d2-bcdb-0000f875bcce"))
/* interface */ IGeometryDraw;
struct __declspec(uuid("6e7cb970-0a4d-11d3-bcaf-0080c7e04196"))
/* interface */ IFontSize;
struct __declspec(uuid("77d415d5-5815-4322-87ff-a6940a790107"))
/* interface */ IFontName;
struct __declspec(uuid("a37e7145-e00d-43f3-be13-7e1cc9348329"))
/* interface */ IFontAttribute;
struct __declspec(uuid("df029d39-50d5-40d8-ad2f-bd30eb91418c"))
/* interface */ IBold;
struct __declspec(uuid("a45f4f70-caaa-4fe1-a96b-2f483de67a68"))
/* interface */ IItalic;
struct __declspec(uuid("f9292de5-7d71-41cb-8224-3685744cf564"))
/* interface */ IUnderline;
struct __declspec(uuid("84a1f5c2-d0a1-4e45-842b-149e857e8a9c"))
/* interface */ ISymbolRotation;
struct __declspec(uuid("440b07bb-92f0-11d3-9fcc-00c04f6bc6a5"))
/* interface */ ISymbolIdentifier;
struct __declspec(uuid("877a260a-cacb-48f6-aaf9-a24ce3bc75ff"))
/* interface */ ISymbolIdentifier2;
struct __declspec(uuid("0e5d8c65-8d91-11d3-9fca-00c04f6bc6a5"))
/* interface */ ISymbolCollection;
struct __declspec(uuid("7ed742b9-0aef-40a0-a9a5-de2a302692f2"))
/* interface */ ISymbolCollection2;
struct __declspec(uuid("3e0b2e61-27f4-11d3-9f9c-00c04f6bc6a5"))
/* interface */ IOverposterTextPath;
struct __declspec(uuid("2690cdce-96a4-49da-bd07-3f4ed61efece"))
/* interface */ IWordTextPath;
struct __declspec(uuid("df0f7ba7-1c31-44cb-975f-87ff272793aa"))
/* interface */ IWordBoundaries;
struct __declspec(uuid("65856cd7-ad04-11d3-9fc2-00c04f6bc8dd"))
/* interface */ ISymbologyEnvironment;
struct __declspec(uuid("c6778756-976c-4761-a3a7-661b2446a7bb"))
/* interface */ IPictureSymbolEnvironment;
struct __declspec(uuid("ad134202-770b-47ab-80bd-e3457c5e3168"))
/* interface */ ISimpleLineCallout;
struct __declspec(uuid("55d9f654-5cde-4842-8e47-70518079fe1a"))
/* interface */ ITextParser;
struct __declspec(uuid("5dea57cf-a8ef-4944-b731-87df1b6f136d"))
/* interface */ ITextParserSupport;
struct __declspec(uuid("bf5bd367-5223-49c0-8db0-fbc9d7cf36bb"))
/* interface */ ITextDrawSupport;
struct __declspec(uuid("272369d5-140a-444b-a505-0983bddcdbab"))
/* interface */ IUpdateLegendInfo;
struct /* coclass */ SimpleLineSymbol;
struct /* coclass */ MultiLayerLineSymbol;
struct /* coclass */ CartographicLineSymbol;
struct /* coclass */ HashLineSymbol;
struct /* coclass */ MarkerLineSymbol;
struct /* coclass */ PictureLineSymbol;
struct /* coclass */ SimpleMarkerSymbol;
struct /* coclass */ MultiLayerMarkerSymbol;
struct /* coclass */ CharacterMarkerSymbol;
struct /* coclass */ PictureMarkerSymbol;
struct /* coclass */ ArrowMarkerSymbol;
struct /* coclass */ BarChartSymbol;
struct /* coclass */ PieChartSymbol;
struct /* coclass */ StackedChartSymbol;
struct /* coclass */ SimpleFillSymbol;
struct /* coclass */ MultiLayerFillSymbol;
struct /* coclass */ LineFillSymbol;
struct /* coclass */ PictureFillSymbol;
struct /* coclass */ MarkerFillSymbol;
struct /* coclass */ GradientFillSymbol;
struct /* coclass */ DotDensityFillSymbol;
struct /* coclass */ TextSymbol;
struct /* coclass */ Template;
struct /* coclass */ SimpleLineDecorationElement;
struct /* coclass */ LineDecoration;
struct /* coclass */ SimpleTextPath;
struct /* coclass */ BezierTextPath;
struct /* coclass */ BalloonCallout;
struct /* coclass */ LineCallout;
struct /* coclass */ MarkerTextBackground;
struct /* coclass */ GeometryDraw;
struct /* coclass */ FontSize;
struct /* coclass */ FontName;
struct /* coclass */ FontAttributeBold;
struct /* coclass */ FontAttributeItalic;
struct /* coclass */ FontAttributeUnderline;
struct /* coclass */ SymbolCollection;
struct /* coclass */ SymbolIdentifier;
struct /* coclass */ OverposterTextPath;
struct /* coclass */ WordTextPath;
struct /* coclass */ SymbologyEnvironment;
struct /* coclass */ SimpleLineCallout;
struct /* coclass */ SimpleTextParser;
struct __declspec(uuid("ac0e9824-91cb-11d1-8813-080009ec732a"))
/* interface */ IStyleGalleryClass;
struct __declspec(uuid("ac0e9825-91cb-11d1-8813-080009ec732a"))
/* interface */ IStyleGalleryItem;
struct __declspec(uuid("ac0e9828-91cb-11d1-8813-080009ec732a"))
/* interface */ IEnumStyleGalleryItem;
struct __declspec(uuid("ac0e9826-91cb-11d1-8813-080009ec732a"))
/* interface */ IStyleGallery;
struct __declspec(uuid("001d15b3-0f79-11d2-adfe-080009ec732a"))
/* interface */ IStyleGalleryStorage;
struct __declspec(uuid("17049f80-8e15-11d2-983e-0080c7e04196"))
/* interface */ IStyleImporter;
struct /* coclass */ ServerStyleGalleryItem;
struct /* coclass */ EnumServerStyleGalleryItem;
struct /* coclass */ ServerStyleGallery;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IColor, __uuidof(IColor));
_COM_SMARTPTR_TYPEDEF(IRgbColor, __uuidof(IRgbColor));
_COM_SMARTPTR_TYPEDEF(ICmykColor, __uuidof(ICmykColor));
_COM_SMARTPTR_TYPEDEF(IHsvColor, __uuidof(IHsvColor));
_COM_SMARTPTR_TYPEDEF(IGrayColor, __uuidof(IGrayColor));
_COM_SMARTPTR_TYPEDEF(IHlsColor, __uuidof(IHlsColor));
_COM_SMARTPTR_TYPEDEF(IPostScriptColor, __uuidof(IPostScriptColor));
_COM_SMARTPTR_TYPEDEF(IMonitorSettings, __uuidof(IMonitorSettings));
_COM_SMARTPTR_TYPEDEF(ICieLabConversion, __uuidof(ICieLabConversion));
_COM_SMARTPTR_TYPEDEF(IEnumColors, __uuidof(IEnumColors));
_COM_SMARTPTR_TYPEDEF(IColorRamp, __uuidof(IColorRamp));
_COM_SMARTPTR_TYPEDEF(IRandomColorRamp, __uuidof(IRandomColorRamp));
_COM_SMARTPTR_TYPEDEF(IAlgorithmicColorRamp, __uuidof(IAlgorithmicColorRamp));
_COM_SMARTPTR_TYPEDEF(IPresetColorRamp, __uuidof(IPresetColorRamp));
_COM_SMARTPTR_TYPEDEF(IMultiPartColorRamp, __uuidof(IMultiPartColorRamp));
_COM_SMARTPTR_TYPEDEF(ISymbol, __uuidof(ISymbol));
_COM_SMARTPTR_TYPEDEF(IMarkerSymbol, __uuidof(IMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(ILineSymbol, __uuidof(ILineSymbol));
_COM_SMARTPTR_TYPEDEF(IFillSymbol, __uuidof(IFillSymbol));
_COM_SMARTPTR_TYPEDEF(ITextSymbol, __uuidof(ITextSymbol));
_COM_SMARTPTR_TYPEDEF(IEnumSymbol, __uuidof(IEnumSymbol));
_COM_SMARTPTR_TYPEDEF(ISymbol3D, __uuidof(ISymbol3D));
_COM_SMARTPTR_TYPEDEF(IDisplayFilter, __uuidof(IDisplayFilter));
_COM_SMARTPTR_TYPEDEF(ITransparencyDisplayFilter, __uuidof(ITransparencyDisplayFilter));
_COM_SMARTPTR_TYPEDEF(IDisplayAdmin, __uuidof(IDisplayAdmin));
_COM_SMARTPTR_TYPEDEF(IDisplayFilterManager, __uuidof(IDisplayFilterManager));
_COM_SMARTPTR_TYPEDEF(IDisplayAdmin2, __uuidof(IDisplayAdmin2));
_COM_SMARTPTR_TYPEDEF(IDisplayTransformation, __uuidof(IDisplayTransformation));
_COM_SMARTPTR_TYPEDEF(ITransformEvents, __uuidof(ITransformEvents));
_COM_SMARTPTR_TYPEDEF(IIlluminationProps, __uuidof(IIlluminationProps));
_COM_SMARTPTR_TYPEDEF(IDisplay, __uuidof(IDisplay));
_COM_SMARTPTR_TYPEDEF(IDraw, __uuidof(IDraw));
_COM_SMARTPTR_TYPEDEF(IDisplay3D, __uuidof(IDisplay3D));
_COM_SMARTPTR_TYPEDEF(IDisplayTransformationAdmin, __uuidof(IDisplayTransformationAdmin));
_COM_SMARTPTR_TYPEDEF(IDisplayEvents, __uuidof(IDisplayEvents));
_COM_SMARTPTR_TYPEDEF(IDicerCallback, __uuidof(IDicerCallback));
_COM_SMARTPTR_TYPEDEF(IDelayEvents, __uuidof(IDelayEvents));
_COM_SMARTPTR_TYPEDEF(IRasterOutputSettings, __uuidof(IRasterOutputSettings));
_COM_SMARTPTR_TYPEDEF(IOutputRasterSettings, __uuidof(IOutputRasterSettings));
_COM_SMARTPTR_TYPEDEF(IScreenDisplay, __uuidof(IScreenDisplay));
_COM_SMARTPTR_TYPEDEF(IScreenDisplay2, __uuidof(IScreenDisplay2));
_COM_SMARTPTR_TYPEDEF(IAppDisplay, __uuidof(IAppDisplay));
_COM_SMARTPTR_TYPEDEF(IScreenCacheManager, __uuidof(IScreenCacheManager));
_COM_SMARTPTR_TYPEDEF(IScreenInvalidate, __uuidof(IScreenInvalidate));
_COM_SMARTPTR_TYPEDEF(IEnumScreenDisplay, __uuidof(IEnumScreenDisplay));
_COM_SMARTPTR_TYPEDEF(IDisplayFeedback, __uuidof(IDisplayFeedback));
_COM_SMARTPTR_TYPEDEF(ISelectionTracker, __uuidof(ISelectionTracker));
_COM_SMARTPTR_TYPEDEF(IAnchorPoint, __uuidof(IAnchorPoint));
_COM_SMARTPTR_TYPEDEF(ICalloutTracker, __uuidof(ICalloutTracker));
_COM_SMARTPTR_TYPEDEF(IRotateTracker, __uuidof(IRotateTracker));
_COM_SMARTPTR_TYPEDEF(IScaleTracker, __uuidof(IScaleTracker));
_COM_SMARTPTR_TYPEDEF(IVertexFeedback, __uuidof(IVertexFeedback));
_COM_SMARTPTR_TYPEDEF(IReshapeFeedback, __uuidof(IReshapeFeedback));
_COM_SMARTPTR_TYPEDEF(INewEnvelopeFeedback, __uuidof(INewEnvelopeFeedback));
_COM_SMARTPTR_TYPEDEF(INewEnvelopeFeedback2, __uuidof(INewEnvelopeFeedback2));
_COM_SMARTPTR_TYPEDEF(IMoveEnvelopeFeedback, __uuidof(IMoveEnvelopeFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveTextFeedback, __uuidof(IMoveTextFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveCurvedTextFeedback, __uuidof(IMoveCurvedTextFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveTextAlongShapeFeedback, __uuidof(IMoveTextAlongShapeFeedback));
_COM_SMARTPTR_TYPEDEF(IResizeEnvelopeFeedback, __uuidof(IResizeEnvelopeFeedback));
_COM_SMARTPTR_TYPEDEF(IResizeEnvelopeFeedback2, __uuidof(IResizeEnvelopeFeedback2));
_COM_SMARTPTR_TYPEDEF(IResizeTextFeedback, __uuidof(IResizeTextFeedback));
_COM_SMARTPTR_TYPEDEF(INewMultiPointFeedback, __uuidof(INewMultiPointFeedback));
_COM_SMARTPTR_TYPEDEF(INewLineFeedback, __uuidof(INewLineFeedback));
_COM_SMARTPTR_TYPEDEF(INewBezierCurveFeedback, __uuidof(INewBezierCurveFeedback));
_COM_SMARTPTR_TYPEDEF(INewTextBezierCurveFeedback, __uuidof(INewTextBezierCurveFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveLineFeedback, __uuidof(IMoveLineFeedback));
_COM_SMARTPTR_TYPEDEF(IMovePointFeedback, __uuidof(IMovePointFeedback));
_COM_SMARTPTR_TYPEDEF(ILineMovePointFeedback, __uuidof(ILineMovePointFeedback));
_COM_SMARTPTR_TYPEDEF(INewPolygonFeedback, __uuidof(INewPolygonFeedback));
_COM_SMARTPTR_TYPEDEF(IMovePolygonFeedback, __uuidof(IMovePolygonFeedback));
_COM_SMARTPTR_TYPEDEF(IPolygonMovePointFeedback, __uuidof(IPolygonMovePointFeedback));
_COM_SMARTPTR_TYPEDEF(IStretchLineFeedback, __uuidof(IStretchLineFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveGeometryFeedback, __uuidof(IMoveGeometryFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveImageFeedback, __uuidof(IMoveImageFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveImageFeedback2, __uuidof(IMoveImageFeedback2));
_COM_SMARTPTR_TYPEDEF(ICalloutFeedback, __uuidof(ICalloutFeedback));
_COM_SMARTPTR_TYPEDEF(ICalloutFeedback2, __uuidof(ICalloutFeedback2));
_COM_SMARTPTR_TYPEDEF(INewCircleFeedback, __uuidof(INewCircleFeedback));
_COM_SMARTPTR_TYPEDEF(IRubberBand, __uuidof(IRubberBand));
_COM_SMARTPTR_TYPEDEF(IRotateTextFeedback, __uuidof(IRotateTextFeedback));
_COM_SMARTPTR_TYPEDEF(INewTextFeedback, __uuidof(INewTextFeedback));
_COM_SMARTPTR_TYPEDEF(IMoveBitmapFeedback, __uuidof(IMoveBitmapFeedback));
_COM_SMARTPTR_TYPEDEF(IPointCollectionTracker, __uuidof(IPointCollectionTracker));
_COM_SMARTPTR_TYPEDEF(ITemplate, __uuidof(ITemplate));
_COM_SMARTPTR_TYPEDEF(ILineDecoration, __uuidof(ILineDecoration));
_COM_SMARTPTR_TYPEDEF(ILineDecorationElement, __uuidof(ILineDecorationElement));
_COM_SMARTPTR_TYPEDEF(IMask, __uuidof(IMask));
_COM_SMARTPTR_TYPEDEF(ITextPath, __uuidof(ITextPath));
_COM_SMARTPTR_TYPEDEF(ITextBackground, __uuidof(ITextBackground));
_COM_SMARTPTR_TYPEDEF(ICallout, __uuidof(ICallout));
_COM_SMARTPTR_TYPEDEF(ILineCallout, __uuidof(ILineCallout));
_COM_SMARTPTR_TYPEDEF(IMapLevel, __uuidof(IMapLevel));
_COM_SMARTPTR_TYPEDEF(IDisplayName, __uuidof(IDisplayName));
_COM_SMARTPTR_TYPEDEF(IQueryGeometry, __uuidof(IQueryGeometry));
_COM_SMARTPTR_TYPEDEF(ISimpleLineSymbol, __uuidof(ISimpleLineSymbol));
_COM_SMARTPTR_TYPEDEF(IReferenceLineSymbol, __uuidof(IReferenceLineSymbol));
_COM_SMARTPTR_TYPEDEF(IMultiLayerLineSymbol, __uuidof(IMultiLayerLineSymbol));
_COM_SMARTPTR_TYPEDEF(ILayerVisible, __uuidof(ILayerVisible));
_COM_SMARTPTR_TYPEDEF(ILayerColorLock, __uuidof(ILayerColorLock));
_COM_SMARTPTR_TYPEDEF(ILineProperties, __uuidof(ILineProperties));
_COM_SMARTPTR_TYPEDEF(ICartographicLineSymbol, __uuidof(ICartographicLineSymbol));
_COM_SMARTPTR_TYPEDEF(IHashLineSymbol, __uuidof(IHashLineSymbol));
_COM_SMARTPTR_TYPEDEF(IMarkerLineSymbol, __uuidof(IMarkerLineSymbol));
_COM_SMARTPTR_TYPEDEF(IPictureLineSymbol, __uuidof(IPictureLineSymbol));
_COM_SMARTPTR_TYPEDEF(ISimpleMarkerSymbol, __uuidof(ISimpleMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(IArrowMarkerSymbol, __uuidof(IArrowMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(IReferenceMarkerSymbol, __uuidof(IReferenceMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(IMultiLayerMarkerSymbol, __uuidof(IMultiLayerMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(ICartographicMarkerSymbol, __uuidof(ICartographicMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(ICharacterMarkerSymbol, __uuidof(ICharacterMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(IPictureMarkerSymbol, __uuidof(IPictureMarkerSymbol));
_COM_SMARTPTR_TYPEDEF(ISymbolArray, __uuidof(ISymbolArray));
_COM_SMARTPTR_TYPEDEF(IChartSymbol, __uuidof(IChartSymbol));
_COM_SMARTPTR_TYPEDEF(IPieChartSymbol, __uuidof(IPieChartSymbol));
_COM_SMARTPTR_TYPEDEF(IBarChartSymbol, __uuidof(IBarChartSymbol));
_COM_SMARTPTR_TYPEDEF(IStackedChartSymbol, __uuidof(IStackedChartSymbol));
_COM_SMARTPTR_TYPEDEF(I3DChartSymbol, __uuidof(I3DChartSymbol));
_COM_SMARTPTR_TYPEDEF(IMarkerBackground, __uuidof(IMarkerBackground));
_COM_SMARTPTR_TYPEDEF(IMarkerBackgroundSupport, __uuidof(IMarkerBackgroundSupport));
_COM_SMARTPTR_TYPEDEF(IMarkerMask, __uuidof(IMarkerMask));
_COM_SMARTPTR_TYPEDEF(ISimpleFillSymbol, __uuidof(ISimpleFillSymbol));
_COM_SMARTPTR_TYPEDEF(IReferenceFillSymbol, __uuidof(IReferenceFillSymbol));
_COM_SMARTPTR_TYPEDEF(IMultiLayerFillSymbol, __uuidof(IMultiLayerFillSymbol));
_COM_SMARTPTR_TYPEDEF(ILineFillSymbol, __uuidof(ILineFillSymbol));
_COM_SMARTPTR_TYPEDEF(IPictureFillSymbol, __uuidof(IPictureFillSymbol));
_COM_SMARTPTR_TYPEDEF(IMarkerFillSymbol, __uuidof(IMarkerFillSymbol));
_COM_SMARTPTR_TYPEDEF(IGradientFillSymbol, __uuidof(IGradientFillSymbol));
_COM_SMARTPTR_TYPEDEF(IDotDensityFillSymbol, __uuidof(IDotDensityFillSymbol));
_COM_SMARTPTR_TYPEDEF(IDotDensityFillSymbol2, __uuidof(IDotDensityFillSymbol2));
_COM_SMARTPTR_TYPEDEF(IDotDensityMasking, __uuidof(IDotDensityMasking));
_COM_SMARTPTR_TYPEDEF(IFillProperties, __uuidof(IFillProperties));
_COM_SMARTPTR_TYPEDEF(ISimpleTextSymbol, __uuidof(ISimpleTextSymbol));
_COM_SMARTPTR_TYPEDEF(IFormattedTextSymbol, __uuidof(IFormattedTextSymbol));
_COM_SMARTPTR_TYPEDEF(ICharacterOrientation, __uuidof(ICharacterOrientation));
_COM_SMARTPTR_TYPEDEF(ISimpleLineDecorationElement, __uuidof(ISimpleLineDecorationElement));
_COM_SMARTPTR_TYPEDEF(ITextPath2, __uuidof(ITextPath2));
_COM_SMARTPTR_TYPEDEF(ITextBackground2, __uuidof(ITextBackground2));
_COM_SMARTPTR_TYPEDEF(IBalloonCallout, __uuidof(IBalloonCallout));
_COM_SMARTPTR_TYPEDEF(IMarkerTextBackground, __uuidof(IMarkerTextBackground));
_COM_SMARTPTR_TYPEDEF(ITextMargins, __uuidof(ITextMargins));
_COM_SMARTPTR_TYPEDEF(IMarginProperties, __uuidof(IMarginProperties));
_COM_SMARTPTR_TYPEDEF(IGeometryDraw, __uuidof(IGeometryDraw));
_COM_SMARTPTR_TYPEDEF(IFontSize, __uuidof(IFontSize));
_COM_SMARTPTR_TYPEDEF(IFontName, __uuidof(IFontName));
_COM_SMARTPTR_TYPEDEF(IFontAttribute, __uuidof(IFontAttribute));
_COM_SMARTPTR_TYPEDEF(IBold, __uuidof(IBold));
_COM_SMARTPTR_TYPEDEF(IItalic, __uuidof(IItalic));
_COM_SMARTPTR_TYPEDEF(IUnderline, __uuidof(IUnderline));
_COM_SMARTPTR_TYPEDEF(ISymbolRotation, __uuidof(ISymbolRotation));
_COM_SMARTPTR_TYPEDEF(ISymbolIdentifier, __uuidof(ISymbolIdentifier));
_COM_SMARTPTR_TYPEDEF(ISymbolIdentifier2, __uuidof(ISymbolIdentifier2));
_COM_SMARTPTR_TYPEDEF(ISymbolCollection, __uuidof(ISymbolCollection));
_COM_SMARTPTR_TYPEDEF(ISymbolCollection2, __uuidof(ISymbolCollection2));
_COM_SMARTPTR_TYPEDEF(IOverposterTextPath, __uuidof(IOverposterTextPath));
_COM_SMARTPTR_TYPEDEF(IWordTextPath, __uuidof(IWordTextPath));
_COM_SMARTPTR_TYPEDEF(IWordBoundaries, __uuidof(IWordBoundaries));
_COM_SMARTPTR_TYPEDEF(ISymbologyEnvironment, __uuidof(ISymbologyEnvironment));
_COM_SMARTPTR_TYPEDEF(IPictureSymbolEnvironment, __uuidof(IPictureSymbolEnvironment));
_COM_SMARTPTR_TYPEDEF(ISimpleLineCallout, __uuidof(ISimpleLineCallout));
_COM_SMARTPTR_TYPEDEF(ITextParser, __uuidof(ITextParser));
_COM_SMARTPTR_TYPEDEF(ITextParserSupport, __uuidof(ITextParserSupport));
_COM_SMARTPTR_TYPEDEF(ITextDrawSupport, __uuidof(ITextDrawSupport));
_COM_SMARTPTR_TYPEDEF(IUpdateLegendInfo, __uuidof(IUpdateLegendInfo));
_COM_SMARTPTR_TYPEDEF(IStyleGalleryClass, __uuidof(IStyleGalleryClass));
_COM_SMARTPTR_TYPEDEF(IStyleGalleryItem, __uuidof(IStyleGalleryItem));
_COM_SMARTPTR_TYPEDEF(IEnumStyleGalleryItem, __uuidof(IEnumStyleGalleryItem));
_COM_SMARTPTR_TYPEDEF(IStyleGallery, __uuidof(IStyleGallery));
_COM_SMARTPTR_TYPEDEF(IStyleGalleryStorage, __uuidof(IStyleGalleryStorage));
_COM_SMARTPTR_TYPEDEF(IStyleImporter, __uuidof(IStyleImporter));

//
// Type library items
//

struct __declspec(uuid("20cd40b0-8f3d-11d0-8590-0800091a2a72"))
IColor : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_RGB (
        OLE_COLOR RGB ) = 0;
    virtual HRESULT __stdcall get_RGB (
        OLE_COLOR * RGB ) = 0;
    virtual HRESULT __stdcall put_CMYK (
        OLE_COLOR CMYK ) = 0;
    virtual HRESULT __stdcall get_CMYK (
        OLE_COLOR * CMYK ) = 0;
    virtual HRESULT __stdcall put_UseWindowsDithering (
        VARIANT_BOOL useDithering ) = 0;
    virtual HRESULT __stdcall get_UseWindowsDithering (
        VARIANT_BOOL * useDithering ) = 0;
    virtual HRESULT __stdcall SetCIELAB (
        double l,
        double a,
        double b ) = 0;
    virtual HRESULT __stdcall GetCIELAB (
        double * l,
        double * a,
        double * b ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        unsigned char alphaValue ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        unsigned char * alphaValue ) = 0;
    virtual HRESULT __stdcall put_NullColor (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_NullColor (
        VARIANT_BOOL * flag ) = 0;
};

struct __declspec(uuid("20cd40b1-8f3d-11d0-8590-0800091a2a72"))
IRgbColor : IColor
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Red (
        long Red ) = 0;
    virtual HRESULT __stdcall get_Red (
        long * Red ) = 0;
    virtual HRESULT __stdcall put_Green (
        long Green ) = 0;
    virtual HRESULT __stdcall get_Green (
        long * Green ) = 0;
    virtual HRESULT __stdcall put_Blue (
        long Blue ) = 0;
    virtual HRESULT __stdcall get_Blue (
        long * Blue ) = 0;
};

struct __declspec(uuid("20cd40b2-8f3d-11d0-8590-0800091a2a72"))
ICmykColor : IColor
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Cyan (
        long Cyan ) = 0;
    virtual HRESULT __stdcall get_Cyan (
        long * Cyan ) = 0;
    virtual HRESULT __stdcall put_Magenta (
        long Magenta ) = 0;
    virtual HRESULT __stdcall get_Magenta (
        long * Magenta ) = 0;
    virtual HRESULT __stdcall put_Yellow (
        long Yellow ) = 0;
    virtual HRESULT __stdcall get_Yellow (
        long * Yellow ) = 0;
    virtual HRESULT __stdcall put_Black (
        long Black ) = 0;
    virtual HRESULT __stdcall get_Black (
        long * Black ) = 0;
};

struct __declspec(uuid("20cd40b3-8f3d-11d0-8590-0800091a2a72"))
IHsvColor : IColor
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Hue (
        long Hue ) = 0;
    virtual HRESULT __stdcall get_Hue (
        long * Hue ) = 0;
    virtual HRESULT __stdcall put_Saturation (
        long Saturation ) = 0;
    virtual HRESULT __stdcall get_Saturation (
        long * Saturation ) = 0;
    virtual HRESULT __stdcall put_Value (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Value (
        long * Value ) = 0;
};

struct __declspec(uuid("20cd40b4-8f3d-11d0-8590-0800091a2a72"))
IGrayColor : IColor
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Level (
        long outLevel ) = 0;
    virtual HRESULT __stdcall get_Level (
        long * outLevel ) = 0;
};

struct __declspec(uuid("7ee9c491-d123-11d0-8383-080009b996cc"))
IHlsColor : IColor
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Hue (
        long Hue ) = 0;
    virtual HRESULT __stdcall get_Hue (
        long * Hue ) = 0;
    virtual HRESULT __stdcall put_Lightness (
        long Lightness ) = 0;
    virtual HRESULT __stdcall get_Lightness (
        long * Lightness ) = 0;
    virtual HRESULT __stdcall put_Saturation (
        long Saturation ) = 0;
    virtual HRESULT __stdcall get_Saturation (
        long * Saturation ) = 0;
};

struct __declspec(uuid("6060613e-1233-11d3-9f45-00c04f6bc709"))
IPostScriptColor : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Overprint (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_Overprint (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_SpotColor (
        VARIANT_BOOL isSpot ) = 0;
    virtual HRESULT __stdcall get_SpotColor (
        VARIANT_BOOL * isSpot ) = 0;
    virtual HRESULT __stdcall put_SpotDescription (
        BSTR desc ) = 0;
    virtual HRESULT __stdcall get_SpotDescription (
        BSTR * desc ) = 0;
    virtual HRESULT __stdcall put_SpotPercentage (
        short percent ) = 0;
    virtual HRESULT __stdcall get_SpotPercentage (
        short * percent ) = 0;
};

struct __declspec(uuid("9db25fdf-3c75-11d2-aaf6-00c04fa334b3"))
IMonitorSettings : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_MonitorName (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_MonitorName (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Gamma (
        double Gamma ) = 0;
    virtual HRESULT __stdcall get_Gamma (
        double * Gamma ) = 0;
    virtual HRESULT __stdcall put_WhitePointName (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_WhitePointName (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_PhosphorName (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_PhosphorName (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall SetWhitePoint (
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall GetWhitePoint (
        double * x,
        double * y ) = 0;
    virtual HRESULT __stdcall SetRedPoint (
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall GetRedPoint (
        double * x,
        double * y ) = 0;
    virtual HRESULT __stdcall SetGreenPoint (
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall GetGreenPoint (
        double * x,
        double * y ) = 0;
    virtual HRESULT __stdcall SetBluePoint (
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall GetBluePoint (
        double * x,
        double * y ) = 0;
};

struct __declspec(uuid("137e39db-3e98-11d2-aaf7-00c04fa334b3"))
ICieLabConversion : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall RgbToLab (
        OLE_COLOR RGB,
        double * l,
        double * a,
        double * b ) = 0;
    virtual HRESULT __stdcall LabToRgb (
        OLE_COLOR * RGB,
        double l,
        double a,
        double b ) = 0;
    virtual HRESULT __stdcall HsvToLab (
        short h,
        unsigned char s,
        unsigned char v,
        double * l,
        double * a,
        double * b ) = 0;
    virtual HRESULT __stdcall LabToHsv (
        short * h,
        unsigned char * s,
        unsigned char * v,
        double l,
        double a,
        double b ) = 0;
    virtual HRESULT __stdcall GetDistance (
        double l1,
        double a1,
        double b1,
        double l2,
        double a2,
        double b2,
        double * dist ) = 0;
    virtual HRESULT __stdcall ReloadSettings ( ) = 0;
    virtual HRESULT __stdcall get_SettingsVersion (
        long * version ) = 0;
};

struct __declspec(uuid("7ee9c496-d123-11d0-8383-080009b996cc"))
RgbColor;
    // [ default ] interface IUnknown
    // interface IRgbColor
    // interface IColor
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("7ee9c497-d123-11d0-8383-080009b996cc"))
CmykColor;
    // [ default ] interface IUnknown
    // interface ICmykColor
    // interface IPostScriptColor
    // interface IColor
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("7ee9c492-d123-11d0-8383-080009b996cc"))
HsvColor;
    // [ default ] interface IUnknown
    // interface IHsvColor
    // interface IColor
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("7ee9c495-d123-11d0-8383-080009b996cc"))
GrayColor;
    // [ default ] interface IUnknown
    // interface IGrayColor
    // interface IColor
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("7ee9c493-d123-11d0-8383-080009b996cc"))
HlsColor;
    // [ default ] interface IUnknown
    // interface IHlsColor
    // interface IColor
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("9db25fe0-3c75-11d2-aaf6-00c04fa334b3"))
MonitorSettings;
    // [ default ] interface IUnknown
    // interface IMonitorSettings

struct __declspec(uuid("137e39dc-3e98-11d2-aaf7-00c04fa334b3"))
CieLabConversion;
    // [ default ] interface IUnknown
    // interface ICieLabConversion

struct __declspec(uuid("beb87092-c0b4-11d0-8379-080009b996cc"))
IEnumColors : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        struct IColor * * nextColor ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("beb87091-c0b4-11d0-8379-080009b996cc"))
IColorRamp : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Name (
        BSTR pName ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall put_Size (
        long Count ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Colors (
        struct IEnumColors * * enumColors ) = 0;
    virtual HRESULT __stdcall get_Color (
        long index,
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall CreateRamp (
        VARIANT_BOOL * ok ) = 0;
};

struct __declspec(uuid("beb87095-c0b4-11d0-8379-080009b996cc"))
IRandomColorRamp : IColorRamp
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Seed (
        long Seed ) = 0;
    virtual HRESULT __stdcall get_Seed (
        long * Seed ) = 0;
    virtual HRESULT __stdcall put_UseSeed (
        VARIANT_BOOL UseSeed ) = 0;
    virtual HRESULT __stdcall get_UseSeed (
        VARIANT_BOOL * UseSeed ) = 0;
    virtual HRESULT __stdcall put_MinValue (
        long MinValue ) = 0;
    virtual HRESULT __stdcall get_MinValue (
        long * MinValue ) = 0;
    virtual HRESULT __stdcall put_MaxValue (
        long MaxValue ) = 0;
    virtual HRESULT __stdcall get_MaxValue (
        long * MaxValue ) = 0;
    virtual HRESULT __stdcall put_MinSaturation (
        long MinSaturation ) = 0;
    virtual HRESULT __stdcall get_MinSaturation (
        long * MinSaturation ) = 0;
    virtual HRESULT __stdcall put_MaxSaturation (
        long MaxSaturation ) = 0;
    virtual HRESULT __stdcall get_MaxSaturation (
        long * MaxSaturation ) = 0;
    virtual HRESULT __stdcall put_StartHue (
        long StartHue ) = 0;
    virtual HRESULT __stdcall get_StartHue (
        long * StartHue ) = 0;
    virtual HRESULT __stdcall put_EndHue (
        long EndHue ) = 0;
    virtual HRESULT __stdcall get_EndHue (
        long * EndHue ) = 0;
};

enum esriColorRampAlgorithm
{
    esriHSVAlgorithm = 0,
    esriCIELabAlgorithm = 1,
    esriLabLChAlgorithm = 2
};

struct __declspec(uuid("beb87096-c0b4-11d0-8379-080009b996cc"))
IAlgorithmicColorRamp : IColorRamp
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FromColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_FromColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_ToColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_ToColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall put_Algorithm (
        enum esriColorRampAlgorithm Algorithm ) = 0;
    virtual HRESULT __stdcall get_Algorithm (
        enum esriColorRampAlgorithm * Algorithm ) = 0;
};

struct __declspec(uuid("beb87097-c0b4-11d0-8379-080009b996cc"))
IPresetColorRamp : IColorRamp
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_PresetColor (
        long index,
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_PresetColor (
        long index,
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall get_NumberOfPresetColors (
        long * Count ) = 0;
};

struct __declspec(uuid("beb87098-c0b4-11d0-8379-080009b996cc"))
IMultiPartColorRamp : IColorRamp
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Ramp (
        long index,
        struct IColorRamp * ColorRamp ) = 0;
    virtual HRESULT __stdcall get_Ramp (
        long index,
        struct IColorRamp * * ColorRamp ) = 0;
    virtual HRESULT __stdcall AddRamp (
        struct IColorRamp * ColorRamp ) = 0;
    virtual HRESULT __stdcall RemoveRamp (
        long index ) = 0;
    virtual HRESULT __stdcall get_NumberOfRamps (
        long * Count ) = 0;
};

struct __declspec(uuid("beb87094-c0b4-11d0-8379-080009b996cc"))
RandomColorRamp;
    // [ default ] interface IUnknown
    // interface IRandomColorRamp
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("beb8709b-c0b4-11d0-8379-080009b996cc"))
AlgorithmicColorRamp;
    // [ default ] interface IUnknown
    // interface IAlgorithmicColorRamp
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("beb8709a-c0b4-11d0-8379-080009b996cc"))
PresetColorRamp;
    // [ default ] interface IUnknown
    // interface IPresetColorRamp
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("beb87099-c0b4-11d0-8379-080009b996cc"))
MultiPartColorRamp;
    // [ default ] interface IUnknown
    // interface IMultiPartColorRamp
    // interface IClone
    // interface IPersist
    // interface IPersistStream

enum esriRasterOpCode
{
    esriROPBlack = 1,
    esriROPNotMergePen = 2,
    esriROPMaskNotPen = 3,
    esriROPNotCopyPen = 4,
    esriROPMaskPenNot = 5,
    esriROPNot = 6,
    esriROPXOrPen = 7,
    esriROPNotMaskPen = 8,
    esriROPMaskPen = 9,
    esriROPNotXOrPen = 10,
    esriROPNOP = 11,
    esriROPMergeNotPen = 12,
    esriROPCopyPen = 13,
    esriROPMergePenNot = 14,
    esriROPMergePen = 15,
    esriROPWhite = 16
};

enum esriTextHorizontalAlignment
{
    esriTHALeft = 0,
    esriTHACenter = 1,
    esriTHARight = 2,
    esriTHAFull = 3
};

enum esriTextVerticalAlignment
{
    esriTVATop = 0,
    esriTVACenter = 1,
    esriTVABaseline = 2,
    esriTVABottom = 3
};

struct __declspec(uuid("f3435802-5779-11d0-98bf-00805f7ced21"))
ISymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetupDC (
        OLE_HANDLE hDC,
        struct ITransformation * transformation ) = 0;
    virtual HRESULT __stdcall ResetDC ( ) = 0;
    virtual HRESULT __stdcall Draw (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall QueryBoundary (
        OLE_HANDLE hDC,
        struct ITransformation * displayTransform,
        struct IGeometry * Geometry,
        struct IPolygon * boundary ) = 0;
    virtual HRESULT __stdcall get_ROP2 (
        enum esriRasterOpCode * DrawMode ) = 0;
    virtual HRESULT __stdcall put_ROP2 (
        enum esriRasterOpCode DrawMode ) = 0;
};

struct __declspec(uuid("e6bdaa7c-4d35-11d0-98be-00805f7ced21"))
IMarkerSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Size (
        double * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        double Size ) = 0;
    virtual HRESULT __stdcall get_Color (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_XOffset (
        double * XOffset ) = 0;
    virtual HRESULT __stdcall put_XOffset (
        double XOffset ) = 0;
    virtual HRESULT __stdcall get_YOffset (
        double * YOffset ) = 0;
    virtual HRESULT __stdcall put_YOffset (
        double YOffset ) = 0;
};

struct __declspec(uuid("e6bdaa7d-4d35-11d0-98be-00805f7ced21"))
ILineSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_Width (
        double * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        double Width ) = 0;
};

struct __declspec(uuid("e6bdaa7e-4d35-11d0-98be-00805f7ced21"))
IFillSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_Outline (
        struct ILineSymbol * * outlineSym ) = 0;
    virtual HRESULT __stdcall put_Outline (
        struct ILineSymbol * outlineSym ) = 0;
};

struct __declspec(uuid("a80b5e91-7f9c-11d0-9410-080009eebecb"))
ITextSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Font (
        IFontDisp * * fontDisp ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * fontDisp ) = 0;
    virtual HRESULT __stdcall get_Size (
        double * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        double Size ) = 0;
    virtual HRESULT __stdcall get_Color (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_VerticalAlignment (
        enum esriTextVerticalAlignment * vertAlignment ) = 0;
    virtual HRESULT __stdcall put_VerticalAlignment (
        enum esriTextVerticalAlignment vertAlignment ) = 0;
    virtual HRESULT __stdcall get_HorizontalAlignment (
        enum esriTextHorizontalAlignment * horizAlignment ) = 0;
    virtual HRESULT __stdcall put_HorizontalAlignment (
        enum esriTextHorizontalAlignment horizAlignment ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_RightToLeft (
        VARIANT_BOOL * RightToLeft ) = 0;
    virtual HRESULT __stdcall put_RightToLeft (
        VARIANT_BOOL RightToLeft ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * Text ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR Text ) = 0;
    virtual HRESULT __stdcall GetTextSize (
        OLE_HANDLE hDC,
        struct ITransformation * transformation,
        BSTR Text,
        double * xSize,
        double * ySize ) = 0;
};

struct __declspec(uuid("2f77f380-4448-11d2-97cc-0080c7e04196"))
IEnumSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("869331a4-a283-4dcb-a4d9-dfd02dc95f3a"))
ISymbol3D : IUnknown
{};

enum esriDisplayFilterFlags
{
    esriDFExternalCache = 1
};

struct __declspec(uuid("19f85377-1387-11d3-b89c-00600802e603"))
IDisplayFilter : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_BackgroundRGB (
        OLE_COLOR RGB ) = 0;
    virtual HRESULT __stdcall get_BackgroundRGB (
        OLE_COLOR * RGB ) = 0;
    virtual HRESULT __stdcall put_Flags (
        enum esriDisplayFilterFlags Flags ) = 0;
    virtual HRESULT __stdcall get_Flags (
        enum esriDisplayFilterFlags * Flags ) = 0;
    virtual HRESULT __stdcall Apply (
        OLE_HANDLE backgroundHDC,
        OLE_HANDLE foregroundHDC,
        OLE_HANDLE destinationHDC,
        long clipLeft,
        long clipTop,
        long clipRight,
        long clipBottom,
        long destinationLeft,
        long destinationTop ) = 0;
};

struct __declspec(uuid("19f85378-1387-11d3-b89c-00600802e603"))
ITransparencyDisplayFilter : IDisplayFilter
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Transparency (
        short alpha ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        short * alpha ) = 0;
};

struct __declspec(uuid("12e361f0-1907-11d3-80c7-0080c79f0371"))
IDisplayAdmin : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UsesFilter (
        VARIANT_BOOL * UsesFilter ) = 0;
};

struct __declspec(uuid("f0815360-19e1-11d3-80c8-0080c79f0371"))
IDisplayFilterManager : IDisplayAdmin
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_DisplayFilter (
        struct IDisplayFilter * DisplayFilter ) = 0;
    virtual HRESULT __stdcall get_DisplayFilter (
        struct IDisplayFilter * * DisplayFilter ) = 0;
};

struct __declspec(uuid("d915ec07-7b4f-47fd-b59b-3252f3a3b610"))
IDisplayAdmin2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UsesFilter (
        VARIANT_BOOL * UsesFilter ) = 0;
    virtual HRESULT __stdcall get_RequiresBanding (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall get_DoesBlending (
        VARIANT_BOOL * flag ) = 0;
};

struct __declspec(uuid("e6bdb000-4d35-11d0-98be-00805f7ced21"))
IDisplayTransformation : ITransformation
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Bounds (
        struct IEnvelope * Bounds ) = 0;
    virtual HRESULT __stdcall get_Bounds (
        struct IEnvelope * * Bounds ) = 0;
    virtual HRESULT __stdcall put_VisibleBounds (
        struct IEnvelope * Bounds ) = 0;
    virtual HRESULT __stdcall get_VisibleBounds (
        struct IEnvelope * * Bounds ) = 0;
    virtual HRESULT __stdcall get_FittedBounds (
        struct IEnvelope * * Bounds ) = 0;
    virtual HRESULT __stdcall get_ConstrainedBounds (
        struct IEnvelope * * Bounds ) = 0;
    virtual HRESULT __stdcall put_DeviceFrame (
        struct tagRECT * Bounds ) = 0;
    virtual HRESULT __stdcall get_DeviceFrame (
        struct tagRECT * Bounds ) = 0;
    virtual HRESULT __stdcall put_ZoomResolution (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_ZoomResolution (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_Resolution (
        double pDpi ) = 0;
    virtual HRESULT __stdcall get_Resolution (
        double * pDpi ) = 0;
    virtual HRESULT __stdcall put_Rotation (
        double degrees ) = 0;
    virtual HRESULT __stdcall get_Rotation (
        double * degrees ) = 0;
    virtual HRESULT __stdcall get_Units (
        enum esriUnits * unitsCode ) = 0;
    virtual HRESULT __stdcall put_Units (
        enum esriUnits unitsCode ) = 0;
    virtual HRESULT __stdcall get_ScaleRatio (
        double * scale ) = 0;
    virtual HRESULT __stdcall put_ScaleRatio (
        double scale ) = 0;
    virtual HRESULT __stdcall get_ReferenceScale (
        double * scale ) = 0;
    virtual HRESULT __stdcall put_ReferenceScale (
        double scale ) = 0;
    virtual HRESULT __stdcall putref_SpatialReference (
        struct ISpatialReference * SpatialReference ) = 0;
    virtual HRESULT __stdcall get_SpatialReference (
        struct ISpatialReference * * SpatialReference ) = 0;
    virtual HRESULT __stdcall get_SuppressEvents (
        VARIANT_BOOL * SuppressEvents ) = 0;
    virtual HRESULT __stdcall put_SuppressEvents (
        VARIANT_BOOL SuppressEvents ) = 0;
    virtual HRESULT __stdcall TransformRect (
        struct IEnvelope * mapRect,
        struct tagRECT * devRect,
        long options ) = 0;
    virtual HRESULT __stdcall TransformCoords (
        WKSPoint * mapPoints,
        struct tagPOINT * devPoints,
        long numPoints,
        long options ) = 0;
    virtual HRESULT __stdcall ToMapPoint (
        long x,
        long y,
        struct IPoint * * mapPoint ) = 0;
    virtual HRESULT __stdcall FromMapPoint (
        struct IPoint * mapPoint,
        long * x,
        long * y ) = 0;
    virtual HRESULT __stdcall ToPoints (
        double mapDistance,
        double * pointDistance ) = 0;
    virtual HRESULT __stdcall FromPoints (
        double pointDistance,
        double * mapDistance ) = 0;
};

struct __declspec(uuid("e6bdb001-4d35-11d0-98be-00805f7ced21"))
ITransformEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall BoundsUpdated (
        struct IDisplayTransformation * sender ) = 0;
    virtual HRESULT __stdcall VisibleBoundsUpdated (
        struct IDisplayTransformation * sender,
        VARIANT_BOOL sizeChanged ) = 0;
    virtual HRESULT __stdcall DeviceFrameUpdated (
        struct IDisplayTransformation * sender,
        VARIANT_BOOL sizeChanged ) = 0;
    virtual HRESULT __stdcall ResolutionUpdated (
        struct IDisplayTransformation * sender ) = 0;
    virtual HRESULT __stdcall RotationUpdated (
        struct IDisplayTransformation * sender ) = 0;
    virtual HRESULT __stdcall UnitsUpdated (
        struct IDisplayTransformation * sender ) = 0;
};

struct __declspec(uuid("1c352f3f-298e-11d3-9f4f-00c04f6bc619"))
IIlluminationProps : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SunPosition (
        WKSPointZ * Position ) = 0;
    virtual HRESULT __stdcall put_SunPosition (
        WKSPointZ Position ) = 0;
    virtual HRESULT __stdcall get_Contrast (
        double * Contrast ) = 0;
    virtual HRESULT __stdcall put_Contrast (
        double Contrast ) = 0;
    virtual HRESULT __stdcall get_Azimuth (
        double * pAzimuth ) = 0;
    virtual HRESULT __stdcall put_Azimuth (
        double pAzimuth ) = 0;
    virtual HRESULT __stdcall get_Altitude (
        double * pAltitude ) = 0;
    virtual HRESULT __stdcall put_Altitude (
        double pAltitude ) = 0;
};

struct __declspec(uuid("e6bdb002-4d35-11d0-98be-00805f7ced21"))
IDisplay : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DisplayTransformation (
        struct IDisplayTransformation * * DisplayTransformation ) = 0;
    virtual HRESULT __stdcall put_DisplayTransformation (
        struct IDisplayTransformation * DisplayTransformation ) = 0;
    virtual HRESULT __stdcall get_ClipEnvelope (
        struct IEnvelope * * envelope ) = 0;
    virtual HRESULT __stdcall get_ClipEnvelopes (
        struct ISet * * envelopes ) = 0;
    virtual HRESULT __stdcall get_ClipGeometry (
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall put_ClipGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall get_SuppressEvents (
        VARIANT_BOOL * SuppressEvents ) = 0;
    virtual HRESULT __stdcall put_SuppressEvents (
        VARIANT_BOOL SuppressEvents ) = 0;
    virtual HRESULT __stdcall get_Filter (
        struct IDisplayFilter * * Filter ) = 0;
    virtual HRESULT __stdcall putref_Filter (
        struct IDisplayFilter * Filter ) = 0;
    virtual HRESULT __stdcall get_hPalette (
        OLE_HANDLE * hPalette ) = 0;
    virtual HRESULT __stdcall put_hPalette (
        OLE_HANDLE hPalette ) = 0;
    virtual HRESULT __stdcall StartDrawing (
        OLE_HANDLE hDC,
        short cacheID ) = 0;
    virtual HRESULT __stdcall get_hDC (
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall FinishDrawing ( ) = 0;
    virtual HRESULT __stdcall Progress (
        long vertexCount ) = 0;
    virtual HRESULT __stdcall DrawPoint (
        struct IGeometry * Point ) = 0;
    virtual HRESULT __stdcall DrawMultipoint (
        struct IGeometry * multipoint ) = 0;
    virtual HRESULT __stdcall DrawRectangle (
        struct IEnvelope * rectangle ) = 0;
    virtual HRESULT __stdcall DrawPolyline (
        struct IGeometry * polyline ) = 0;
    virtual HRESULT __stdcall DrawPolygon (
        struct IGeometry * polygon ) = 0;
    virtual HRESULT __stdcall DrawText (
        struct IGeometry * shape,
        BSTR Text ) = 0;
    virtual HRESULT __stdcall SetSymbol (
        struct ISymbol * sym ) = 0;
    virtual HRESULT __stdcall get_IlluminationProps (
        struct IIlluminationProps * * IlluminationProps ) = 0;
    virtual HRESULT __stdcall put_IlluminationProps (
        struct IIlluminationProps * IlluminationProps ) = 0;
};

struct __declspec(uuid("7ef23a93-f475-11d3-9f54-00c04f6bdf0d"))
IDraw : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall StartDrawing (
        OLE_HANDLE hDC,
        short cacheID ) = 0;
    virtual HRESULT __stdcall FinishDrawing ( ) = 0;
    virtual HRESULT __stdcall Draw (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall SetSymbol (
        struct ISymbol * sym ) = 0;
    virtual HRESULT __stdcall get_CustomProperty (
        VARIANT * CustomProperty ) = 0;
    virtual HRESULT __stdcall put_CustomProperty (
        VARIANT CustomProperty ) = 0;
    virtual HRESULT __stdcall get_ClipRegion (
        struct IGeometry * * region ) = 0;
};

enum esriDraw3DMode
{
    esriDraw3DSilent = 1,
    esriDraw3DSelection = 2,
    esriDraw3DGeography = 4,
    esriDraw3DGraphics = 8,
    esriDraw3DOpaque = 16,
    esriDraw3DTransparent = 32,
    esriDrawIgnore3DMaterial = 64
};

enum _esriTextureInterpolationMode
{
    esriTexInterpolNearest = 0,
    esriTexInterpolBilinear = 1,
    esriTexInterpolMipMap = 2
};

struct __declspec(uuid("dc8333bd-a1d9-11d3-9f61-00c04f6bc5f4"))
IDisplay3D : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_ScreenPickTolerance (
        long pixels ) = 0;
    virtual HRESULT __stdcall get_ScreenPickTolerance (
        long * pixels ) = 0;
    virtual HRESULT __stdcall put_SymbolScale (
        float scale ) = 0;
    virtual HRESULT __stdcall get_SymbolScale (
        float * scale ) = 0;
    virtual HRESULT __stdcall PutMaxTextureSize (
        long maxTextureWidth,
        long maxTextureHeight ) = 0;
    virtual HRESULT __stdcall GetMaxTextureSize (
        long * pMaxTextureWidth,
        long * pMaxTextureHeight ) = 0;
    virtual HRESULT __stdcall AddFlashFeature (
        struct IGeometry * pGeometry ) = 0;
    virtual HRESULT __stdcall FlashFeatures ( ) = 0;
    virtual HRESULT __stdcall FlashLocation (
        struct IPoint * pGeometry ) = 0;
    virtual HRESULT __stdcall FlashGeometry (
        IUnknown * pOwner,
        IUnknown * feature ) = 0;
};

struct __declspec(uuid("42817971-a1f4-11d3-92dc-00600802e603"))
IDisplayTransformationAdmin : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_ScaleRatioNoRecalc (
        double _arg1 ) = 0;
};

struct __declspec(uuid("e6bdb003-4d35-11d0-98be-00805f7ced21"))
IDisplayEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall DisplayStarted (
        struct IDisplay * Display ) = 0;
    virtual HRESULT __stdcall DisplayFinished (
        struct IDisplay * Display ) = 0;
    virtual HRESULT __stdcall DisplayInvalidated (
        struct IDisplay * Display,
        struct IEnvelope * rect,
        VARIANT_BOOL erase,
        short cacheID ) = 0;
    virtual HRESULT __stdcall DisplayScrolled (
        struct IDisplay * Display,
        long deltaX,
        long deltaY ) = 0;
};

struct __declspec(uuid("e6bdaa7f-4d35-11d0-98be-00805f7ced21"))
IDicerCallback : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall OnPrepare (
        OLE_HANDLE hDC ) = 0;
    virtual HRESULT __stdcall OnDice (
        OLE_HANDLE hDC,
        struct tagPOINT * points,
        long numPoints ) = 0;
    virtual HRESULT __stdcall OnComplete (
        OLE_HANDLE hDC,
        struct tagPOINT * points,
        long * partCounts,
        long numParts ) = 0;
};

struct __declspec(uuid("5ba46487-1d16-42b8-847b-b7b9c8100b13"))
IDelayEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_DelayEvents (
        VARIANT_BOOL DelayEvents ) = 0;
    virtual HRESULT __stdcall get_DelayEvents (
        VARIANT_BOOL * DelayEvents ) = 0;
};

struct __declspec(uuid("f13aac6f-9c3d-11d3-a644-0008c7df8de1"))
IRasterOutputSettings : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RasterResolution (
        double * dpi ) = 0;
    virtual HRESULT __stdcall put_RasterResolution (
        double dpi ) = 0;
    virtual HRESULT __stdcall get_MaxColorDepth (
        short * bitsPerPixel ) = 0;
    virtual HRESULT __stdcall put_MaxColorDepth (
        short bitsPerPixel ) = 0;
    virtual HRESULT __stdcall get_RasterRatio (
        double * ratio ) = 0;
};

enum esriResampleRatioType
{
    esriRasterOutputBest = 1,
    esriRasterOutputNormal = 3,
    esriRasterOutputDraft = 5
};

struct __declspec(uuid("28444834-e9cb-44f8-806a-d313373f69b8"))
IOutputRasterSettings : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ResampleRatio (
        long * pRatio ) = 0;
    virtual HRESULT __stdcall put_ResampleRatio (
        long pRatio ) = 0;
};

struct __declspec(uuid("e6bdb004-4d35-11d0-98be-00805f7ced21"))
IScreenDisplay : IDisplay
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_hWnd (
        OLE_HANDLE hWnd ) = 0;
    virtual HRESULT __stdcall get_hWnd (
        OLE_HANDLE * hWnd ) = 0;
    virtual HRESULT __stdcall get_WindowDC (
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall AddCache (
        short * cacheID ) = 0;
    virtual HRESULT __stdcall RemoveCache (
        short cacheID ) = 0;
    virtual HRESULT __stdcall get_CacheCount (
        short * Count ) = 0;
    virtual HRESULT __stdcall RemoveAllCaches ( ) = 0;
    virtual HRESULT __stdcall get_CacheMemDC (
        short index,
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall put_ActiveCache (
        short index ) = 0;
    virtual HRESULT __stdcall get_ActiveCache (
        short * index ) = 0;
    virtual HRESULT __stdcall put_IsFirstCacheTransparent (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_IsFirstCacheTransparent (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall StartRecording ( ) = 0;
    virtual HRESULT __stdcall StopRecording ( ) = 0;
    virtual HRESULT __stdcall put_UseScrollbars (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_UseScrollbars (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall SetScrollbarHandles (
        OLE_HANDLE hWndHorzScrollbar,
        OLE_HANDLE hWndVertScrollbar ) = 0;
    virtual HRESULT __stdcall put_ScaleContents (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_ScaleContents (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_SuppressResize (
        VARIANT_BOOL SuppressResize ) = 0;
    virtual HRESULT __stdcall get_SuppressResize (
        VARIANT_BOOL * SuppressResize ) = 0;
    virtual HRESULT __stdcall get_IsFramed (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_IsFramed (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_CancelTracker (
        struct ITrackCancel * * CancelTracker ) = 0;
    virtual HRESULT __stdcall putref_CancelTracker (
        struct ITrackCancel * CancelTracker ) = 0;
    virtual HRESULT __stdcall Invalidate (
        struct IEnvelope * rect,
        VARIANT_BOOL erase,
        short cacheIndex ) = 0;
    virtual HRESULT __stdcall IsCacheDirty (
        short cacheIndex,
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall DrawCache (
        OLE_HANDLE hDC,
        short index,
        struct tagRECT * deviceRect,
        struct tagRECT * cacheRect ) = 0;
    virtual HRESULT __stdcall DoScroll (
        long xDelta,
        long yDelta,
        VARIANT_BOOL updateScreen ) = 0;
    virtual HRESULT __stdcall TrackPan ( ) = 0;
    virtual HRESULT __stdcall PanStart (
        struct IPoint * mouseLocation ) = 0;
    virtual HRESULT __stdcall PanMoveTo (
        struct IPoint * mouseLocation ) = 0;
    virtual HRESULT __stdcall PanStop (
        struct IEnvelope * * newExtent ) = 0;
    virtual HRESULT __stdcall TrackRotate ( ) = 0;
    virtual HRESULT __stdcall RotateStart (
        struct IPoint * mousePt,
        struct IPoint * centerPt ) = 0;
    virtual HRESULT __stdcall RotateMoveTo (
        struct IPoint * pPoint ) = 0;
    virtual HRESULT __stdcall RotateTimer ( ) = 0;
    virtual HRESULT __stdcall RotateStop (
        double * degrees ) = 0;
    virtual HRESULT __stdcall UpdateWindow ( ) = 0;
};

struct __declspec(uuid("dc321087-108f-43ae-932a-dfc1f7c4529e"))
IScreenDisplay2 : IDisplay
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_hWnd (
        OLE_HANDLE hWnd ) = 0;
    virtual HRESULT __stdcall get_hWnd (
        OLE_HANDLE * hWnd ) = 0;
    virtual HRESULT __stdcall get_WindowDC (
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall AddCache (
        short * cacheID ) = 0;
    virtual HRESULT __stdcall RemoveCache (
        short cacheID ) = 0;
    virtual HRESULT __stdcall get_CacheCount (
        short * Count ) = 0;
    virtual HRESULT __stdcall RemoveAllCaches ( ) = 0;
    virtual HRESULT __stdcall get_CacheMemDC (
        short index,
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall put_ActiveCache (
        short index ) = 0;
    virtual HRESULT __stdcall get_ActiveCache (
        short * index ) = 0;
    virtual HRESULT __stdcall put_IsFirstCacheTransparent (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_IsFirstCacheTransparent (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall StartRecording ( ) = 0;
    virtual HRESULT __stdcall StopRecording ( ) = 0;
    virtual HRESULT __stdcall put_UseScrollbars (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_UseScrollbars (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall SetScrollbarHandles (
        OLE_HANDLE hWndHorzScrollbar,
        OLE_HANDLE hWndVertScrollbar ) = 0;
    virtual HRESULT __stdcall put_ScaleContents (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_ScaleContents (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_SuppressResize (
        VARIANT_BOOL SuppressResize ) = 0;
    virtual HRESULT __stdcall get_SuppressResize (
        VARIANT_BOOL * SuppressResize ) = 0;
    virtual HRESULT __stdcall get_IsFramed (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_IsFramed (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_CancelTracker (
        struct ITrackCancel * * CancelTracker ) = 0;
    virtual HRESULT __stdcall putref_CancelTracker (
        struct ITrackCancel * CancelTracker ) = 0;
    virtual HRESULT __stdcall Invalidate (
        struct IEnvelope * rect,
        VARIANT_BOOL erase,
        short cacheIndex ) = 0;
    virtual HRESULT __stdcall IsCacheDirty (
        short cacheIndex,
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall DrawCache (
        OLE_HANDLE hDC,
        short index,
        struct tagRECT * deviceRect,
        struct tagRECT * cacheRect ) = 0;
    virtual HRESULT __stdcall DoScroll (
        long xDelta,
        long yDelta,
        VARIANT_BOOL updateScreen ) = 0;
    virtual HRESULT __stdcall TrackPan ( ) = 0;
    virtual HRESULT __stdcall PanStart (
        struct IPoint * mouseLocation ) = 0;
    virtual HRESULT __stdcall PanMoveTo (
        struct IPoint * mouseLocation ) = 0;
    virtual HRESULT __stdcall PanStop (
        struct IEnvelope * * newExtent ) = 0;
    virtual HRESULT __stdcall TrackRotate ( ) = 0;
    virtual HRESULT __stdcall RotateStart (
        struct IPoint * mousePt,
        struct IPoint * centerPt ) = 0;
    virtual HRESULT __stdcall RotateMoveTo (
        struct IPoint * pPoint ) = 0;
    virtual HRESULT __stdcall RotateTimer ( ) = 0;
    virtual HRESULT __stdcall RotateStop (
        double * degrees ) = 0;
    virtual HRESULT __stdcall UpdateWindow ( ) = 0;
    virtual HRESULT __stdcall put_BackgroundRGB (
        OLE_COLOR RGB ) = 0;
    virtual HRESULT __stdcall get_BackgroundRGB (
        OLE_COLOR * RGB ) = 0;
    virtual HRESULT __stdcall get_DrawingOffset (
        long * x,
        long * y ) = 0;
    virtual HRESULT __stdcall Validate (
        short cacheIndex ) = 0;
    virtual HRESULT __stdcall StartFeedback ( ) = 0;
    virtual HRESULT __stdcall FinishFeedback ( ) = 0;
    virtual HRESULT __stdcall FrameScrolled (
        long x,
        long y ) = 0;
};

struct __declspec(uuid("534e08d6-e65a-11d0-8681-0000f8751720"))
IAppDisplay : IScreenDisplay
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_MainScreen (
        struct IScreenDisplay * MainScreen ) = 0;
    virtual HRESULT __stdcall get_MainScreen (
        struct IScreenDisplay * * MainScreen ) = 0;
    virtual HRESULT __stdcall get_FocusScreen (
        struct IScreenDisplay * * FocusScreen ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_ScreenDisplay (
        long idx,
        struct IScreenDisplay * * ScreenDisplay ) = 0;
};

enum esriDisplayCacheFlags
{
    esriDisplayCacheNoFlags = 0,
    esriDisplayCacheRequiresBackground = 1,
    esriDisplayCachePrivate = 2
};

struct __declspec(uuid("7b3572f2-57a7-46b3-af86-9c9bca1c8f15"))
IScreenCacheManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddCache (
        short * cacheID ) = 0;
    virtual HRESULT __stdcall RemoveCache (
        short cacheID ) = 0;
    virtual HRESULT __stdcall get_CacheCount (
        short * Count ) = 0;
    virtual HRESULT __stdcall RemoveAllCaches ( ) = 0;
    virtual HRESULT __stdcall get_CacheMemDC (
        short index,
        OLE_HANDLE * hDC ) = 0;
    virtual HRESULT __stdcall put_ActiveCache (
        short index ) = 0;
    virtual HRESULT __stdcall get_ActiveCache (
        short * index ) = 0;
    virtual HRESULT __stdcall put_IsFirstCacheTransparent (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_IsFirstCacheTransparent (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall GetCacheFlags (
        short cacheID,
        enum esriDisplayCacheFlags * Flags ) = 0;
    virtual HRESULT __stdcall ModifyCacheFlags (
        short cacheID,
        enum esriDisplayCacheFlags flagsToAdd,
        enum esriDisplayCacheFlags flagsToRemove ) = 0;
    virtual HRESULT __stdcall PutCacheOrder (
        short cacheID,
        short order ) = 0;
    virtual HRESULT __stdcall GetCacheOrder (
        short cacheID,
        short * order ) = 0;
    virtual HRESULT __stdcall StartRecording ( ) = 0;
    virtual HRESULT __stdcall StopRecording ( ) = 0;
    virtual HRESULT __stdcall IsCacheDirty (
        short cacheIndex,
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall DrawCache (
        OLE_HANDLE hDC,
        short index,
        struct tagRECT * deviceRect,
        struct tagRECT * cacheRect ) = 0;
};

struct __declspec(uuid("c1ccbfc2-6722-49f0-9242-ba2f312e24bf"))
IScreenInvalidate : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_InvalidEnvelope (
        struct IEnvelope * * envelope ) = 0;
    virtual HRESULT __stdcall get_InvalidArea (
        struct IArea * * area ) = 0;
    virtual HRESULT __stdcall Invalidate (
        struct IEnvelope * rect,
        VARIANT_BOOL erase,
        short cacheIndex ) = 0;
    virtual HRESULT __stdcall InvalidateShape (
        struct IGeometry * pGeometry,
        double symbolSizePoints,
        VARIANT_BOOL erase,
        short cacheIndex ) = 0;
    virtual HRESULT __stdcall Validate (
        short cacheIndex ) = 0;
};

struct __declspec(uuid("1c6a7a03-e716-11d0-8681-0000f8751720"))
IEnumScreenDisplay : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        struct IScreenDisplay * * ScreenDisplay ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

enum esriDisplayTransformationEnum
{
    esriTransformPosition = 1,
    esriTransformSize = 2,
    esriTransformToMap = 4,
    esriTransformToDevice = 8
};

enum esriScreenCache
{
    esriNoScreenCache = -1,
    esriAllScreenCaches = -2,
    esriScreenRecording = -3
};

struct __declspec(uuid("e6bdb100-4d35-11d0-98be-00805f7ced21"))
ScreenDisplay;
    // [ default ] interface IUnknown
    // interface IScreenDisplay
    // interface IScreenDisplay2
    // interface IScreenCacheManager
    // interface IScreenInvalidate
    // interface IDisplay
    // interface IDraw
    // interface ITransformEvents
    // interface IConnectionPointContainer
    // [ default, source ] interface IDisplayEvents

struct __declspec(uuid("e6bdb101-4d35-11d0-98be-00805f7ced21"))
SimpleDisplay;
    // [ default ] interface IUnknown
    // interface IDisplay
    // interface IDraw
    // interface IConnectionPointContainer
    // [ default, source ] interface IDisplayEvents

struct __declspec(uuid("eb16e596-b4f7-11d0-865f-0000f8751720"))
DisplayTransformation;
    // [ default ] interface IUnknown
    // interface ITransformationGEN
    // interface IDisplayTransformation
    // interface IDisplayTransformationAdmin
    // interface IRasterOutputSettings
    // interface IOutputRasterSettings
    // interface ITransformation
    // interface IConnectionPointContainer
    // interface IDelayEvents
    // [ default, source ] interface ITransformEvents

struct __declspec(uuid("eb16e597-b4f7-11d0-865f-0000f8751720"))
CancelTracker;
    // [ default ] interface IUnknown
    // interface ITrackCancel

struct __declspec(uuid("ad754a65-13b4-11d3-b89d-00600802e603"))
TransparencyDisplayFilter;
    // [ default ] interface IUnknown
    // interface ITransparencyDisplayFilter
    // interface IDisplayFilter
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("1c352f40-298e-11d3-9f4f-00c04f6bc619"))
IlluminationProps;
    // [ default ] interface IUnknown
    // interface IIlluminationProps
    // interface IPersistStream
    // interface IPersist
    // interface IClone

enum esriEnvelopeEdge
{
    esriEnvelopeEdgeTopLeft = 0,
    esriEnvelopeEdgeTopMiddle = 1,
    esriEnvelopeEdgeTopRight = 2,
    esriEnvelopeEdgeMiddleLeft = 3,
    esriEnvelopeEdgeMiddleRight = 4,
    esriEnvelopeEdgeBottomLeft = 5,
    esriEnvelopeEdgeBottomMiddle = 6,
    esriEnvelopeEdgeBottomRight = 7
};

enum esriEnvelopeConstraints
{
    esriEnvelopeConstraintsNone = 0,
    esriEnvelopeConstraintsSquare = 1,
    esriEnvelopeConstraintsAspect = 2
};

enum esriLineConstraints
{
    esriLineConstraintsNone = 0,
    esriLineConstraintsVertical = 1,
    esriLineConstraintsHorizontal = 2
};

enum esriTrackerStyle
{
    esriTrackerNormal = 1,
    esriTrackerDominant = 2,
    esriTrackerFocus = 4,
    esriTrackerActive = 8
};

enum esriTrackerLocation
{
    LocationNone = 0,
    LocationInterior = 1,
    LocationTopLeft = 2,
    LocationTopMiddle = 3,
    LocationTopRight = 4,
    LocationMiddleLeft = 5,
    LocationMiddleRight = 6,
    LocationBottomLeft = 7,
    LocationBottomMiddle = 8,
    LocationBottomRight = 9
};

enum esriMoveTextConstraints
{
    esriMoveTextConstraintsLeft = 0,
    esriMoveTextConstraintsRight = 1,
    esriMoveTextConstraintsOnTop = 2,
    esriMoveTextConstraintsCursor = 3
};

struct __declspec(uuid("d2c13e55-4bea-11d1-b6cc-080009b996cc"))
IDisplayFeedback : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Symbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Display (
        struct IScreenDisplay * _arg1 ) = 0;
    virtual HRESULT __stdcall Refresh (
        OLE_HANDLE hDC ) = 0;
    virtual HRESULT __stdcall MoveTo (
        struct IPoint * Point ) = 0;
};

struct __declspec(uuid("e6bdb00c-4d35-11d0-98be-00805f7ced21"))
ISelectionTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Display (
        struct IScreenDisplay * _arg1 ) = 0;
    virtual HRESULT __stdcall put_Geometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall get_Bounds (
        struct IDisplay * Display,
        struct IEnvelope * * Bounds ) = 0;
    virtual HRESULT __stdcall QueryCursor (
        struct IPoint * Point,
        OLE_HANDLE * Cursor ) = 0;
    virtual HRESULT __stdcall HitTest (
        struct IPoint * Point,
        enum esriTrackerLocation * location ) = 0;
    virtual HRESULT __stdcall Draw (
        struct IDisplay * Display,
        OLE_HANDLE hDC,
        enum esriTrackerStyle Style ) = 0;
    virtual HRESULT __stdcall OnMouseDown (
        long button,
        long shift,
        long x,
        long y ) = 0;
    virtual HRESULT __stdcall OnMouseMove (
        long button,
        long shift,
        long x,
        long y ) = 0;
    virtual HRESULT __stdcall OnMouseUp (
        long button,
        long shift,
        long x,
        long y ) = 0;
    virtual HRESULT __stdcall OnKeyDown (
        long keyCode,
        long shift,
        VARIANT_BOOL * complete ) = 0;
    virtual HRESULT __stdcall OnKeyUp (
        long keyCode,
        long shift,
        VARIANT_BOOL * complete ) = 0;
    virtual HRESULT __stdcall Deactivate (
        VARIANT_BOOL * complete ) = 0;
    virtual HRESULT __stdcall put_Locked (
        VARIANT_BOOL Locked ) = 0;
    virtual HRESULT __stdcall get_Locked (
        VARIANT_BOOL * Locked ) = 0;
    virtual HRESULT __stdcall put_ShowHandles (
        VARIANT_BOOL ShowHandles ) = 0;
    virtual HRESULT __stdcall get_ShowHandles (
        VARIANT_BOOL * ShowHandles ) = 0;
    virtual HRESULT __stdcall QueryMoveFeedback (
        struct IDisplayFeedback * * moveFeedback ) = 0;
    virtual HRESULT __stdcall QueryResizeFeedback (
        struct IDisplayFeedback * * resizeFeedback ) = 0;
};

struct __declspec(uuid("71fc8720-0164-11d2-84a4-0000f875b9c6"))
IAnchorPoint : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Point (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall get_Point (
        struct IPoint * * Point ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall get_Cursor (
        OLE_HANDLE * Cursor ) = 0;
    virtual HRESULT __stdcall HitTest (
        struct IPoint * Point,
        double tol,
        VARIANT_BOOL * hit ) = 0;
    virtual HRESULT __stdcall Draw (
        struct IDisplay * Display ) = 0;
    virtual HRESULT __stdcall MoveTo (
        struct IPoint * pPoint,
        struct IDisplay * Display ) = 0;
};

struct __declspec(uuid("a761d652-065f-11d4-826f-0080c79f0371"))
ICalloutTracker : ISelectionTracker
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Symbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall put_SymbolGeometry (
        struct IGeometry * SymbolGeometry ) = 0;
    virtual HRESULT __stdcall get_SymbolGeometry (
        struct IGeometry * * SymbolGeometry ) = 0;
};

struct __declspec(uuid("66770313-fbc0-11d1-a24e-080009b6f22b"))
IRotateTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Display (
        struct IScreenDisplay * _arg1 ) = 0;
    virtual HRESULT __stdcall get_Cursor (
        OLE_HANDLE * Cursor ) = 0;
    virtual HRESULT __stdcall Refresh ( ) = 0;
    virtual HRESULT __stdcall OnMouseDown ( ) = 0;
    virtual HRESULT __stdcall OnMouseMove (
        struct IPoint * mapPoint ) = 0;
    virtual HRESULT __stdcall OnMouseUp (
        VARIANT_BOOL * angleChanged ) = 0;
    virtual HRESULT __stdcall OnKeyDown (
        long keyCode,
        VARIANT_BOOL * angleChanged ) = 0;
    virtual HRESULT __stdcall Deactivate (
        VARIANT_BOOL * complete ) = 0;
    virtual HRESULT __stdcall put_Origin (
        struct IPoint * Anchor ) = 0;
    virtual HRESULT __stdcall get_Origin (
        struct IPoint * * Anchor ) = 0;
    virtual HRESULT __stdcall AddGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall AddPoint (
        struct IGeometry * Geometry,
        struct IMarkerSymbol * sym ) = 0;
    virtual HRESULT __stdcall ClearGeometry ( ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
};

struct __declspec(uuid("2dc98f3b-38aa-11d3-9f3c-00c04f6bc979"))
IScaleTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Display (
        struct IScreenDisplay * _arg1 ) = 0;
    virtual HRESULT __stdcall get_Cursor (
        OLE_HANDLE * Cursor ) = 0;
    virtual HRESULT __stdcall Refresh ( ) = 0;
    virtual HRESULT __stdcall OnMouseDown ( ) = 0;
    virtual HRESULT __stdcall OnMouseMove (
        struct IPoint * mapPoint ) = 0;
    virtual HRESULT __stdcall OnMouseUp (
        VARIANT_BOOL * scaleChanged ) = 0;
    virtual HRESULT __stdcall OnKeyDown (
        long keyCode,
        VARIANT_BOOL * scaleChanged ) = 0;
    virtual HRESULT __stdcall Deactivate (
        VARIANT_BOOL * complete ) = 0;
    virtual HRESULT __stdcall put_Origin (
        struct IPoint * Anchor ) = 0;
    virtual HRESULT __stdcall get_Origin (
        struct IPoint * * Anchor ) = 0;
    virtual HRESULT __stdcall AddGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall ClearGeometry ( ) = 0;
    virtual HRESULT __stdcall get_ScaleFactor (
        double * factor ) = 0;
};

struct __declspec(uuid("77748c81-73fc-11d2-8506-0000f875b9c6"))
IVertexFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddSegment (
        struct ISegment * segment,
        VARIANT_BOOL fromPointIsAnchor ) = 0;
};

struct __declspec(uuid("4e315500-f4dd-11d1-8498-0000f875b9c6"))
IReshapeFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPath * path,
        long index,
        VARIANT_BOOL stretch ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPath * * path ) = 0;
};

struct __declspec(uuid("9bf56f82-4f36-11d1-b6cd-080009b996cc"))
INewEnvelopeFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IEnvelope * * envelope ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriEnvelopeConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriEnvelopeConstraints constrain ) = 0;
    virtual HRESULT __stdcall get_AspectRatio (
        double * AspectRatio ) = 0;
    virtual HRESULT __stdcall put_AspectRatio (
        double AspectRatio ) = 0;
};

struct __declspec(uuid("4e08b552-f52b-11d3-9315-00600802e603"))
INewEnvelopeFeedback2 : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriEnvelopeConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriEnvelopeConstraints constrain ) = 0;
    virtual HRESULT __stdcall get_AspectRatio (
        double * AspectRatio ) = 0;
    virtual HRESULT __stdcall put_AspectRatio (
        double AspectRatio ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IGeometry * * envelope ) = 0;
};

struct __declspec(uuid("9bf56f81-4f36-11d1-b6cd-080009b996cc"))
IMoveEnvelopeFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IEnvelope * envelope,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IEnvelope * * envelope ) = 0;
};

struct __declspec(uuid("dd61d811-a912-48e6-9146-073d1264da48"))
IMoveTextFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall FollowShape (
        struct IGeometry * featureGeometry,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall Start (
        struct IGeometry * textGeometry,
        double labelWidth,
        double labelHeight,
        double ReferenceScale,
        struct IPoint * Point,
        double Offset,
        VARIANT_BOOL Parallel,
        enum esriMoveTextConstraints Constraint ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IGeometry * * baseline ) = 0;
    virtual HRESULT __stdcall get_Flip (
        VARIANT_BOOL * Flip ) = 0;
    virtual HRESULT __stdcall put_Flip (
        VARIANT_BOOL Flip ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_Parallel (
        VARIANT_BOOL * Parallel ) = 0;
    virtual HRESULT __stdcall put_Parallel (
        VARIANT_BOOL Parallel ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriMoveTextConstraints * Constraint ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriMoveTextConstraints Constraint ) = 0;
};

struct __declspec(uuid("4516b1d1-f799-4902-a4dd-1cbae5035be3"))
IMoveCurvedTextFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall FollowShape (
        struct IGeometry * featureGeometry,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall Start (
        struct IPoint * fromPoint,
        double ReferenceScale,
        struct IPoint * cursorPoint,
        double Offset,
        enum esriMoveTextConstraints Constraint,
        VARIANT_BOOL flipped ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IGeometry * * baseline ) = 0;
    virtual HRESULT __stdcall get_Flip (
        VARIANT_BOOL * Flip ) = 0;
    virtual HRESULT __stdcall put_Flip (
        VARIANT_BOOL Flip ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriMoveTextConstraints * Constraint ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriMoveTextConstraints Constraint ) = 0;
};

struct __declspec(uuid("b44637c6-f488-41b4-b222-07aa9c04a3d6"))
IMoveTextAlongShapeFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall FollowShape (
        struct IGeometry * featureGeometry,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall StartCurved (
        struct IPoint * fromPoint,
        double ReferenceScale,
        struct IPoint * cursorPoint,
        double Offset,
        enum esriMoveTextConstraints Constraint,
        VARIANT_BOOL flipped ) = 0;
    virtual HRESULT __stdcall StartStraight (
        struct IGeometry * textGeometry,
        double labelWidth,
        double labelHeight,
        double ReferenceScale,
        struct IPoint * Point,
        double Offset,
        VARIANT_BOOL Parallel,
        enum esriMoveTextConstraints Constraint ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IGeometry * * baseline ) = 0;
    virtual HRESULT __stdcall get_Flip (
        VARIANT_BOOL * Flip ) = 0;
    virtual HRESULT __stdcall put_Flip (
        VARIANT_BOOL Flip ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_Parallel (
        VARIANT_BOOL * Parallel ) = 0;
    virtual HRESULT __stdcall put_Parallel (
        VARIANT_BOOL Parallel ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriMoveTextConstraints * Constraint ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriMoveTextConstraints Constraint ) = 0;
};

struct __declspec(uuid("c3182fe1-4fb0-11d1-b6cd-080009b996cc"))
IResizeEnvelopeFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IEnvelope * envelope,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall put_ResizeEdge (
        enum esriEnvelopeEdge edge ) = 0;
    virtual HRESULT __stdcall get_ResizeEdge (
        enum esriEnvelopeEdge * edge ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IEnvelope * * envelope ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriEnvelopeConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriEnvelopeConstraints constrain ) = 0;
    virtual HRESULT __stdcall get_AspectRatio (
        double * AspectRatio ) = 0;
    virtual HRESULT __stdcall put_AspectRatio (
        double AspectRatio ) = 0;
};

struct __declspec(uuid("4e08b551-f52b-11d3-9315-00600802e603"))
IResizeEnvelopeFeedback2 : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_ResizeEdge (
        enum esriEnvelopeEdge edge ) = 0;
    virtual HRESULT __stdcall get_ResizeEdge (
        enum esriEnvelopeEdge * edge ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriEnvelopeConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriEnvelopeConstraints constrain ) = 0;
    virtual HRESULT __stdcall get_AspectRatio (
        double * AspectRatio ) = 0;
    virtual HRESULT __stdcall put_AspectRatio (
        double AspectRatio ) = 0;
    virtual HRESULT __stdcall Start (
        struct IGeometry * envelope,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IGeometry * * envelope ) = 0;
};

struct __declspec(uuid("1c9915ff-239b-49a1-a2f3-c9d0e4173ce1"))
IResizeTextFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct ITextSymbol * TextSymbol,
        struct IGeometry * textGeom,
        double ReferenceScale,
        struct IGeometry * envelope,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        double * Size ) = 0;
};

struct __declspec(uuid("7a8276c1-5483-11d1-b6cf-080009b996cc"))
INewMultiPointFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPointCollection * points,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop ( ) = 0;
};

struct __declspec(uuid("861a7b31-516d-11d1-b6ce-080009b996cc"))
INewLineFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall AddPoint (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriLineConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriLineConstraints constrain ) = 0;
};

struct __declspec(uuid("417af471-cd15-11d2-9f30-00c04f6bc8dd"))
INewBezierCurveFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall AddPoint (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriLineConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriLineConstraints constrain ) = 0;
};

struct __declspec(uuid("5c3ac217-10c5-401b-b3eb-6a6d93e5d58c"))
INewTextBezierCurveFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall AddPoint (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall get_Constraint (
        enum esriLineConstraints * constrain ) = 0;
    virtual HRESULT __stdcall put_Constraint (
        enum esriLineConstraints constrain ) = 0;
};

struct __declspec(uuid("7a8276c7-5483-11d1-b6cf-080009b996cc"))
IMoveLineFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPolyline * polyline,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
};

struct __declspec(uuid("3c70bada-2429-11d3-9f36-00c04f6bdd7f"))
IMovePointFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point,
        struct IPoint * clickPoint ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPoint * * Point ) = 0;
};

struct __declspec(uuid("7a8276cb-5483-11d1-b6cf-080009b996cc"))
ILineMovePointFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPolyline * polyline,
        long pointIndex,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
};

struct __declspec(uuid("7a8276c5-5483-11d1-b6cf-080009b996cc"))
INewPolygonFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall AddPoint (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolygon * * polyline ) = 0;
};

struct __declspec(uuid("7a8276c9-5483-11d1-b6cf-080009b996cc"))
IMovePolygonFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPolygon * polygon,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolygon * * polygon ) = 0;
};

struct __declspec(uuid("7a8276cd-5483-11d1-b6cf-080009b996cc"))
IPolygonMovePointFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPolygon * polygon,
        long pointIndex,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolygon * * polygon ) = 0;
};

struct __declspec(uuid("89967502-a95f-11d1-ae9c-0000f80372b4"))
IStretchLineFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPolyline * polyline,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall put_Anchor (
        struct IPoint * _arg1 ) = 0;
};

struct __declspec(uuid("521b9df3-0166-11d2-a254-080009b6f22b"))
IMoveGeometryFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Anchor ) = 0;
    virtual HRESULT __stdcall AddGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall ClearGeometry ( ) = 0;
};

struct __declspec(uuid("8c25c471-2030-11d2-a28c-080009b6f22b"))
IMoveImageFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Anchor ) = 0;
    virtual HRESULT __stdcall get_Display (
        struct IDisplay * * Display ) = 0;
    virtual HRESULT __stdcall put_Bounds (
        struct IEnvelope * _arg1 ) = 0;
    virtual HRESULT __stdcall ClearImage ( ) = 0;
};

struct __declspec(uuid("781e1c4c-1bfd-44de-b524-024437710fab"))
IMoveImageFeedback2 : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Anchor ) = 0;
    virtual HRESULT __stdcall get_Display (
        struct IDisplay * * Display ) = 0;
    virtual HRESULT __stdcall put_Bounds (
        struct IEnvelope * _arg1 ) = 0;
    virtual HRESULT __stdcall ClearImage ( ) = 0;
    virtual HRESULT __stdcall put_PolygonBounds (
        struct IPolygon * _arg1 ) = 0;
};

struct __declspec(uuid("e4543891-040c-11d4-8267-0080c79f0371"))
ICalloutFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct ISymbol * Symbol,
        struct IGeometry * Geometry,
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall MoveAnchorTo (
        struct IPoint * Point ) = 0;
};

struct __declspec(uuid("b48ffe7a-396b-4188-b4dd-85e9d7e16b3e"))
ICalloutFeedback2 : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct ISymbol * Symbol,
        struct IGeometry * Geometry,
        struct IPoint * Point,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall Stop (
        struct IPolyline * * polyline ) = 0;
    virtual HRESULT __stdcall MoveAnchorTo (
        struct IPoint * Point ) = 0;
};

struct __declspec(uuid("b6f4b6cb-b455-487c-84d0-6f9e2726ba20"))
INewCircleFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall Stop (
        struct ICircularArc * * circle ) = 0;
};

struct __declspec(uuid("e6bdb005-4d35-11d0-98be-00805f7ced21"))
IRubberBand : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall TrackNew (
        struct IScreenDisplay * ScreenDisplay,
        struct ISymbol * Symbol,
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall TrackExisting (
        struct IScreenDisplay * ScreenDisplay,
        struct ISymbol * Symbol,
        struct IGeometry * Geometry,
        VARIANT_BOOL * completed ) = 0;
};

struct __declspec(uuid("ae629199-b816-45b9-b20b-d84d919fe0c4"))
IRotateTextFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * cursorPosition,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall Stop (
        double * Angle ) = 0;
    virtual HRESULT __stdcall get_Anchor (
        struct IPoint * * Anchor ) = 0;
};

struct __declspec(uuid("b46b915d-d256-481b-82e8-c48ed99f4d19"))
INewTextFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        struct IPoint * cursorPosition,
        double ReferenceScale ) = 0;
    virtual HRESULT __stdcall Stop ( ) = 0;
};

struct __declspec(uuid("956b2b6b-c169-441a-9203-6e1b4c2b4fbf"))
IMoveBitmapFeedback : IDisplayFeedback
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Start (
        OLE_HANDLE hBitmap,
        long Width,
        long Height,
        long offsetX,
        long offsetY ) = 0;
    virtual HRESULT __stdcall Stop ( ) = 0;
};

struct __declspec(uuid("4c929701-12f0-4ce0-bb67-f08f6b65b66b"))
IPointCollectionTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall FindNodeIndex (
        struct IPoint * cursorPosition,
        long * nodeIndex ) = 0;
};

struct __declspec(uuid("d2c13e54-4bea-11d1-b6cc-080009b996cc"))
NewEnvelopeFeedback;
    // [ default ] interface IUnknown
    // interface INewEnvelopeFeedback
    // interface INewEnvelopeFeedback2

struct __declspec(uuid("77748c82-73fc-11d2-8506-0000f875b9c6"))
VertexFeedback;
    // [ default ] interface IUnknown
    // interface IVertexFeedback

struct __declspec(uuid("9bf56f83-4f36-11d1-b6cd-080009b996cc"))
MoveEnvelopeFeedback;
    // [ default ] interface IUnknown
    // interface IMoveEnvelopeFeedback

struct __declspec(uuid("c3182fe2-4fb0-11d1-b6cd-080009b996cc"))
ResizeEnvelopeFeedback;
    // [ default ] interface IUnknown
    // interface IResizeEnvelopeFeedback
    // interface IResizeEnvelopeFeedback2

struct __declspec(uuid("3d459d38-0843-45cc-949b-bf7fe268b0ed"))
ResizeTextFeedback;
    // [ default ] interface IUnknown
    // interface IResizeTextFeedback
    // interface IResizeEnvelopeFeedback
    // interface IResizeEnvelopeFeedback2

struct __declspec(uuid("7a8276c3-5483-11d1-b6cf-080009b996cc"))
NewMultiPointFeedback;
    // [ default ] interface IUnknown
    // interface INewMultiPointFeedback

struct __declspec(uuid("7a8276c4-5483-11d1-b6cf-080009b996cc"))
NewLineFeedback;
    // [ default ] interface IUnknown
    // interface INewLineFeedback

struct __declspec(uuid("cf6690bf-cdbf-11d2-9f31-00c04f6bc8dd"))
NewBezierCurveFeedback;
    // [ default ] interface IUnknown
    // interface INewBezierCurveFeedback

struct __declspec(uuid("7a8276c8-5483-11d1-b6cf-080009b996cc"))
MoveLineFeedback;
    // [ default ] interface IUnknown
    // interface IMoveLineFeedback

struct __declspec(uuid("29d782c8-2429-11d3-9f36-00c04f6bdd7f"))
MovePointFeedback;
    // [ default ] interface IUnknown
    // interface IMovePointFeedback

struct __declspec(uuid("7a8276cc-5483-11d1-b6cf-080009b996cc"))
LineMovePointFeedback;
    // [ default ] interface IUnknown
    // interface ILineMovePointFeedback

struct __declspec(uuid("2b9f6607-d580-11d2-9f33-00c04f6bc8dd"))
BezierMovePointFeedback;
    // [ default ] interface IUnknown
    // interface ILineMovePointFeedback

struct __declspec(uuid("7a8276c6-5483-11d1-b6cf-080009b996cc"))
NewPolygonFeedback;
    // [ default ] interface IUnknown
    // interface INewPolygonFeedback

struct __declspec(uuid("7a8276ca-5483-11d1-b6cf-080009b996cc"))
MovePolygonFeedback;
    // [ default ] interface IUnknown
    // interface IMovePolygonFeedback

struct __declspec(uuid("7a8276ce-5483-11d1-b6cf-080009b996cc"))
PolygonMovePointFeedback;
    // [ default ] interface IUnknown
    // interface IPolygonMovePointFeedback

struct __declspec(uuid("85319ed2-a960-11d1-ae9c-0000f80372b4"))
StretchLineFeedback;
    // [ default ] interface IUnknown
    // interface IStretchLineFeedback

struct __declspec(uuid("44276912-98c1-11d1-8464-0000f875b9c6"))
GroupFeedback;
    // [ default ] interface IUnknown
    // interface IDisplayFeedback
    // interface ISet

struct __declspec(uuid("521b9df4-0166-11d2-a254-080009b6f22b"))
MoveGeometryFeedback;
    // [ default ] interface IUnknown
    // interface IMoveGeometryFeedback

struct __declspec(uuid("8c25c472-2030-11d2-a28c-080009b6f22b"))
MoveImageFeedback;
    // [ default ] interface IUnknown
    // interface IMoveImageFeedback
    // interface IMoveImageFeedback2

struct __declspec(uuid("e4543892-040c-11d4-8267-0080c79f0371"))
CalloutFeedback;
    // [ default ] interface IUnknown
    // interface ICalloutFeedback
    // interface ICalloutFeedback2

struct __declspec(uuid("e6bdb107-4d35-11d0-98be-00805f7ced21"))
EnvelopeTracker;
    // [ default ] interface IUnknown
    // interface ISelectionTracker

struct __declspec(uuid("8ab7fbe3-d871-11d0-8389-080009b996cc"))
LineTracker;
    // [ default ] interface IUnknown
    // interface ISelectionTracker
    // interface IPointCollectionTracker

struct __declspec(uuid("8d1827b1-f336-11d0-83a5-080009b996cc"))
PolygonTracker;
    // [ default ] interface IUnknown
    // interface ISelectionTracker
    // interface IPointCollectionTracker

struct __declspec(uuid("530fd714-ef0c-11d0-83a0-080009b996cc"))
PointTracker;
    // [ default ] interface IUnknown
    // interface ISelectionTracker

struct __declspec(uuid("a761d651-065f-11d4-826f-0080c79f0371"))
CalloutTracker;
    // [ default ] interface IUnknown
    // interface ICalloutTracker

struct __declspec(uuid("30f137af-5d42-49e4-9edd-da8c3be7deda"))
EngineRotateTracker;
    // [ default ] interface IRotateTracker

struct __declspec(uuid("e6bdb102-4d35-11d0-98be-00805f7ced21"))
RubberEnvelope;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("087675c8-7f23-4cf5-a39d-bcec1ee9c1f4"))
RubberRectangularPolygon;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("e6bdb103-4d35-11d0-98be-00805f7ced21"))
RubberPoint;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("e6bdb104-4d35-11d0-98be-00805f7ced21"))
RubberLine;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("e6bdb105-4d35-11d0-98be-00805f7ced21"))
RubberPolygon;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("4e315501-f4dd-11d1-8498-0000f875b9c6"))
ReshapeFeedback;
    // [ default ] interface IUnknown
    // interface IReshapeFeedback

struct __declspec(uuid("71fc8721-0164-11d2-84a4-0000f875b9c6"))
AnchorPoint;
    // [ default ] interface IUnknown
    // interface IAnchorPoint

struct __declspec(uuid("5f796f6f-1166-4ce5-bec8-8ebcdfb4dca9"))
RubberCircle;
    // [ default ] interface IUnknown
    // interface IRubberBand

struct __declspec(uuid("b25afff1-5a00-4120-92e0-452e8544e444"))
NewCircleFeedback;
    // [ default ] interface IUnknown
    // interface INewCircleFeedback

struct __declspec(uuid("b8f39f30-867d-4ca7-8d26-1ceeaf530601"))
MoveTextFeedback;
    // [ default ] interface IUnknown
    // interface IMoveTextFeedback

struct __declspec(uuid("a8becdf3-90dd-4452-8df9-37d8577c8c94"))
MoveCurvedTextFeedback;
    // [ default ] interface IUnknown
    // interface IMoveCurvedTextFeedback

struct __declspec(uuid("24d1e2b3-ad64-4b5a-9f84-a19c33c9d79d"))
MoveTextAlongShapeFeedback;
    // [ default ] interface IUnknown
    // interface IMoveTextAlongShapeFeedback

struct __declspec(uuid("67628250-b721-48e1-b13b-4f574b8357a3"))
RotateTextFeedback;
    // [ default ] interface IUnknown
    // interface IRotateTextFeedback

struct __declspec(uuid("a01a77f0-d96a-4c4c-983c-c64190828c5a"))
NewTextFeedback;
    // [ default ] interface IUnknown
    // interface INewTextFeedback

struct __declspec(uuid("4993083d-dee5-42ab-b312-2e038296d186"))
MoveBitmapFeedback;
    // [ default ] interface IUnknown
    // interface IMoveBitmapFeedback

struct __declspec(uuid("71957f32-4d7a-4374-a117-6969f9b820d5"))
NewTextBezierCurveFeedback;
    // [ default ] interface IUnknown
    // interface INewTextBezierCurveFeedback

struct __declspec(uuid("7914e5f4-c892-11d0-8bb6-080009ee4e41"))
ITemplate : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Setup (
        OLE_HANDLE hDC,
        struct ITransformation * transformation,
        struct ILineSymbol * lineSym ) = 0;
    virtual HRESULT __stdcall get_PatternElementCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall GetPatternElement (
        long index,
        double * mark,
        double * Gap ) = 0;
    virtual HRESULT __stdcall AddPatternElement (
        double mark,
        double Gap ) = 0;
    virtual HRESULT __stdcall DeletePatternElement (
        long index ) = 0;
    virtual HRESULT __stdcall MovePatternElement (
        long fromIndex,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearPatternElements ( ) = 0;
    virtual HRESULT __stdcall get_Interval (
        double * Interval ) = 0;
    virtual HRESULT __stdcall put_Interval (
        double Interval ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall putref_Geometry (
        struct IGeometry * ppGeometry ) = 0;
    virtual HRESULT __stdcall QueryNextPoint (
        struct IPoint * pPoint,
        double * pAngle ) = 0;
    virtual HRESULT __stdcall QueryNextLine (
        struct IGeometry * pGeometry ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("533d88f0-0a1a-11d2-b27f-0000f878229e"))
ILineDecoration : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddElement (
        struct ILineDecorationElement * lineDecorationElement ) = 0;
    virtual HRESULT __stdcall DeleteElement (
        long index ) = 0;
    virtual HRESULT __stdcall MoveElement (
        struct ILineDecorationElement * Element,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearElements ( ) = 0;
    virtual HRESULT __stdcall get_Element (
        long index,
        struct ILineDecorationElement * * lineDecorationElement ) = 0;
    virtual HRESULT __stdcall get_ElementCount (
        long * lineDecorationElementCount ) = 0;
    virtual HRESULT __stdcall QueryBoundary (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IGeometry * LineGeometry,
        struct IPolygon * boundary ) = 0;
    virtual HRESULT __stdcall Draw (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IGeometry * LineGeometry ) = 0;
};

struct __declspec(uuid("533d88f2-0a1a-11d2-b27f-0000f878229e"))
ILineDecorationElement : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddPosition (
        double elementPosition ) = 0;
    virtual HRESULT __stdcall DeletePosition (
        long index ) = 0;
    virtual HRESULT __stdcall ClearPositions ( ) = 0;
    virtual HRESULT __stdcall get_PositionAsRatio (
        VARIANT_BOOL * asRatio ) = 0;
    virtual HRESULT __stdcall put_PositionAsRatio (
        VARIANT_BOOL asRatio ) = 0;
    virtual HRESULT __stdcall get_Position (
        long index,
        double * elementPos ) = 0;
    virtual HRESULT __stdcall get_PositionCount (
        long * PositionCount ) = 0;
    virtual HRESULT __stdcall QueryBoundary (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IGeometry * LineGeometry,
        struct IPolygon * boundary ) = 0;
    virtual HRESULT __stdcall Draw (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IGeometry * LineGeometry ) = 0;
};

struct __declspec(uuid("6a7ef984-6924-11d2-980d-0080c7e04196"))
IMask : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MaskStyle (
        enum esriMaskStyle * Style ) = 0;
    virtual HRESULT __stdcall put_MaskStyle (
        enum esriMaskStyle Style ) = 0;
    virtual HRESULT __stdcall get_MaskSize (
        double * Size ) = 0;
    virtual HRESULT __stdcall put_MaskSize (
        double Size ) = 0;
    virtual HRESULT __stdcall get_MaskSymbol (
        struct IFillSymbol * * fillSym ) = 0;
    virtual HRESULT __stdcall putref_MaskSymbol (
        struct IFillSymbol * fillSym ) = 0;
};

enum esriMaskStyle
{
    esriMSNone = 0,
    esriMSHalo = 1
};

struct __declspec(uuid("b65a3e75-2993-11d1-9a43-0080c7ec5c96"))
ITextPath : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Setup (
        OLE_HANDLE hDC,
        struct ITransformation * transformation,
        struct ITextSymbol * textSym ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall putref_Geometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall get_XOffset (
        double * XOffset ) = 0;
    virtual HRESULT __stdcall put_XOffset (
        double XOffset ) = 0;
    virtual HRESULT __stdcall get_YOffset (
        double * YOffset ) = 0;
    virtual HRESULT __stdcall put_YOffset (
        double YOffset ) = 0;
    virtual HRESULT __stdcall Next (
        double * x,
        double * y,
        double * Angle ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("8feb6611-2a0d-11d1-9a44-0080c7ec5c96"))
ITextBackground : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TextSymbol (
        struct ITextSymbol * * textSym ) = 0;
    virtual HRESULT __stdcall putref_TextSymbol (
        struct ITextSymbol * textSym ) = 0;
    virtual HRESULT __stdcall putref_TextBox (
        struct IEnvelope * _arg1 ) = 0;
    virtual HRESULT __stdcall QueryBoundary (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IPolygon * boundary ) = 0;
    virtual HRESULT __stdcall Draw (
        OLE_HANDLE hDC,
        struct ITransformation * transform ) = 0;
};

struct __declspec(uuid("6a7ef980-6924-11d2-980d-0080c7e04196"))
ICallout : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AnchorPoint (
        struct IPoint * * Point ) = 0;
    virtual HRESULT __stdcall put_AnchorPoint (
        struct IPoint * Point ) = 0;
    virtual HRESULT __stdcall get_LeaderTolerance (
        double * LeaderTolerance ) = 0;
    virtual HRESULT __stdcall put_LeaderTolerance (
        double LeaderTolerance ) = 0;
};

struct __declspec(uuid("c8d09ed1-4fbb-11d1-9a72-0080c7ec5c96"))
ILineCallout : ICallout
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Border (
        struct IFillSymbol * * Border ) = 0;
    virtual HRESULT __stdcall putref_Border (
        struct IFillSymbol * Border ) = 0;
    virtual HRESULT __stdcall get_Gap (
        double * Gap ) = 0;
    virtual HRESULT __stdcall put_Gap (
        double Gap ) = 0;
    virtual HRESULT __stdcall get_AccentBar (
        struct ILineSymbol * * AccentBar ) = 0;
    virtual HRESULT __stdcall putref_AccentBar (
        struct ILineSymbol * AccentBar ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum esriLineCalloutStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriLineCalloutStyle Style ) = 0;
    virtual HRESULT __stdcall get_LeaderLine (
        struct ILineSymbol * * LeaderLine ) = 0;
    virtual HRESULT __stdcall putref_LeaderLine (
        struct ILineSymbol * LeaderLine ) = 0;
};

enum esriLineCalloutStyle
{
    esriLCSBase = 0,
    esriLCSMidpoint = 1,
    esriLCSThreePoint = 2,
    esriLCSFourPoint = 3,
    esriLCSUnderline = 4,
    esriLCSCustom = 5,
    esriLCSCircularCW = 6,
    esriLCSCircularCCW = 7
};

enum esriSimpleMarkerStyle
{
    esriSMSCircle = 0,
    esriSMSSquare = 1,
    esriSMSCross = 2,
    esriSMSX = 3,
    esriSMSDiamond = 4
};

enum esriArrowMarkerStyle
{
    esriAMSPlain = 0
};

enum esriLineCapStyle
{
    esriLCSButt = 0,
    esriLCSRound = 1,
    esriLCSSquare = 2
};

enum esriLineJoinStyle
{
    esriLJSMitre = 0,
    esriLJSRound = 1,
    esriLJSBevel = 2
};

enum esriMarkerFillStyle
{
    esriMFSGrid = 0,
    esriMFSRandom = 1
};

enum esriTextPosition
{
    esriTPNormal = 0,
    esriTPSuperscript = 1,
    esriTPSubscript = 2
};

enum esriTextCase
{
    esriTCNormal = 0,
    esriTCLowercase = 1,
    esriTCAllCaps = 2,
    esriTCSmallCaps = 3
};

enum esriTextDirection
{
    esriTDHorizontal = 0,
    esriTDAngle = 1,
    esriTDVertical = 2
};

enum esriBalloonCalloutStyle
{
    esriBCSRectangle = 0,
    esriBCSRoundedRectangle = 1,
    esriBCSOval = 2
};

enum esriSimpleLineStyle
{
    esriSLSSolid = 0,
    esriSLSDash = 1,
    esriSLSDot = 2,
    esriSLSDashDot = 3,
    esriSLSDashDotDot = 4,
    esriSLSNull = 5,
    esriSLSInsideFrame = 6
};

enum esriSimpleFillStyle
{
    esriSFSSolid = 0,
    esriSFSNull = 1,
    esriSFSHollow = 1,
    esriSFSHorizontal = 2,
    esriSFSVertical = 3,
    esriSFSForwardDiagonal = 4,
    esriSFSBackwardDiagonal = 5,
    esriSFSCross = 6,
    esriSFSDiagonalCross = 7
};

enum esriIPictureType
{
    esriIPictureEMF = 0,
    esriIPictureBitmap = 1
};

enum esriGradientFillStyle
{
    esriGFSLinear = 0,
    esriGFSRectangular = 1,
    esriGFSCircular = 2,
    esriGFSBuffered = 3
};

enum esriGDIComments
{
    esriGDIComment_Begin_Text = 4097,
    esriGDIComment_End_Text = 4098,
    esriGDIComment_Set_Text_Extra = 4099,
    esriGDIComment_Set_Cmyk_Color = 4100,
    esriGDIComment_Begin_Layer = 4101,
    esriGDIComment_End_Layer = 4102,
    esriGDIComment_Begin_Group = 4103,
    esriGDIComment_End_Group = 4104,
    esriGDIComment_FillWithPattern = 4105,
    esriGDIComment_Mask_Layer = 4106,
    esriGDIComment_Mask_Layer_Before_Clipping = 4107
};

struct esriGDICommentBeginText
{
    unsigned long dSignature;
    unsigned long nVersion;
    short textType;
};

struct esriGDICommentBeginTextEx
{
    struct esriGDICommentBeginText beginText;
    short kerningOption;
    double trackingVal;
    double charWidthScale;
    double interwordSpace;
    double lineLeading;
    unsigned long dwnChars;
};

struct esriGDICommentEndText
{
    unsigned long dSignature;
    unsigned long nVersion;
};

struct esriGDICommentSetTextExtra
{
    unsigned long dSignature;
    unsigned long nVersion;
    unsigned long dExtraSpacing;
};

struct esriGDICommentSetCmykColor
{
    unsigned long dSignature;
    unsigned long nVersion;
    unsigned long cmykClr;
    short IsSpotColor;
    short colorType;
};

struct esriGDICommentBeginLayer
{
    unsigned long dSignature;
    unsigned long nVersion;
    unsigned long nDescription;
};

struct esriGDICommentEndLayer
{
    unsigned long dSignature;
    unsigned long nVersion;
};

struct esriGDICommentBeginGroup
{
    unsigned long dSignature;
    unsigned long nVersion;
    unsigned long nDescription;
};

struct esriGDICommentEndGroup
{
    unsigned long dSignature;
    unsigned long nVersion;
};

struct esriGDICommentFillWithPattern
{
    unsigned long dSignature;
    unsigned long nVersion;
    unsigned long clrfFgColor;
    unsigned long clrfBkColor;
    int iPatterXSizePix;
    int iPatterYSizePix;
    unsigned long dwPatterFormat;
    double dPatternTransformScaleX;
    double dPatternTransformScaleY;
    double dPatternTransformOffsetX;
    double dPatternTransformOffsetY;
    unsigned long dwPatternDataSize;
};

struct esriGDICommentMaskLayer
{
    unsigned long dSignature;
    unsigned long nVersion;
};

struct esriGDICommentMaskLayerBeforeClipping
{
    unsigned long dSignature;
    unsigned long nVersion;
};

struct __declspec(uuid("cef72580-c1d9-11d2-9888-0080c7e04196"))
IMapLevel : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MapLevel (
        long * MapLevel ) = 0;
    virtual HRESULT __stdcall put_MapLevel (
        long MapLevel ) = 0;
};

struct __declspec(uuid("f47b9b56-7efe-4ee4-b7d4-445f93ff390e"))
IDisplayName : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_NameString (
        BSTR * displayName ) = 0;
};

struct __declspec(uuid("8e1b88f1-0a46-11d4-8276-0080c79f0371"))
IQueryGeometry : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetGeometry (
        OLE_HANDLE hDC,
        struct ITransformation * displayTransform,
        struct IGeometry * drawGeometry,
        struct IGeometry * * outGeometry ) = 0;
    virtual HRESULT __stdcall QueryEnvelope (
        OLE_HANDLE hDC,
        struct ITransformation * displayTransform,
        struct IGeometry * drawGeometry,
        struct IEnvelope * envelope ) = 0;
};

struct __declspec(uuid("a9360291-5828-11d0-98bf-00805f7ced21"))
ISimpleLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriSimpleLineStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriSimpleLineStyle Style ) = 0;
};

struct __declspec(uuid("7914e5dc-c892-11d0-8bb6-080009ee4e41"))
IReferenceLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SymbolSetName (
        BSTR * SymbolSetName ) = 0;
    virtual HRESULT __stdcall put_SymbolSetName (
        BSTR SymbolSetName ) = 0;
    virtual HRESULT __stdcall get_SymbolName (
        BSTR * SymbolName ) = 0;
    virtual HRESULT __stdcall put_SymbolName (
        BSTR SymbolName ) = 0;
};

struct __declspec(uuid("7914e5de-c892-11d0-8bb6-080009ee4e41"))
IMultiLayerLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LayerCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Layer (
        long index,
        struct ILineSymbol * * lineLayer ) = 0;
    virtual HRESULT __stdcall AddLayer (
        struct ILineSymbol * lineLayer ) = 0;
    virtual HRESULT __stdcall DeleteLayer (
        struct ILineSymbol * lineLayer ) = 0;
    virtual HRESULT __stdcall MoveLayer (
        struct ILineSymbol * lineLayer,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearLayers ( ) = 0;
    virtual HRESULT __stdcall DrawLayer (
        long index,
        struct IGeometry * Geometry ) = 0;
};

struct __declspec(uuid("d7301b50-e92e-11d2-98ce-0080c7e04196"))
ILayerVisible : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LayerVisible (
        long layerIndex,
        VARIANT_BOOL * visible ) = 0;
    virtual HRESULT __stdcall put_LayerVisible (
        long layerIndex,
        VARIANT_BOOL visible ) = 0;
    virtual HRESULT __stdcall SetAllVisible (
        VARIANT_BOOL allVisible ) = 0;
};

struct __declspec(uuid("d7301b51-e92e-11d2-98ce-0080c7e04196"))
ILayerColorLock : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LayerColorLock (
        long layerIndex,
        VARIANT_BOOL * colorLock ) = 0;
    virtual HRESULT __stdcall put_LayerColorLock (
        long layerIndex,
        VARIANT_BOOL colorLock ) = 0;
    virtual HRESULT __stdcall SetAllColorLocked (
        VARIANT_BOOL allLocked ) = 0;
};

struct __declspec(uuid("b04bc357-c36e-11d0-bfa1-0080c7e24280"))
ILineProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LineDecoration (
        struct ILineDecoration * * LineDecoration ) = 0;
    virtual HRESULT __stdcall putref_LineDecoration (
        struct ILineDecoration * LineDecoration ) = 0;
    virtual HRESULT __stdcall get_DecorationOnTop (
        VARIANT_BOOL * onTop ) = 0;
    virtual HRESULT __stdcall put_DecorationOnTop (
        VARIANT_BOOL onTop ) = 0;
    virtual HRESULT __stdcall get_Flip (
        VARIANT_BOOL * Flip ) = 0;
    virtual HRESULT __stdcall put_Flip (
        VARIANT_BOOL Flip ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_LineStartOffset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_LineStartOffset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_Template (
        struct ITemplate * * theTemplate ) = 0;
    virtual HRESULT __stdcall putref_Template (
        struct ITemplate * theTemplate ) = 0;
};

struct __declspec(uuid("b04bc359-c36e-11d0-bfa1-0080c7e24280"))
ICartographicLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Cap (
        enum esriLineCapStyle * capStyle ) = 0;
    virtual HRESULT __stdcall put_Cap (
        enum esriLineCapStyle capStyle ) = 0;
    virtual HRESULT __stdcall get_Join (
        enum esriLineJoinStyle * joinStyle ) = 0;
    virtual HRESULT __stdcall put_Join (
        enum esriLineJoinStyle joinStyle ) = 0;
    virtual HRESULT __stdcall get_MiterLimit (
        double * MiterLimit ) = 0;
    virtual HRESULT __stdcall put_MiterLimit (
        double MiterLimit ) = 0;
};

struct __declspec(uuid("b04bc35a-c36e-11d0-bfa1-0080c7e24280"))
IHashLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HashSymbol (
        struct ILineSymbol * * HashSymbol ) = 0;
    virtual HRESULT __stdcall putref_HashSymbol (
        struct ILineSymbol * HashSymbol ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
};

struct __declspec(uuid("b04bc35b-c36e-11d0-bfa1-0080c7e24280"))
IMarkerLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MarkerSymbol (
        struct IMarkerSymbol * * marker ) = 0;
    virtual HRESULT __stdcall putref_MarkerSymbol (
        struct IMarkerSymbol * marker ) = 0;
};

struct __declspec(uuid("22c8c5a0-84fc-11d4-834d-0080c79f0371"))
IPictureLineSymbol : ILineSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Picture (
        IPictureDisp * * pictureDisp ) = 0;
    virtual HRESULT __stdcall putref_Picture (
        IPictureDisp * pictureDisp ) = 0;
    virtual HRESULT __stdcall get_BackgroundColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_BackgroundColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall put_BitmapTransparencyColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_BitmapTransparencyColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall get_Rotate (
        VARIANT_BOOL * Rotate ) = 0;
    virtual HRESULT __stdcall put_Rotate (
        VARIANT_BOOL Rotate ) = 0;
    virtual HRESULT __stdcall get_XScale (
        double * XScale ) = 0;
    virtual HRESULT __stdcall put_XScale (
        double XScale ) = 0;
    virtual HRESULT __stdcall get_YScale (
        double * YScale ) = 0;
    virtual HRESULT __stdcall put_YScale (
        double YScale ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
    virtual HRESULT __stdcall get_SwapForeGroundBackGroundColor (
        VARIANT_BOOL * swap ) = 0;
    virtual HRESULT __stdcall put_SwapForeGroundBackGroundColor (
        VARIANT_BOOL swap ) = 0;
    virtual HRESULT __stdcall CreateLineSymbolFromFile (
        enum esriIPictureType type,
        BSTR fileName ) = 0;
};

struct __declspec(uuid("a9360290-5828-11d0-98bf-00805f7ced21"))
ISimpleMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriSimpleMarkerStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriSimpleMarkerStyle Style ) = 0;
    virtual HRESULT __stdcall get_Outline (
        VARIANT_BOOL * Outline ) = 0;
    virtual HRESULT __stdcall put_Outline (
        VARIANT_BOOL Outline ) = 0;
    virtual HRESULT __stdcall get_OutlineSize (
        double * Size ) = 0;
    virtual HRESULT __stdcall put_OutlineSize (
        double Size ) = 0;
    virtual HRESULT __stdcall get_OutlineColor (
        struct IColor * * OutlineColor ) = 0;
    virtual HRESULT __stdcall put_OutlineColor (
        struct IColor * OutlineColor ) = 0;
};

struct __declspec(uuid("88539430-e06e-11d1-b277-0000f878229e"))
IArrowMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriArrowMarkerStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriArrowMarkerStyle Style ) = 0;
    virtual HRESULT __stdcall get_Length (
        double * Length ) = 0;
    virtual HRESULT __stdcall put_Length (
        double Length ) = 0;
    virtual HRESULT __stdcall get_Width (
        double * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        double Width ) = 0;
};

struct __declspec(uuid("7914e5e2-c892-11d0-8bb6-080009ee4e41"))
IReferenceMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SymbolSetName (
        BSTR * setName ) = 0;
    virtual HRESULT __stdcall put_SymbolSetName (
        BSTR setName ) = 0;
    virtual HRESULT __stdcall get_SymbolName (
        BSTR * symName ) = 0;
    virtual HRESULT __stdcall put_SymbolName (
        BSTR symName ) = 0;
};

struct __declspec(uuid("7914e5e4-c892-11d0-8bb6-080009ee4e41"))
IMultiLayerMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LayerCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Layer (
        long index,
        struct IMarkerSymbol * * markerLayer ) = 0;
    virtual HRESULT __stdcall AddLayer (
        struct IMarkerSymbol * markerLayer ) = 0;
    virtual HRESULT __stdcall DeleteLayer (
        struct IMarkerSymbol * markerLayer ) = 0;
    virtual HRESULT __stdcall MoveLayer (
        struct IMarkerSymbol * markerLayer,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearLayers ( ) = 0;
    virtual HRESULT __stdcall DrawLayer (
        long index,
        struct IGeometry * Geometry ) = 0;
};

struct __declspec(uuid("7914e5e6-c892-11d0-8bb6-080009ee4e41"))
ICartographicMarkerSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_XScale (
        double * XScale ) = 0;
    virtual HRESULT __stdcall put_XScale (
        double XScale ) = 0;
    virtual HRESULT __stdcall get_YScale (
        double * YScale ) = 0;
    virtual HRESULT __stdcall put_YScale (
        double YScale ) = 0;
};

struct __declspec(uuid("7914e5e7-c892-11d0-8bb6-080009ee4e41"))
ICharacterMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Font (
        IFontDisp * * fontDisp ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * fontDisp ) = 0;
    virtual HRESULT __stdcall get_CharacterIndex (
        long * charIndex ) = 0;
    virtual HRESULT __stdcall put_CharacterIndex (
        long charIndex ) = 0;
};

struct __declspec(uuid("7914e5e9-c892-11d0-8bb6-080009ee4e41"))
IPictureMarkerSymbol : IMarkerSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Picture (
        IPictureDisp * * pictureDisp ) = 0;
    virtual HRESULT __stdcall putref_Picture (
        IPictureDisp * pictureDisp ) = 0;
    virtual HRESULT __stdcall get_BackgroundColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_BackgroundColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_BitmapTransparencyColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_BitmapTransparencyColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_SwapForeGroundBackGroundColor (
        VARIANT_BOOL * swap ) = 0;
    virtual HRESULT __stdcall put_SwapForeGroundBackGroundColor (
        VARIANT_BOOL swap ) = 0;
    virtual HRESULT __stdcall CreateMarkerSymbolFromFile (
        enum esriIPictureType type,
        BSTR fileName ) = 0;
};

struct __declspec(uuid("6cff7e07-0502-11d4-9f7c-00c04f6bc709"))
ISymbolArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SymbolCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        long index,
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        long index,
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall AddSymbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall DeleteSymbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall MoveSymbol (
        struct ISymbol * Symbol,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearSymbols ( ) = 0;
};

struct __declspec(uuid("50317363-bd70-11d3-9f79-00c04f6bc709"))
IChartSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Value (
        long index,
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        long index,
        double Value ) = 0;
    virtual HRESULT __stdcall get_MaxValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_MaxValue (
        double Value ) = 0;
};

struct __declspec(uuid("50317364-bd70-11d3-9f79-00c04f6bc709"))
IPieChartSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Clockwise (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_Clockwise (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_UseOutline (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_UseOutline (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_Outline (
        struct ILineSymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall put_Outline (
        struct ILineSymbol * Symbol ) = 0;
};

struct __declspec(uuid("50317365-bd70-11d3-9f79-00c04f6bc709"))
IBarChartSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_VerticalBars (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_VerticalBars (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_ShowAxes (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_ShowAxes (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_Axes (
        struct ILineSymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall put_Axes (
        struct ILineSymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_Width (
        double * points ) = 0;
    virtual HRESULT __stdcall put_Width (
        double points ) = 0;
    virtual HRESULT __stdcall get_Spacing (
        double * points ) = 0;
    virtual HRESULT __stdcall put_Spacing (
        double points ) = 0;
};

struct __declspec(uuid("50317366-bd70-11d3-9f79-00c04f6bc709"))
IStackedChartSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Width (
        double * points ) = 0;
    virtual HRESULT __stdcall put_Width (
        double points ) = 0;
    virtual HRESULT __stdcall get_VerticalBar (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_VerticalBar (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_UseOutline (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_UseOutline (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_Outline (
        struct ILineSymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall put_Outline (
        struct ILineSymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_Fixed (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_Fixed (
        VARIANT_BOOL flag ) = 0;
};

struct __declspec(uuid("50317367-bd70-11d3-9f79-00c04f6bc709"))
I3DChartSymbol : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Display3D (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_Display3D (
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall get_Thickness (
        double * points ) = 0;
    virtual HRESULT __stdcall put_Thickness (
        double points ) = 0;
    virtual HRESULT __stdcall get_Tilt (
        long * Angle ) = 0;
    virtual HRESULT __stdcall put_Tilt (
        long Angle ) = 0;
};

struct __declspec(uuid("ae41e4f0-dde7-11d3-8216-0080c79f0371"))
IMarkerBackground : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MarkerSymbol (
        struct IMarkerSymbol * * markerSym ) = 0;
    virtual HRESULT __stdcall putref_MarkerSymbol (
        struct IMarkerSymbol * markerSym ) = 0;
    virtual HRESULT __stdcall putref_MarkerBox (
        struct IEnvelope * _arg1 ) = 0;
    virtual HRESULT __stdcall MarkerBackgroundQueryBoundary (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IPolygon * boundary ) = 0;
    virtual HRESULT __stdcall MarkerBackgroundDraw (
        OLE_HANDLE hDC,
        struct ITransformation * transform ) = 0;
};

struct __declspec(uuid("9ce9d410-ddeb-11d3-8216-0080c79f0371"))
IMarkerBackgroundSupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Background (
        struct IMarkerBackground * * Background ) = 0;
    virtual HRESULT __stdcall putref_Background (
        struct IMarkerBackground * Background ) = 0;
};

struct __declspec(uuid("572d1037-7815-11d3-9f6a-00c04f6bc8dd"))
IMarkerMask : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall QueryMarkerMask (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IGeometry * Geometry,
        struct IPolygon * boundary ) = 0;
};

struct __declspec(uuid("a9360292-5828-11d0-98bf-00805f7ced21"))
ISimpleFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriSimpleFillStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriSimpleFillStyle Style ) = 0;
};

struct __declspec(uuid("7914e5ea-c892-11d0-8bb6-080009ee4e41"))
IReferenceFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SymbolSetName (
        BSTR * setName ) = 0;
    virtual HRESULT __stdcall put_SymbolSetName (
        BSTR setName ) = 0;
    virtual HRESULT __stdcall get_SymbolName (
        BSTR * symName ) = 0;
    virtual HRESULT __stdcall put_SymbolName (
        BSTR symName ) = 0;
};

struct __declspec(uuid("7914e5ec-c892-11d0-8bb6-080009ee4e41"))
IMultiLayerFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LayerCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Layer (
        long index,
        struct IFillSymbol * * fillLayer ) = 0;
    virtual HRESULT __stdcall AddLayer (
        struct IFillSymbol * fillLayer ) = 0;
    virtual HRESULT __stdcall DeleteLayer (
        struct IFillSymbol * fillLayer ) = 0;
    virtual HRESULT __stdcall MoveLayer (
        struct IFillSymbol * fillLayer,
        long toIndex ) = 0;
    virtual HRESULT __stdcall ClearLayers ( ) = 0;
    virtual HRESULT __stdcall DrawLayer (
        long index,
        struct IGeometry * Geometry ) = 0;
};

struct __declspec(uuid("7914e5ef-c892-11d0-8bb6-080009ee4e41"))
ILineFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LineSymbol (
        struct ILineSymbol * * lineSym ) = 0;
    virtual HRESULT __stdcall putref_LineSymbol (
        struct ILineSymbol * lineSym ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_Separation (
        double * Separation ) = 0;
    virtual HRESULT __stdcall put_Separation (
        double Separation ) = 0;
    virtual HRESULT __stdcall get_Offset (
        double * Offset ) = 0;
    virtual HRESULT __stdcall put_Offset (
        double Offset ) = 0;
};

struct __declspec(uuid("d842b081-330c-11d2-9168-0000f87808ee"))
IPictureFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Picture (
        IPictureDisp * * pictureDisp ) = 0;
    virtual HRESULT __stdcall putref_Picture (
        IPictureDisp * pictureDisp ) = 0;
    virtual HRESULT __stdcall get_BackgroundColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_BackgroundColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall put_BitmapTransparencyColor (
        struct IColor * Color ) = 0;
    virtual HRESULT __stdcall get_BitmapTransparencyColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall get_Angle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_XScale (
        double * XScale ) = 0;
    virtual HRESULT __stdcall put_XScale (
        double XScale ) = 0;
    virtual HRESULT __stdcall get_YScale (
        double * YScale ) = 0;
    virtual HRESULT __stdcall put_YScale (
        double YScale ) = 0;
    virtual HRESULT __stdcall get_SwapForeGroundBackGroundColor (
        VARIANT_BOOL * swap ) = 0;
    virtual HRESULT __stdcall put_SwapForeGroundBackGroundColor (
        VARIANT_BOOL swap ) = 0;
    virtual HRESULT __stdcall CreateFillSymbolFromFile (
        enum esriIPictureType type,
        BSTR fileName ) = 0;
};

struct __declspec(uuid("7914e5f1-c892-11d0-8bb6-080009ee4e41"))
IMarkerFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MarkerSymbol (
        struct IMarkerSymbol * * marker ) = 0;
    virtual HRESULT __stdcall putref_MarkerSymbol (
        struct IMarkerSymbol * marker ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum esriMarkerFillStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriMarkerFillStyle Style ) = 0;
    virtual HRESULT __stdcall get_GridAngle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_GridAngle (
        double Angle ) = 0;
};

struct __declspec(uuid("7914e5f2-c892-11d0-8bb6-080009ee4e41"))
IGradientFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriGradientFillStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriGradientFillStyle Style ) = 0;
    virtual HRESULT __stdcall get_GradientAngle (
        double * Angle ) = 0;
    virtual HRESULT __stdcall put_GradientAngle (
        double Angle ) = 0;
    virtual HRESULT __stdcall get_ColorRamp (
        struct IColorRamp * * Ramp ) = 0;
    virtual HRESULT __stdcall put_ColorRamp (
        struct IColorRamp * Ramp ) = 0;
    virtual HRESULT __stdcall get_GradientPercentage (
        double * pct ) = 0;
    virtual HRESULT __stdcall put_GradientPercentage (
        double pct ) = 0;
    virtual HRESULT __stdcall get_IntervalCount (
        long * IntervalCount ) = 0;
    virtual HRESULT __stdcall put_IntervalCount (
        long IntervalCount ) = 0;
};

struct __declspec(uuid("85e413a0-cdf9-11d3-81eb-0080c79f0371"))
IDotDensityFillSymbol : IFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DotSize (
        double * DotSize ) = 0;
    virtual HRESULT __stdcall put_DotSize (
        double DotSize ) = 0;
    virtual HRESULT __stdcall get_DotCount (
        long index,
        long * DotCount ) = 0;
    virtual HRESULT __stdcall put_DotCount (
        long index,
        long DotCount ) = 0;
    virtual HRESULT __stdcall get_DotSpacing (
        double * DotSpacing ) = 0;
    virtual HRESULT __stdcall put_DotSpacing (
        double DotSpacing ) = 0;
    virtual HRESULT __stdcall get_FixedPlacement (
        VARIANT_BOOL * FixedPlacement ) = 0;
    virtual HRESULT __stdcall put_FixedPlacement (
        VARIANT_BOOL FixedPlacement ) = 0;
    virtual HRESULT __stdcall get_BackgroundColor (
        struct IColor * * Color ) = 0;
    virtual HRESULT __stdcall put_BackgroundColor (
        struct IColor * Color ) = 0;
};

struct __declspec(uuid("de641030-cfc0-4465-beaf-33245d3ea1e9"))
IDotDensityFillSymbol2 : IDotDensityFillSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RandomSeed (
        VARIANT * Seed ) = 0;
    virtual HRESULT __stdcall put_RandomSeed (
        VARIANT Seed ) = 0;
};

struct __declspec(uuid("758fc2b0-d2ac-11d3-81f3-0080c79f0371"))
IDotDensityMasking : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_MaskGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall get_MaskGeometry (
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall get_UseMasking (
        VARIANT_BOOL * UseMasking ) = 0;
    virtual HRESULT __stdcall put_UseMasking (
        VARIANT_BOOL UseMasking ) = 0;
    virtual HRESULT __stdcall get_ExcludeMask (
        VARIANT_BOOL * ExcludeMask ) = 0;
    virtual HRESULT __stdcall put_ExcludeMask (
        VARIANT_BOOL ExcludeMask ) = 0;
};

struct __declspec(uuid("7914e5f3-c892-11d0-8bb6-080009ee4e41"))
IFillProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_XOffset (
        double * XOffset ) = 0;
    virtual HRESULT __stdcall put_XOffset (
        double XOffset ) = 0;
    virtual HRESULT __stdcall get_YOffset (
        double * YOffset ) = 0;
    virtual HRESULT __stdcall put_YOffset (
        double YOffset ) = 0;
    virtual HRESULT __stdcall get_XSeparation (
        double * XSeparation ) = 0;
    virtual HRESULT __stdcall put_XSeparation (
        double XSeparation ) = 0;
    virtual HRESULT __stdcall get_YSeparation (
        double * YSeparation ) = 0;
    virtual HRESULT __stdcall put_YSeparation (
        double YSeparation ) = 0;
};

struct __declspec(uuid("a80b5e8c-7f9c-11d0-9410-080009eebecb"))
ISimpleTextSymbol : ITextSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BreakCharacter (
        long * charIndex ) = 0;
    virtual HRESULT __stdcall put_BreakCharacter (
        long charIndex ) = 0;
    virtual HRESULT __stdcall get_Clip (
        VARIANT_BOOL * Clip ) = 0;
    virtual HRESULT __stdcall put_Clip (
        VARIANT_BOOL Clip ) = 0;
    virtual HRESULT __stdcall get_TextPath (
        struct ITextPath * * TextPath ) = 0;
    virtual HRESULT __stdcall putref_TextPath (
        struct ITextPath * TextPath ) = 0;
    virtual HRESULT __stdcall get_XOffset (
        double * XOffset ) = 0;
    virtual HRESULT __stdcall put_XOffset (
        double XOffset ) = 0;
    virtual HRESULT __stdcall get_YOffset (
        double * YOffset ) = 0;
    virtual HRESULT __stdcall put_YOffset (
        double YOffset ) = 0;
};

struct __declspec(uuid("b65a3e72-2993-11d1-9a43-0080c7ec5c96"))
IFormattedTextSymbol : ITextSymbol
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ShadowColor (
        struct IColor * * ShadowColor ) = 0;
    virtual HRESULT __stdcall put_ShadowColor (
        struct IColor * ShadowColor ) = 0;
    virtual HRESULT __stdcall get_ShadowXOffset (
        double * XOffset ) = 0;
    virtual HRESULT __stdcall put_ShadowXOffset (
        double XOffset ) = 0;
    virtual HRESULT __stdcall get_ShadowYOffset (
        double * YOffset ) = 0;
    virtual HRESULT __stdcall put_ShadowYOffset (
        double YOffset ) = 0;
    virtual HRESULT __stdcall get_Position (
        enum esriTextPosition * textPosition ) = 0;
    virtual HRESULT __stdcall put_Position (
        enum esriTextPosition textPosition ) = 0;
    virtual HRESULT __stdcall get_Case (
        enum esriTextCase * textCase ) = 0;
    virtual HRESULT __stdcall put_Case (
        enum esriTextCase textCase ) = 0;
    virtual HRESULT __stdcall get_CharacterSpacing (
        double * CharacterSpacing ) = 0;
    virtual HRESULT __stdcall put_CharacterSpacing (
        double CharacterSpacing ) = 0;
    virtual HRESULT __stdcall get_CharacterWidth (
        double * CharacterWidth ) = 0;
    virtual HRESULT __stdcall put_CharacterWidth (
        double CharacterWidth ) = 0;
    virtual HRESULT __stdcall get_WordSpacing (
        double * WordSpacing ) = 0;
    virtual HRESULT __stdcall put_WordSpacing (
        double WordSpacing ) = 0;
    virtual HRESULT __stdcall get_Kerning (
        VARIANT_BOOL * Kerning ) = 0;
    virtual HRESULT __stdcall put_Kerning (
        VARIANT_BOOL Kerning ) = 0;
    virtual HRESULT __stdcall get_Leading (
        double * Leading ) = 0;
    virtual HRESULT __stdcall put_Leading (
        double Leading ) = 0;
    virtual HRESULT __stdcall get_Direction (
        enum esriTextDirection * textDirection ) = 0;
    virtual HRESULT __stdcall put_Direction (
        enum esriTextDirection textDirection ) = 0;
    virtual HRESULT __stdcall get_FlipAngle (
        double * FlipAngle ) = 0;
    virtual HRESULT __stdcall put_FlipAngle (
        double FlipAngle ) = 0;
    virtual HRESULT __stdcall get_Background (
        struct ITextBackground * * Background ) = 0;
    virtual HRESULT __stdcall putref_Background (
        struct ITextBackground * Background ) = 0;
    virtual HRESULT __stdcall get_TypeSetting (
        VARIANT_BOOL * TypeSetting ) = 0;
    virtual HRESULT __stdcall put_TypeSetting (
        VARIANT_BOOL TypeSetting ) = 0;
    virtual HRESULT __stdcall get_FillSymbol (
        struct IFillSymbol * * FillSymbol ) = 0;
    virtual HRESULT __stdcall putref_FillSymbol (
        struct IFillSymbol * FillSymbol ) = 0;
};

struct __declspec(uuid("1fa841f8-a2cb-433d-88ac-10a945852320"))
ICharacterOrientation : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_CJKCharactersRotation (
        VARIANT_BOOL Rotation ) = 0;
    virtual HRESULT __stdcall get_CJKCharactersRotation (
        VARIANT_BOOL * Rotation ) = 0;
};

struct __declspec(uuid("533d88f7-0a1a-11d2-b27f-0000f878229e"))
ISimpleLineDecorationElement : ILineDecorationElement
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MarkerSymbol (
        struct IMarkerSymbol * * MarkerSymbol ) = 0;
    virtual HRESULT __stdcall put_MarkerSymbol (
        struct IMarkerSymbol * MarkerSymbol ) = 0;
    virtual HRESULT __stdcall get_Rotate (
        VARIANT_BOOL * Rotate ) = 0;
    virtual HRESULT __stdcall put_Rotate (
        VARIANT_BOOL Rotate ) = 0;
    virtual HRESULT __stdcall get_FlipFirst (
        VARIANT_BOOL * FlipFirst ) = 0;
    virtual HRESULT __stdcall put_FlipFirst (
        VARIANT_BOOL FlipFirst ) = 0;
    virtual HRESULT __stdcall get_FlipAll (
        VARIANT_BOOL * FlipAll ) = 0;
    virtual HRESULT __stdcall put_FlipAll (
        VARIANT_BOOL FlipAll ) = 0;
};

struct __declspec(uuid("6ea0e1e0-13e5-46d0-82ad-69f8993a67e3"))
ITextPath2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetupEx (
        OLE_HANDLE hDC,
        struct ITransformation * transformation,
        struct ITextSymbol * textSym,
        BSTR Text,
        VARIANT charMetrics ) = 0;
};

struct __declspec(uuid("63fc25a7-438b-4f97-888e-105e6d461828"))
ITextBackground2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_TextBoundary (
        struct IPolygon * _arg1 ) = 0;
};

struct __declspec(uuid("c8d09ed0-4fbb-11d1-9a72-0080c7ec5c96"))
IBalloonCallout : ICallout
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum esriBalloonCalloutStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum esriBalloonCalloutStyle Style ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        struct IFillSymbol * * fillSym ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        struct IFillSymbol * fillSym ) = 0;
};

struct __declspec(uuid("a8577a00-7283-11d2-9816-0080c7e04196"))
IMarkerTextBackground : ITextBackground
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Symbol (
        struct IMarkerSymbol * * MarkerSymbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        struct IMarkerSymbol * MarkerSymbol ) = 0;
    virtual HRESULT __stdcall get_ScaleToFit (
        VARIANT_BOOL * scale ) = 0;
    virtual HRESULT __stdcall put_ScaleToFit (
        VARIANT_BOOL scale ) = 0;
};

struct __declspec(uuid("6a7ef982-6924-11d2-980d-0080c7e04196"))
ITextMargins : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LeftMargin (
        double * LeftMargin ) = 0;
    virtual HRESULT __stdcall put_LeftMargin (
        double LeftMargin ) = 0;
    virtual HRESULT __stdcall get_RightMargin (
        double * RightMargin ) = 0;
    virtual HRESULT __stdcall put_RightMargin (
        double RightMargin ) = 0;
    virtual HRESULT __stdcall get_TopMargin (
        double * TopMargin ) = 0;
    virtual HRESULT __stdcall put_TopMargin (
        double TopMargin ) = 0;
    virtual HRESULT __stdcall get_BottomMargin (
        double * BottomMargin ) = 0;
    virtual HRESULT __stdcall put_BottomMargin (
        double BottomMargin ) = 0;
    virtual HRESULT __stdcall PutMargins (
        double left,
        double top,
        double right,
        double bottom ) = 0;
    virtual HRESULT __stdcall QueryMargins (
        double * left,
        double * top,
        double * right,
        double * bottom ) = 0;
};

struct __declspec(uuid("086c95cb-4366-467f-b6a3-6f8a2b693f97"))
IMarginProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Margin (
        double * Margin ) = 0;
    virtual HRESULT __stdcall put_Margin (
        double Margin ) = 0;
};

struct __declspec(uuid("741451a0-5f13-11d2-bcdb-0000f875bcce"))
IGeometryDraw : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Draw (
        OLE_HANDLE hDC,
        struct IGeometry * pGeometry,
        struct ITransformation * pTransformation,
        struct IEnvelope * pVisibleBounds ) = 0;
    virtual HRESULT __stdcall QueryGeometryFromWin32Path (
        OLE_HANDLE hDC,
        struct ITransformation * transform,
        struct IPolygon * Geometry ) = 0;
};

struct __declspec(uuid("6e7cb970-0a4d-11d3-bcaf-0080c7e04196"))
IFontSize : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Size (
        double * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        double Size ) = 0;
};

struct __declspec(uuid("77d415d5-5815-4322-87ff-a6940a790107"))
IFontName : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
};

struct __declspec(uuid("a37e7145-e00d-43f3-be13-7e1cc9348329"))
IFontAttribute : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_State (
        VARIANT_BOOL * State ) = 0;
    virtual HRESULT __stdcall put_State (
        VARIANT_BOOL State ) = 0;
};

struct __declspec(uuid("df029d39-50d5-40d8-ad2f-bd30eb91418c"))
IBold : IFontAttribute
{};

struct __declspec(uuid("a45f4f70-caaa-4fe1-a96b-2f483de67a68"))
IItalic : IFontAttribute
{};

struct __declspec(uuid("f9292de5-7d71-41cb-8224-3685744cf564"))
IUnderline : IFontAttribute
{};

struct __declspec(uuid("84a1f5c2-d0a1-4e45-842b-149e857e8a9c"))
ISymbolRotation : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RotateWithTransform (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_RotateWithTransform (
        VARIANT_BOOL flag ) = 0;
};

struct __declspec(uuid("440b07bb-92f0-11d3-9fcc-00c04f6bc6a5"))
ISymbolIdentifier : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Symbol (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_ID (
        long * symbolID ) = 0;
    virtual HRESULT __stdcall put_ID (
        long symbolID ) = 0;
};

struct __declspec(uuid("877a260a-cacb-48f6-aaf9-a24ce3bc75ff"))
ISymbolIdentifier2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Symbol (
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall get_ID (
        long * symbolID ) = 0;
    virtual HRESULT __stdcall put_ID (
        long symbolID ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
};

struct __declspec(uuid("0e5d8c65-8d91-11d3-9fca-00c04f6bc6a5"))
ISymbolCollection : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Symbol (
        long symbolID,
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        long symbolID,
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Next (
        struct ISymbolIdentifier * * symbolID ) = 0;
    virtual HRESULT __stdcall Replace (
        long symbolID,
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall Remove (
        long symbolID ) = 0;
    virtual HRESULT __stdcall RemoveAll ( ) = 0;
};

struct __declspec(uuid("7ed742b9-0aef-40a0-a9a5-de2a302692f2"))
ISymbolCollection2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Symbol (
        long symbolID,
        struct ISymbol * * Symbol ) = 0;
    virtual HRESULT __stdcall putref_Symbol (
        long symbolID,
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Next (
        struct ISymbolIdentifier * * symbolID ) = 0;
    virtual HRESULT __stdcall Replace (
        long symbolID,
        struct ISymbol * Symbol ) = 0;
    virtual HRESULT __stdcall Remove (
        long symbolID ) = 0;
    virtual HRESULT __stdcall RemoveAll ( ) = 0;
    virtual HRESULT __stdcall AddSymbol (
        struct ISymbol * Symbol,
        BSTR Name,
        struct ISymbolIdentifier2 * * symbolID ) = 0;
    virtual HRESULT __stdcall GetSymbolIdentifier (
        long ID,
        struct ISymbolIdentifier2 * * symbolID ) = 0;
    virtual HRESULT __stdcall RenameSymbol (
        long symbolID,
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Count ) = 0;
};

struct __declspec(uuid("3e0b2e61-27f4-11d3-9f9c-00c04f6bc6a5"))
IOverposterTextPath : IUnknown
{};

struct __declspec(uuid("2690cdce-96a4-49da-bd07-3f4ed61efece"))
IWordTextPath : IUnknown
{};

struct __declspec(uuid("df0f7ba7-1c31-44cb-975f-87ff272793aa"))
IWordBoundaries : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall QueryWordBoundaries (
        OLE_HANDLE hDC,
        struct ITransformation * displayTransform,
        struct IGeometry * Geometry,
        struct IGeometryBag * boundaries ) = 0;
};

struct __declspec(uuid("65856cd7-ad04-11d3-9fc2-00c04f6bc8dd"))
ISymbologyEnvironment : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_OutputGDICommentForCMYKColor (
        VARIANT_BOOL * pCmykColor ) = 0;
    virtual HRESULT __stdcall put_OutputGDICommentForCMYKColor (
        VARIANT_BOOL pCmykColor ) = 0;
    virtual HRESULT __stdcall get_OutputGDICommentForLayers (
        VARIANT_BOOL * layers ) = 0;
    virtual HRESULT __stdcall put_OutputGDICommentForLayers (
        VARIANT_BOOL layers ) = 0;
    virtual HRESULT __stdcall get_OutputGDICommentForGroupings (
        VARIANT_BOOL * grouping ) = 0;
    virtual HRESULT __stdcall put_OutputGDICommentForGroupings (
        VARIANT_BOOL grouping ) = 0;
    virtual HRESULT __stdcall get_OutputGDICommentForText (
        VARIANT_BOOL * Text ) = 0;
    virtual HRESULT __stdcall put_OutputGDICommentForText (
        VARIANT_BOOL Text ) = 0;
    virtual HRESULT __stdcall get_GeometryClipping (
        VARIANT_BOOL * GeometryClipping ) = 0;
    virtual HRESULT __stdcall put_GeometryClipping (
        VARIANT_BOOL GeometryClipping ) = 0;
    virtual HRESULT __stdcall get_StrokeTrueTypeMarkers (
        VARIANT_BOOL * StrokeTrueTypeMarkers ) = 0;
    virtual HRESULT __stdcall put_StrokeTrueTypeMarkers (
        VARIANT_BOOL StrokeTrueTypeMarkers ) = 0;
};

enum esriPictureSymbolOptions
{
    esriPSORasterize = 0,
    esriPSORasterizeIfRasterData = 1,
    esriPSOVectorize = 2
};

struct __declspec(uuid("c6778756-976c-4761-a3a7-661b2446a7bb"))
IPictureSymbolEnvironment : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PictureSymbolOptions (
        enum esriPictureSymbolOptions * options ) = 0;
    virtual HRESULT __stdcall put_PictureSymbolOptions (
        enum esriPictureSymbolOptions options ) = 0;
};

struct __declspec(uuid("ad134202-770b-47ab-80bd-e3457c5e3168"))
ISimpleLineCallout : ICallout
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LineGeometry (
        struct IGeometry * * Geometry ) = 0;
    virtual HRESULT __stdcall put_LineGeometry (
        struct IGeometry * Geometry ) = 0;
    virtual HRESULT __stdcall get_LineSymbol (
        struct ILineSymbol * * LineSymbol ) = 0;
    virtual HRESULT __stdcall put_LineSymbol (
        struct ILineSymbol * LineSymbol ) = 0;
    virtual HRESULT __stdcall get_AutoSnap (
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall put_AutoSnap (
        VARIANT_BOOL flag ) = 0;
};

struct __declspec(uuid("55d9f654-5cde-4842-8e47-70518079fe1a"))
ITextParser : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TextSymbol (
        struct ITextSymbol * * textSym ) = 0;
    virtual HRESULT __stdcall putref_TextSymbol (
        struct ITextSymbol * textSym ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * Text ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR Text ) = 0;
    virtual HRESULT __stdcall HasTags (
        VARIANT_BOOL * HasTags ) = 0;
    virtual HRESULT __stdcall Next ( ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("5dea57cf-a8ef-4944-b731-87df1b6f136d"))
ITextParserSupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TextParser (
        struct ITextParser * * parser ) = 0;
    virtual HRESULT __stdcall putref_TextParser (
        struct ITextParser * parser ) = 0;
};

struct __declspec(uuid("bf5bd367-5223-49c0-8db0-fbc9d7cf36bb"))
ITextDrawSupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetDrawText (
        BSTR origText,
        BSTR * pParsedText,
        VARIANT * pPositions ) = 0;
    virtual HRESULT __stdcall GetDrawPoints (
        OLE_HANDLE hDC,
        struct ITransformation * pTransform,
        struct IGeometry * pGeometry,
        VARIANT * drawPoints ) = 0;
};

struct __declspec(uuid("272369d5-140a-444b-a505-0983bddcdbab"))
IUpdateLegendInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Update (
        VARIANT_BOOL * bUpdate ) = 0;
    virtual HRESULT __stdcall ResetUpdate ( ) = 0;
};

struct __declspec(uuid("7914e5f9-c892-11d0-8bb6-080009ee4e41"))
SimpleLineSymbol;
    // [ default ] interface IUnknown
    // interface ISimpleLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("7914e5fa-c892-11d0-8bb6-080009ee4e41"))
MultiLayerLineSymbol;
    // [ default ] interface IUnknown
    // interface IMultiLayerLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ILayerVisible
    // interface ILayerColorLock
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("7914e5fb-c892-11d0-8bb6-080009ee4e41"))
CartographicLineSymbol;
    // [ default ] interface IUnknown
    // interface ICartographicLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ILineProperties
    // interface IPropertySupport
    // interface IPersist
    // interface IPersistStream
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e5fc-c892-11d0-8bb6-080009ee4e41"))
HashLineSymbol;
    // [ default ] interface IUnknown
    // interface IHashLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ICartographicLineSymbol
    // interface ILineProperties
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e5fd-c892-11d0-8bb6-080009ee4e41"))
MarkerLineSymbol;
    // [ default ] interface IUnknown
    // interface IMarkerLineSymbol
    // interface ICartographicLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ILineProperties
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("22c8c5a1-84fc-11d4-834d-0080c79f0371"))
PictureLineSymbol;
    // [ default ] interface IUnknown
    // interface IPictureLineSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e5fe-c892-11d0-8bb6-080009ee4e41"))
SimpleMarkerSymbol;
    // [ default ] interface IUnknown
    // interface ISimpleMarkerSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ISymbolRotation
    // interface IMarkerMask
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("7914e5ff-c892-11d0-8bb6-080009ee4e41"))
MultiLayerMarkerSymbol;
    // [ default ] interface IUnknown
    // interface IMultiLayerMarkerSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ISymbolRotation
    // interface IMask
    // interface IMarkerBackgroundSupport
    // interface ILayerVisible
    // interface ILayerColorLock
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("7914e600-c892-11d0-8bb6-080009ee4e41"))
CharacterMarkerSymbol;
    // [ default ] interface IUnknown
    // interface ICharacterMarkerSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ICartographicMarkerSymbol
    // interface ISymbolRotation
    // interface IMarkerMask
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e602-c892-11d0-8bb6-080009ee4e41"))
PictureMarkerSymbol;
    // [ default ] interface IUnknown
    // interface IPictureMarkerSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ICartographicMarkerSymbol
    // interface ISymbolRotation
    // interface IMarkerMask
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("88539431-e06e-11d1-b277-0000f878229e"))
ArrowMarkerSymbol;
    // [ default ] interface IUnknown
    // interface IArrowMarkerSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ISymbolRotation
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IMarkerMask
    // interface IPropertySupport

struct __declspec(uuid("5031736a-bd70-11d3-9f79-00c04f6bc709"))
BarChartSymbol;
    // [ default ] interface IUnknown
    // interface ISymbolArray
    // interface IChartSymbol
    // interface IBarChartSymbol
    // interface I3DChartSymbol
    // interface IMarkerSymbol
    // interface ISymbol
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IMarkerBackgroundSupport

struct __declspec(uuid("50317368-bd70-11d3-9f79-00c04f6bc709"))
PieChartSymbol;
    // [ default ] interface IUnknown
    // interface ISymbolArray
    // interface IChartSymbol
    // interface IPieChartSymbol
    // interface I3DChartSymbol
    // interface IMarkerSymbol
    // interface ISymbol
    // interface IMarkerBackgroundSupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("50317369-bd70-11d3-9f79-00c04f6bc709"))
StackedChartSymbol;
    // [ default ] interface IUnknown
    // interface ISymbolArray
    // interface IChartSymbol
    // interface IStackedChartSymbol
    // interface I3DChartSymbol
    // interface IMarkerSymbol
    // interface ISymbol
    // interface IMarkerBackgroundSupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("7914e603-c892-11d0-8bb6-080009ee4e41"))
SimpleFillSymbol;
    // [ default ] interface IUnknown
    // interface ISimpleFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("7914e604-c892-11d0-8bb6-080009ee4e41"))
MultiLayerFillSymbol;
    // [ default ] interface IUnknown
    // interface IMultiLayerFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ILayerVisible
    // interface ILayerColorLock
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("7914e606-c892-11d0-8bb6-080009ee4e41"))
LineFillSymbol;
    // [ default ] interface IUnknown
    // interface ILineFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("d842b082-330c-11d2-9168-0000f87808ee"))
PictureFillSymbol;
    // [ default ] interface IUnknown
    // interface IPictureFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IFillProperties
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e608-c892-11d0-8bb6-080009ee4e41"))
MarkerFillSymbol;
    // [ default ] interface IUnknown
    // interface IMarkerFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IFillProperties
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("7914e609-c892-11d0-8bb6-080009ee4e41"))
GradientFillSymbol;
    // [ default ] interface IUnknown
    // interface IGradientFillSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("9a1eba10-cdf9-11d3-81eb-0080c79f0371"))
DotDensityFillSymbol;
    // [ default ] interface IUnknown
    // interface IDotDensityFillSymbol
    // interface IDotDensityFillSymbol2
    // interface IDotDensityMasking
    // interface ISymbolArray
    // interface IMapLevel
    // interface ISymbol
    // interface IPropertySupport
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("b65a3e74-2993-11d1-9a43-0080c7ec5c96"))
TextSymbol;
    // [ default ] interface IUnknown
    // interface IFormattedTextSymbol
    // interface ISimpleTextSymbol
    // interface IMapLevel
    // interface ISymbol
    // interface ISymbolRotation
    // interface IMask
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IPropertySupport
    // interface ITextParserSupport
    // interface IQueryGeometry
    // interface IMarginProperties
    // interface ITextDrawSupport
    // interface IWordBoundaries
    // interface IXMLSerialize
    // interface ICharacterOrientation

struct __declspec(uuid("41093a71-cce1-11d0-bfaa-0080c7e24280"))
Template;
    // [ default ] interface IUnknown
    // interface ITemplate
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("533d88f3-0a1a-11d2-b27f-0000f878229e"))
SimpleLineDecorationElement;
    // [ default ] interface IUnknown
    // interface ISimpleLineDecorationElement
    // interface ILineDecorationElement
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName

struct __declspec(uuid("533d88f5-0a1a-11d2-b27f-0000f878229e"))
LineDecoration;
    // [ default ] interface IUnknown
    // interface ILineDecoration
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("b65a3e76-2993-11d1-9a43-0080c7ec5c96"))
SimpleTextPath;
    // [ default ] interface IUnknown
    // interface ITextPath
    // interface ITextPath2
    // interface IPersist

struct __declspec(uuid("2de21000-bdeb-11d1-970b-0080c7e04196"))
BezierTextPath;
    // [ default ] interface IUnknown
    // interface ITextPath
    // interface IPersist

struct __declspec(uuid("c8d09ed2-4fbb-11d1-9a72-0080c7ec5c96"))
BalloonCallout;
    // [ default ] interface IUnknown
    // interface IBalloonCallout
    // interface ITextBackground
    // interface ITextBackground2
    // interface ITextMargins
    // interface IQueryGeometry
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("c8d09ed3-4fbb-11d1-9a72-0080c7ec5c96"))
LineCallout;
    // [ default ] interface IUnknown
    // interface ILineCallout
    // interface ITextBackground
    // interface ITextBackground2
    // interface IMarkerBackground
    // interface ITextMargins
    // interface IQueryGeometry
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("c5c02d50-7282-11d2-9816-0080c7e04196"))
MarkerTextBackground;
    // [ default ] interface IUnknown
    // interface IMarkerTextBackground
    // interface ITextBackground
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("40bd55f0-5f13-11d2-bcdb-0000f875bcce"))
GeometryDraw;
    // [ default ] interface IUnknown
    // interface IGeometryDraw
    // interface ISupportErrorInfo

struct __declspec(uuid("936ce290-0971-11d3-bcad-0080c7e04196"))
FontSize;
    // [ default ] interface IUnknown
    // interface IFontSize
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("b4514956-ad9e-4880-9e94-a783cee5167d"))
FontName;
    // [ default ] interface IUnknown
    // interface IFontName

struct __declspec(uuid("4c4bd4c7-2600-449e-afa1-7a80b03fe029"))
FontAttributeBold;
    // [ default ] interface IUnknown
    // interface IFontAttribute
    // interface IBold

struct __declspec(uuid("03c26b18-59ec-4481-a5d7-b77ae161961e"))
FontAttributeItalic;
    // [ default ] interface IUnknown
    // interface IFontAttribute
    // interface IItalic

struct __declspec(uuid("812a8361-6403-4a96-83e3-2dc97a60f30f"))
FontAttributeUnderline;
    // [ default ] interface IUnknown
    // interface IFontAttribute
    // interface IUnderline

struct __declspec(uuid("0e5d8c66-8d91-11d3-9fca-00c04f6bc6a5"))
SymbolCollection;
    // [ default ] interface IUnknown
    // interface ISymbolCollection
    // interface ISymbolCollection2
    // interface IPersist
    // interface IPersistStream
    // interface IClone

struct __declspec(uuid("440b07bc-92f0-11d3-9fcc-00c04f6bc6a5"))
SymbolIdentifier;
    // [ default ] interface IUnknown
    // interface ISymbolIdentifier
    // interface ISymbolIdentifier2

struct __declspec(uuid("e0554440-25cf-11d3-9f97-00c04f6bc6a5"))
OverposterTextPath;
    // [ default ] interface IUnknown
    // interface IOverposterTextPath
    // interface ITextPath
    // interface IPersist

struct __declspec(uuid("1eb7fe01-8d14-479d-a38f-30ab01b412e4"))
WordTextPath;
    // [ default ] interface IUnknown
    // interface IWordTextPath
    // interface ITextPath
    // interface IPersist

struct __declspec(uuid("65856cd8-ad04-11d3-9fc2-00c04f6bc8dd"))
SymbologyEnvironment;
    // [ default ] interface IUnknown
    // interface ISymbologyEnvironment
    // interface IPictureSymbolEnvironment

struct __declspec(uuid("fa37b822-a959-4acd-834a-0e114bf420b8"))
SimpleLineCallout;
    // [ default ] interface IUnknown
    // interface ISimpleLineCallout
    // interface ITextBackground
    // interface IQueryGeometry
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDisplayName
    // interface IXMLSerialize

struct __declspec(uuid("d7099b91-e298-499e-9757-72bb39e55cf3"))
SimpleTextParser;
    // [ default ] interface IUnknown
    // interface ITextParser
    // interface IPersist

struct __declspec(uuid("ac0e9824-91cb-11d1-8813-080009ec732a"))
IStyleGalleryClass : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * Description ) = 0;
    virtual HRESULT __stdcall get_ItemClass (
        GUID * iid ) = 0;
    virtual HRESULT __stdcall get_NewObjectTypes (
        struct IEnumBSTR * * newTypes ) = 0;
    virtual HRESULT __stdcall get_NewObject (
        BSTR newType,
        IUnknown * * NewObject ) = 0;
    virtual HRESULT __stdcall get_PreviewRatio (
        double * ratio ) = 0;
    virtual HRESULT __stdcall Preview (
        IUnknown * galleryItem,
        OLE_HANDLE hDC,
        struct tagRECT * rectangle ) = 0;
    virtual HRESULT __stdcall EditProperties (
        IUnknown * * galleryItem,
        struct IComPropertySheetEvents * listener,
        OLE_HANDLE hWnd,
        VARIANT_BOOL * ok ) = 0;
};

struct __declspec(uuid("ac0e9825-91cb-11d1-8813-080009ec732a"))
IStyleGalleryItem : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ID (
        long * ID ) = 0;
    virtual HRESULT __stdcall get_Item (
        IUnknown * * Item ) = 0;
    virtual HRESULT __stdcall put_Item (
        IUnknown * Item ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Category (
        BSTR * Category ) = 0;
    virtual HRESULT __stdcall put_Category (
        BSTR Category ) = 0;
};

struct __declspec(uuid("ac0e9828-91cb-11d1-8813-080009ec732a"))
IEnumStyleGalleryItem : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        struct IStyleGalleryItem * * Item ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("ac0e9826-91cb-11d1-8813-080009ec732a"))
IStyleGallery : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ClassCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Class (
        long index,
        struct IStyleGalleryClass * * styleClass ) = 0;
    virtual HRESULT __stdcall get_Categories (
        BSTR className,
        struct IEnumBSTR * * Categories ) = 0;
    virtual HRESULT __stdcall get_Items (
        BSTR className,
        BSTR styleSet,
        BSTR Category,
        struct IEnumStyleGalleryItem * * Items ) = 0;
    virtual HRESULT __stdcall AddItem (
        struct IStyleGalleryItem * Item ) = 0;
    virtual HRESULT __stdcall UpdateItem (
        struct IStyleGalleryItem * Item ) = 0;
    virtual HRESULT __stdcall RemoveItem (
        struct IStyleGalleryItem * Item ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall LoadStyle (
        BSTR fileName,
        BSTR className ) = 0;
    virtual HRESULT __stdcall SaveStyle (
        BSTR fileName,
        BSTR styleSet,
        BSTR className ) = 0;
    virtual HRESULT __stdcall ImportStyle (
        BSTR fileName ) = 0;
};

struct __declspec(uuid("001d15b3-0f79-11d2-adfe-080009ec732a"))
IStyleGalleryStorage : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FileCount (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_File (
        long index,
        BSTR * path ) = 0;
    virtual HRESULT __stdcall get_CanUpdate (
        BSTR path,
        VARIANT_BOOL * CanUpdate ) = 0;
    virtual HRESULT __stdcall get_TargetFile (
        BSTR * path ) = 0;
    virtual HRESULT __stdcall put_TargetFile (
        BSTR path ) = 0;
    virtual HRESULT __stdcall AddFile (
        BSTR path ) = 0;
    virtual HRESULT __stdcall RemoveFile (
        BSTR path ) = 0;
    virtual HRESULT __stdcall get_DefaultStylePath (
        BSTR * path ) = 0;
};

struct __declspec(uuid("17049f80-8e15-11d2-983e-0080c7e04196"))
IStyleImporter : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CanImport (
        BSTR fileName,
        VARIANT_BOOL * CanImport ) = 0;
    virtual HRESULT __stdcall Import (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall get_FileFilter (
        BSTR * fileExtension ) = 0;
};

struct __declspec(uuid("0b93a220-fa16-4b88-bc91-7f413b7ca433"))
ServerStyleGalleryItem;
    // [ default ] interface IUnknown
    // interface IStyleGalleryItem
    // interface IPersistStream
    // interface IPersist
    // interface IClone

struct __declspec(uuid("0f41edc3-0f2a-4351-93eb-138ce02a7360"))
EnumServerStyleGalleryItem;
    // [ default ] interface IUnknown
    // interface IEnumStyleGalleryItem

struct __declspec(uuid("9cdcf7da-63b8-4f23-b769-1db1bceadd35"))
ServerStyleGallery;
    // [ default ] interface IUnknown
    // interface IStyleGallery
    // interface IStyleGalleryStorage
    // interface IPersistStream

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_esriDisplay =
    {0x59fccd31,0x434c,0x4017,{0xbd,0xef,0xdb,0x4b,0x7e,0xdc,0x9c,0xe0}};
extern "C" const GUID __declspec(selectany) IID_IColor =
    {0x20cd40b0,0x8f3d,0x11d0,{0x85,0x90,0x08,0x00,0x09,0x1a,0x2a,0x72}};
extern "C" const GUID __declspec(selectany) IID_IRgbColor =
    {0x20cd40b1,0x8f3d,0x11d0,{0x85,0x90,0x08,0x00,0x09,0x1a,0x2a,0x72}};
extern "C" const GUID __declspec(selectany) IID_ICmykColor =
    {0x20cd40b2,0x8f3d,0x11d0,{0x85,0x90,0x08,0x00,0x09,0x1a,0x2a,0x72}};
extern "C" const GUID __declspec(selectany) IID_IHsvColor =
    {0x20cd40b3,0x8f3d,0x11d0,{0x85,0x90,0x08,0x00,0x09,0x1a,0x2a,0x72}};
extern "C" const GUID __declspec(selectany) IID_IGrayColor =
    {0x20cd40b4,0x8f3d,0x11d0,{0x85,0x90,0x08,0x00,0x09,0x1a,0x2a,0x72}};
extern "C" const GUID __declspec(selectany) IID_IHlsColor =
    {0x7ee9c491,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IPostScriptColor =
    {0x6060613e,0x1233,0x11d3,{0x9f,0x45,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IMonitorSettings =
    {0x9db25fdf,0x3c75,0x11d2,{0xaa,0xf6,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) IID_ICieLabConversion =
    {0x137e39db,0x3e98,0x11d2,{0xaa,0xf7,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_RgbColor =
    {0x7ee9c496,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_CmykColor =
    {0x7ee9c497,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_HsvColor =
    {0x7ee9c492,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_GrayColor =
    {0x7ee9c495,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_HlsColor =
    {0x7ee9c493,0xd123,0x11d0,{0x83,0x83,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_MonitorSettings =
    {0x9db25fe0,0x3c75,0x11d2,{0xaa,0xf6,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_CieLabConversion =
    {0x137e39dc,0x3e98,0x11d2,{0xaa,0xf7,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) IID_IEnumColors =
    {0xbeb87092,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IColorRamp =
    {0xbeb87091,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IRandomColorRamp =
    {0xbeb87095,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IAlgorithmicColorRamp =
    {0xbeb87096,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IPresetColorRamp =
    {0xbeb87097,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IMultiPartColorRamp =
    {0xbeb87098,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_RandomColorRamp =
    {0xbeb87094,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_AlgorithmicColorRamp =
    {0xbeb8709b,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_PresetColorRamp =
    {0xbeb8709a,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_MultiPartColorRamp =
    {0xbeb87099,0xc0b4,0x11d0,{0x83,0x79,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_ISymbol =
    {0xf3435802,0x5779,0x11d0,{0x98,0xbf,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IMarkerSymbol =
    {0xe6bdaa7c,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_ILineSymbol =
    {0xe6bdaa7d,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IFillSymbol =
    {0xe6bdaa7e,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_ITextSymbol =
    {0xa80b5e91,0x7f9c,0x11d0,{0x94,0x10,0x08,0x00,0x09,0xee,0xbe,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IEnumSymbol =
    {0x2f77f380,0x4448,0x11d2,{0x97,0xcc,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ISymbol3D =
    {0x869331a4,0xa283,0x4dcb,{0xa4,0xd9,0xdf,0xd0,0x2d,0xc9,0x5f,0x3a}};
extern "C" const GUID __declspec(selectany) IID_IDisplayFilter =
    {0x19f85377,0x1387,0x11d3,{0xb8,0x9c,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) IID_ITransparencyDisplayFilter =
    {0x19f85378,0x1387,0x11d3,{0xb8,0x9c,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) IID_IDisplayAdmin =
    {0x12e361f0,0x1907,0x11d3,{0x80,0xc7,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IDisplayFilterManager =
    {0xf0815360,0x19e1,0x11d3,{0x80,0xc8,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IDisplayAdmin2 =
    {0xd915ec07,0x7b4f,0x47fd,{0xb5,0x9b,0x32,0x52,0xf3,0xa3,0xb6,0x10}};
extern "C" const GUID __declspec(selectany) IID_IDisplayTransformation =
    {0xe6bdb000,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_ITransformEvents =
    {0xe6bdb001,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IIlluminationProps =
    {0x1c352f3f,0x298e,0x11d3,{0x9f,0x4f,0x00,0xc0,0x4f,0x6b,0xc6,0x19}};
extern "C" const GUID __declspec(selectany) IID_IDisplay =
    {0xe6bdb002,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IDraw =
    {0x7ef23a93,0xf475,0x11d3,{0x9f,0x54,0x00,0xc0,0x4f,0x6b,0xdf,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IDisplay3D =
    {0xdc8333bd,0xa1d9,0x11d3,{0x9f,0x61,0x00,0xc0,0x4f,0x6b,0xc5,0xf4}};
extern "C" const GUID __declspec(selectany) IID_IDisplayTransformationAdmin =
    {0x42817971,0xa1f4,0x11d3,{0x92,0xdc,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) IID_IDisplayEvents =
    {0xe6bdb003,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IDicerCallback =
    {0xe6bdaa7f,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IDelayEvents =
    {0x5ba46487,0x1d16,0x42b8,{0x84,0x7b,0xb7,0xb9,0xc8,0x10,0x0b,0x13}};
extern "C" const GUID __declspec(selectany) IID_IRasterOutputSettings =
    {0xf13aac6f,0x9c3d,0x11d3,{0xa6,0x44,0x00,0x08,0xc7,0xdf,0x8d,0xe1}};
extern "C" const GUID __declspec(selectany) IID_IOutputRasterSettings =
    {0x28444834,0xe9cb,0x44f8,{0x80,0x6a,0xd3,0x13,0x37,0x3f,0x69,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IScreenDisplay =
    {0xe6bdb004,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IScreenDisplay2 =
    {0xdc321087,0x108f,0x43ae,{0x93,0x2a,0xdf,0xc1,0xf7,0xc4,0x52,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IAppDisplay =
    {0x534e08d6,0xe65a,0x11d0,{0x86,0x81,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IScreenCacheManager =
    {0x7b3572f2,0x57a7,0x46b3,{0xaf,0x86,0x9c,0x9b,0xca,0x1c,0x8f,0x15}};
extern "C" const GUID __declspec(selectany) IID_IScreenInvalidate =
    {0xc1ccbfc2,0x6722,0x49f0,{0x92,0x42,0xba,0x2f,0x31,0x2e,0x24,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IEnumScreenDisplay =
    {0x1c6a7a03,0xe716,0x11d0,{0x86,0x81,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_ScreenDisplay =
    {0xe6bdb100,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleDisplay =
    {0xe6bdb101,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_DisplayTransformation =
    {0xeb16e596,0xb4f7,0x11d0,{0x86,0x5f,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_CancelTracker =
    {0xeb16e597,0xb4f7,0x11d0,{0x86,0x5f,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_TransparencyDisplayFilter =
    {0xad754a65,0x13b4,0x11d3,{0xb8,0x9d,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) CLSID_IlluminationProps =
    {0x1c352f40,0x298e,0x11d3,{0x9f,0x4f,0x00,0xc0,0x4f,0x6b,0xc6,0x19}};
extern "C" const GUID __declspec(selectany) IID_IDisplayFeedback =
    {0xd2c13e55,0x4bea,0x11d1,{0xb6,0xcc,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_ISelectionTracker =
    {0xe6bdb00c,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IAnchorPoint =
    {0x71fc8720,0x0164,0x11d2,{0x84,0xa4,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_ICalloutTracker =
    {0xa761d652,0x065f,0x11d4,{0x82,0x6f,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IRotateTracker =
    {0x66770313,0xfbc0,0x11d1,{0xa2,0x4e,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IScaleTracker =
    {0x2dc98f3b,0x38aa,0x11d3,{0x9f,0x3c,0x00,0xc0,0x4f,0x6b,0xc9,0x79}};
extern "C" const GUID __declspec(selectany) IID_IVertexFeedback =
    {0x77748c81,0x73fc,0x11d2,{0x85,0x06,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IReshapeFeedback =
    {0x4e315500,0xf4dd,0x11d1,{0x84,0x98,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_INewEnvelopeFeedback =
    {0x9bf56f82,0x4f36,0x11d1,{0xb6,0xcd,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_INewEnvelopeFeedback2 =
    {0x4e08b552,0xf52b,0x11d3,{0x93,0x15,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) IID_IMoveEnvelopeFeedback =
    {0x9bf56f81,0x4f36,0x11d1,{0xb6,0xcd,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IMoveTextFeedback =
    {0xdd61d811,0xa912,0x48e6,{0x91,0x46,0x07,0x3d,0x12,0x64,0xda,0x48}};
extern "C" const GUID __declspec(selectany) IID_IMoveCurvedTextFeedback =
    {0x4516b1d1,0xf799,0x4902,{0xa4,0xdd,0x1c,0xba,0xe5,0x03,0x5b,0xe3}};
extern "C" const GUID __declspec(selectany) IID_IMoveTextAlongShapeFeedback =
    {0xb44637c6,0xf488,0x41b4,{0xb2,0x22,0x07,0xaa,0x9c,0x04,0xa3,0xd6}};
extern "C" const GUID __declspec(selectany) IID_IResizeEnvelopeFeedback =
    {0xc3182fe1,0x4fb0,0x11d1,{0xb6,0xcd,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IResizeEnvelopeFeedback2 =
    {0x4e08b551,0xf52b,0x11d3,{0x93,0x15,0x00,0x60,0x08,0x02,0xe6,0x03}};
extern "C" const GUID __declspec(selectany) IID_IResizeTextFeedback =
    {0x1c9915ff,0x239b,0x49a1,{0xa2,0xf3,0xc9,0xd0,0xe4,0x17,0x3c,0xe1}};
extern "C" const GUID __declspec(selectany) IID_INewMultiPointFeedback =
    {0x7a8276c1,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_INewLineFeedback =
    {0x861a7b31,0x516d,0x11d1,{0xb6,0xce,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_INewBezierCurveFeedback =
    {0x417af471,0xcd15,0x11d2,{0x9f,0x30,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) IID_INewTextBezierCurveFeedback =
    {0x5c3ac217,0x10c5,0x401b,{0xb3,0xeb,0x6a,0x6d,0x93,0xe5,0xd5,0x8c}};
extern "C" const GUID __declspec(selectany) IID_IMoveLineFeedback =
    {0x7a8276c7,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IMovePointFeedback =
    {0x3c70bada,0x2429,0x11d3,{0x9f,0x36,0x00,0xc0,0x4f,0x6b,0xdd,0x7f}};
extern "C" const GUID __declspec(selectany) IID_ILineMovePointFeedback =
    {0x7a8276cb,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_INewPolygonFeedback =
    {0x7a8276c5,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IMovePolygonFeedback =
    {0x7a8276c9,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IPolygonMovePointFeedback =
    {0x7a8276cd,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IStretchLineFeedback =
    {0x89967502,0xa95f,0x11d1,{0xae,0x9c,0x00,0x00,0xf8,0x03,0x72,0xb4}};
extern "C" const GUID __declspec(selectany) IID_IMoveGeometryFeedback =
    {0x521b9df3,0x0166,0x11d2,{0xa2,0x54,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IMoveImageFeedback =
    {0x8c25c471,0x2030,0x11d2,{0xa2,0x8c,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IMoveImageFeedback2 =
    {0x781e1c4c,0x1bfd,0x44de,{0xb5,0x24,0x02,0x44,0x37,0x71,0x0f,0xab}};
extern "C" const GUID __declspec(selectany) IID_ICalloutFeedback =
    {0xe4543891,0x040c,0x11d4,{0x82,0x67,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_ICalloutFeedback2 =
    {0xb48ffe7a,0x396b,0x4188,{0xb4,0xdd,0x85,0xe9,0xd7,0xe1,0x6b,0x3e}};
extern "C" const GUID __declspec(selectany) IID_INewCircleFeedback =
    {0xb6f4b6cb,0xb455,0x487c,{0x84,0xd0,0x6f,0x9e,0x27,0x26,0xba,0x20}};
extern "C" const GUID __declspec(selectany) IID_IRubberBand =
    {0xe6bdb005,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IRotateTextFeedback =
    {0xae629199,0xb816,0x45b9,{0xb2,0x0b,0xd8,0x4d,0x91,0x9f,0xe0,0xc4}};
extern "C" const GUID __declspec(selectany) IID_INewTextFeedback =
    {0xb46b915d,0xd256,0x481b,{0x82,0xe8,0xc4,0x8e,0xd9,0x9f,0x4d,0x19}};
extern "C" const GUID __declspec(selectany) IID_IMoveBitmapFeedback =
    {0x956b2b6b,0xc169,0x441a,{0x92,0x03,0x6e,0x1b,0x4c,0x2b,0x4f,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IPointCollectionTracker =
    {0x4c929701,0x12f0,0x4ce0,{0xbb,0x67,0xf0,0x8f,0x6b,0x65,0xb6,0x6b}};
extern "C" const GUID __declspec(selectany) CLSID_NewEnvelopeFeedback =
    {0xd2c13e54,0x4bea,0x11d1,{0xb6,0xcc,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_VertexFeedback =
    {0x77748c82,0x73fc,0x11d2,{0x85,0x06,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_MoveEnvelopeFeedback =
    {0x9bf56f83,0x4f36,0x11d1,{0xb6,0xcd,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_ResizeEnvelopeFeedback =
    {0xc3182fe2,0x4fb0,0x11d1,{0xb6,0xcd,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_ResizeTextFeedback =
    {0x3d459d38,0x0843,0x45cc,{0x94,0x9b,0xbf,0x7f,0xe2,0x68,0xb0,0xed}};
extern "C" const GUID __declspec(selectany) CLSID_NewMultiPointFeedback =
    {0x7a8276c3,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_NewLineFeedback =
    {0x7a8276c4,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_NewBezierCurveFeedback =
    {0xcf6690bf,0xcdbf,0x11d2,{0x9f,0x31,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_MoveLineFeedback =
    {0x7a8276c8,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_MovePointFeedback =
    {0x29d782c8,0x2429,0x11d3,{0x9f,0x36,0x00,0xc0,0x4f,0x6b,0xdd,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_LineMovePointFeedback =
    {0x7a8276cc,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_BezierMovePointFeedback =
    {0x2b9f6607,0xd580,0x11d2,{0x9f,0x33,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_NewPolygonFeedback =
    {0x7a8276c6,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_MovePolygonFeedback =
    {0x7a8276ca,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_PolygonMovePointFeedback =
    {0x7a8276ce,0x5483,0x11d1,{0xb6,0xcf,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_StretchLineFeedback =
    {0x85319ed2,0xa960,0x11d1,{0xae,0x9c,0x00,0x00,0xf8,0x03,0x72,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_GroupFeedback =
    {0x44276912,0x98c1,0x11d1,{0x84,0x64,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_MoveGeometryFeedback =
    {0x521b9df4,0x0166,0x11d2,{0xa2,0x54,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_MoveImageFeedback =
    {0x8c25c472,0x2030,0x11d2,{0xa2,0x8c,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CalloutFeedback =
    {0xe4543892,0x040c,0x11d4,{0x82,0x67,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_EnvelopeTracker =
    {0xe6bdb107,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_LineTracker =
    {0x8ab7fbe3,0xd871,0x11d0,{0x83,0x89,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_PolygonTracker =
    {0x8d1827b1,0xf336,0x11d0,{0x83,0xa5,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_PointTracker =
    {0x530fd714,0xef0c,0x11d0,{0x83,0xa0,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_CalloutTracker =
    {0xa761d651,0x065f,0x11d4,{0x82,0x6f,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_EngineRotateTracker =
    {0x30f137af,0x5d42,0x49e4,{0x9e,0xdd,0xda,0x8c,0x3b,0xe7,0xde,0xda}};
extern "C" const GUID __declspec(selectany) CLSID_RubberEnvelope =
    {0xe6bdb102,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_RubberRectangularPolygon =
    {0x087675c8,0x7f23,0x4cf5,{0xa3,0x9d,0xbc,0xec,0x1e,0xe9,0xc1,0xf4}};
extern "C" const GUID __declspec(selectany) CLSID_RubberPoint =
    {0xe6bdb103,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_RubberLine =
    {0xe6bdb104,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_RubberPolygon =
    {0xe6bdb105,0x4d35,0x11d0,{0x98,0xbe,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_ReshapeFeedback =
    {0x4e315501,0xf4dd,0x11d1,{0x84,0x98,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_AnchorPoint =
    {0x71fc8721,0x0164,0x11d2,{0x84,0xa4,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_RubberCircle =
    {0x5f796f6f,0x1166,0x4ce5,{0xbe,0xc8,0x8e,0xbc,0xdf,0xb4,0xdc,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_NewCircleFeedback =
    {0xb25afff1,0x5a00,0x4120,{0x92,0xe0,0x45,0x2e,0x85,0x44,0xe4,0x44}};
extern "C" const GUID __declspec(selectany) CLSID_MoveTextFeedback =
    {0xb8f39f30,0x867d,0x4ca7,{0x8d,0x26,0x1c,0xee,0xaf,0x53,0x06,0x01}};
extern "C" const GUID __declspec(selectany) CLSID_MoveCurvedTextFeedback =
    {0xa8becdf3,0x90dd,0x4452,{0x8d,0xf9,0x37,0xd8,0x57,0x7c,0x8c,0x94}};
extern "C" const GUID __declspec(selectany) CLSID_MoveTextAlongShapeFeedback =
    {0x24d1e2b3,0xad64,0x4b5a,{0x9f,0x84,0xa1,0x9c,0x33,0xc9,0xd7,0x9d}};
extern "C" const GUID __declspec(selectany) CLSID_RotateTextFeedback =
    {0x67628250,0xb721,0x48e1,{0xb1,0x3b,0x4f,0x57,0x4b,0x83,0x57,0xa3}};
extern "C" const GUID __declspec(selectany) CLSID_NewTextFeedback =
    {0xa01a77f0,0xd96a,0x4c4c,{0x98,0x3c,0xc6,0x41,0x90,0x82,0x8c,0x5a}};
extern "C" const GUID __declspec(selectany) CLSID_MoveBitmapFeedback =
    {0x4993083d,0xdee5,0x42ab,{0xb3,0x12,0x2e,0x03,0x82,0x96,0xd1,0x86}};
extern "C" const GUID __declspec(selectany) CLSID_NewTextBezierCurveFeedback =
    {0x71957f32,0x4d7a,0x4374,{0xa1,0x17,0x69,0x69,0xf9,0xb8,0x20,0xd5}};
extern "C" const GUID __declspec(selectany) IID_ITemplate =
    {0x7914e5f4,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ILineDecoration =
    {0x533d88f0,0x0a1a,0x11d2,{0xb2,0x7f,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) IID_ILineDecorationElement =
    {0x533d88f2,0x0a1a,0x11d2,{0xb2,0x7f,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IMask =
    {0x6a7ef984,0x6924,0x11d2,{0x98,0x0d,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ITextPath =
    {0xb65a3e75,0x2993,0x11d1,{0x9a,0x43,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) IID_ITextBackground =
    {0x8feb6611,0x2a0d,0x11d1,{0x9a,0x44,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) IID_ICallout =
    {0x6a7ef980,0x6924,0x11d2,{0x98,0x0d,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ILineCallout =
    {0xc8d09ed1,0x4fbb,0x11d1,{0x9a,0x72,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) IID_IMapLevel =
    {0xcef72580,0xc1d9,0x11d2,{0x98,0x88,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_IDisplayName =
    {0xf47b9b56,0x7efe,0x4ee4,{0xb7,0xd4,0x44,0x5f,0x93,0xff,0x39,0x0e}};
extern "C" const GUID __declspec(selectany) IID_IQueryGeometry =
    {0x8e1b88f1,0x0a46,0x11d4,{0x82,0x76,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_ISimpleLineSymbol =
    {0xa9360291,0x5828,0x11d0,{0x98,0xbf,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IReferenceLineSymbol =
    {0x7914e5dc,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IMultiLayerLineSymbol =
    {0x7914e5de,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ILayerVisible =
    {0xd7301b50,0xe92e,0x11d2,{0x98,0xce,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ILayerColorLock =
    {0xd7301b51,0xe92e,0x11d2,{0x98,0xce,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ILineProperties =
    {0xb04bc357,0xc36e,0x11d0,{0xbf,0xa1,0x00,0x80,0xc7,0xe2,0x42,0x80}};
extern "C" const GUID __declspec(selectany) IID_ICartographicLineSymbol =
    {0xb04bc359,0xc36e,0x11d0,{0xbf,0xa1,0x00,0x80,0xc7,0xe2,0x42,0x80}};
extern "C" const GUID __declspec(selectany) IID_IHashLineSymbol =
    {0xb04bc35a,0xc36e,0x11d0,{0xbf,0xa1,0x00,0x80,0xc7,0xe2,0x42,0x80}};
extern "C" const GUID __declspec(selectany) IID_IMarkerLineSymbol =
    {0xb04bc35b,0xc36e,0x11d0,{0xbf,0xa1,0x00,0x80,0xc7,0xe2,0x42,0x80}};
extern "C" const GUID __declspec(selectany) IID_IPictureLineSymbol =
    {0x22c8c5a0,0x84fc,0x11d4,{0x83,0x4d,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_ISimpleMarkerSymbol =
    {0xa9360290,0x5828,0x11d0,{0x98,0xbf,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IArrowMarkerSymbol =
    {0x88539430,0xe06e,0x11d1,{0xb2,0x77,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IReferenceMarkerSymbol =
    {0x7914e5e2,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IMultiLayerMarkerSymbol =
    {0x7914e5e4,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ICartographicMarkerSymbol =
    {0x7914e5e6,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ICharacterMarkerSymbol =
    {0x7914e5e7,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IPictureMarkerSymbol =
    {0x7914e5e9,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ISymbolArray =
    {0x6cff7e07,0x0502,0x11d4,{0x9f,0x7c,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IChartSymbol =
    {0x50317363,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IPieChartSymbol =
    {0x50317364,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IBarChartSymbol =
    {0x50317365,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IStackedChartSymbol =
    {0x50317366,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_I3DChartSymbol =
    {0x50317367,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IMarkerBackground =
    {0xae41e4f0,0xdde7,0x11d3,{0x82,0x16,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IMarkerBackgroundSupport =
    {0x9ce9d410,0xddeb,0x11d3,{0x82,0x16,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IMarkerMask =
    {0x572d1037,0x7815,0x11d3,{0x9f,0x6a,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) IID_ISimpleFillSymbol =
    {0xa9360292,0x5828,0x11d0,{0x98,0xbf,0x00,0x80,0x5f,0x7c,0xed,0x21}};
extern "C" const GUID __declspec(selectany) IID_IReferenceFillSymbol =
    {0x7914e5ea,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IMultiLayerFillSymbol =
    {0x7914e5ec,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ILineFillSymbol =
    {0x7914e5ef,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IPictureFillSymbol =
    {0xd842b081,0x330c,0x11d2,{0x91,0x68,0x00,0x00,0xf8,0x78,0x08,0xee}};
extern "C" const GUID __declspec(selectany) IID_IMarkerFillSymbol =
    {0x7914e5f1,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IGradientFillSymbol =
    {0x7914e5f2,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IDotDensityFillSymbol =
    {0x85e413a0,0xcdf9,0x11d3,{0x81,0xeb,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IDotDensityFillSymbol2 =
    {0xde641030,0xcfc0,0x4465,{0xbe,0xaf,0x33,0x24,0x5d,0x3e,0xa1,0xe9}};
extern "C" const GUID __declspec(selectany) IID_IDotDensityMasking =
    {0x758fc2b0,0xd2ac,0x11d3,{0x81,0xf3,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) IID_IFillProperties =
    {0x7914e5f3,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_ISimpleTextSymbol =
    {0xa80b5e8c,0x7f9c,0x11d0,{0x94,0x10,0x08,0x00,0x09,0xee,0xbe,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IFormattedTextSymbol =
    {0xb65a3e72,0x2993,0x11d1,{0x9a,0x43,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) IID_ICharacterOrientation =
    {0x1fa841f8,0xa2cb,0x433d,{0x88,0xac,0x10,0xa9,0x45,0x85,0x23,0x20}};
extern "C" const GUID __declspec(selectany) IID_ISimpleLineDecorationElement =
    {0x533d88f7,0x0a1a,0x11d2,{0xb2,0x7f,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) IID_ITextPath2 =
    {0x6ea0e1e0,0x13e5,0x46d0,{0x82,0xad,0x69,0xf8,0x99,0x3a,0x67,0xe3}};
extern "C" const GUID __declspec(selectany) IID_ITextBackground2 =
    {0x63fc25a7,0x438b,0x4f97,{0x88,0x8e,0x10,0x5e,0x6d,0x46,0x18,0x28}};
extern "C" const GUID __declspec(selectany) IID_IBalloonCallout =
    {0xc8d09ed0,0x4fbb,0x11d1,{0x9a,0x72,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) IID_IMarkerTextBackground =
    {0xa8577a00,0x7283,0x11d2,{0x98,0x16,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_ITextMargins =
    {0x6a7ef982,0x6924,0x11d2,{0x98,0x0d,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_IMarginProperties =
    {0x086c95cb,0x4366,0x467f,{0xb6,0xa3,0x6f,0x8a,0x2b,0x69,0x3f,0x97}};
extern "C" const GUID __declspec(selectany) IID_IGeometryDraw =
    {0x741451a0,0x5f13,0x11d2,{0xbc,0xdb,0x00,0x00,0xf8,0x75,0xbc,0xce}};
extern "C" const GUID __declspec(selectany) IID_IFontSize =
    {0x6e7cb970,0x0a4d,0x11d3,{0xbc,0xaf,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) IID_IFontName =
    {0x77d415d5,0x5815,0x4322,{0x87,0xff,0xa6,0x94,0x0a,0x79,0x01,0x07}};
extern "C" const GUID __declspec(selectany) IID_IFontAttribute =
    {0xa37e7145,0xe00d,0x43f3,{0xbe,0x13,0x7e,0x1c,0xc9,0x34,0x83,0x29}};
extern "C" const GUID __declspec(selectany) IID_IBold =
    {0xdf029d39,0x50d5,0x40d8,{0xad,0x2f,0xbd,0x30,0xeb,0x91,0x41,0x8c}};
extern "C" const GUID __declspec(selectany) IID_IItalic =
    {0xa45f4f70,0xcaaa,0x4fe1,{0xa9,0x6b,0x2f,0x48,0x3d,0xe6,0x7a,0x68}};
extern "C" const GUID __declspec(selectany) IID_IUnderline =
    {0xf9292de5,0x7d71,0x41cb,{0x82,0x24,0x36,0x85,0x74,0x4c,0xf5,0x64}};
extern "C" const GUID __declspec(selectany) IID_ISymbolRotation =
    {0x84a1f5c2,0xd0a1,0x4e45,{0x84,0x2b,0x14,0x9e,0x85,0x7e,0x8a,0x9c}};
extern "C" const GUID __declspec(selectany) IID_ISymbolIdentifier =
    {0x440b07bb,0x92f0,0x11d3,{0x9f,0xcc,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) IID_ISymbolIdentifier2 =
    {0x877a260a,0xcacb,0x48f6,{0xaa,0xf9,0xa2,0x4c,0xe3,0xbc,0x75,0xff}};
extern "C" const GUID __declspec(selectany) IID_ISymbolCollection =
    {0x0e5d8c65,0x8d91,0x11d3,{0x9f,0xca,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) IID_ISymbolCollection2 =
    {0x7ed742b9,0x0aef,0x40a0,{0xa9,0xa5,0xde,0x2a,0x30,0x26,0x92,0xf2}};
extern "C" const GUID __declspec(selectany) IID_IOverposterTextPath =
    {0x3e0b2e61,0x27f4,0x11d3,{0x9f,0x9c,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) IID_IWordTextPath =
    {0x2690cdce,0x96a4,0x49da,{0xbd,0x07,0x3f,0x4e,0xd6,0x1e,0xfe,0xce}};
extern "C" const GUID __declspec(selectany) IID_IWordBoundaries =
    {0xdf0f7ba7,0x1c31,0x44cb,{0x97,0x5f,0x87,0xff,0x27,0x27,0x93,0xaa}};
extern "C" const GUID __declspec(selectany) IID_ISymbologyEnvironment =
    {0x65856cd7,0xad04,0x11d3,{0x9f,0xc2,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) IID_IPictureSymbolEnvironment =
    {0xc6778756,0x976c,0x4761,{0xa3,0xa7,0x66,0x1b,0x24,0x46,0xa7,0xbb}};
extern "C" const GUID __declspec(selectany) IID_ISimpleLineCallout =
    {0xad134202,0x770b,0x47ab,{0x80,0xbd,0xe3,0x45,0x7c,0x5e,0x31,0x68}};
extern "C" const GUID __declspec(selectany) IID_ITextParser =
    {0x55d9f654,0x5cde,0x4842,{0x8e,0x47,0x70,0x51,0x80,0x79,0xfe,0x1a}};
extern "C" const GUID __declspec(selectany) IID_ITextParserSupport =
    {0x5dea57cf,0xa8ef,0x4944,{0xb7,0x31,0x87,0xdf,0x1b,0x6f,0x13,0x6d}};
extern "C" const GUID __declspec(selectany) IID_ITextDrawSupport =
    {0xbf5bd367,0x5223,0x49c0,{0x8d,0xb0,0xfb,0xc9,0xd7,0xcf,0x36,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IUpdateLegendInfo =
    {0x272369d5,0x140a,0x444b,{0xa5,0x05,0x09,0x83,0xbd,0xdc,0xdb,0xab}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleLineSymbol =
    {0x7914e5f9,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_MultiLayerLineSymbol =
    {0x7914e5fa,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CartographicLineSymbol =
    {0x7914e5fb,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_HashLineSymbol =
    {0x7914e5fc,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_MarkerLineSymbol =
    {0x7914e5fd,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_PictureLineSymbol =
    {0x22c8c5a1,0x84fc,0x11d4,{0x83,0x4d,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleMarkerSymbol =
    {0x7914e5fe,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_MultiLayerMarkerSymbol =
    {0x7914e5ff,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CharacterMarkerSymbol =
    {0x7914e600,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_PictureMarkerSymbol =
    {0x7914e602,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_ArrowMarkerSymbol =
    {0x88539431,0xe06e,0x11d1,{0xb2,0x77,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_BarChartSymbol =
    {0x5031736a,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_PieChartSymbol =
    {0x50317368,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_StackedChartSymbol =
    {0x50317369,0xbd70,0x11d3,{0x9f,0x79,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleFillSymbol =
    {0x7914e603,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_MultiLayerFillSymbol =
    {0x7914e604,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_LineFillSymbol =
    {0x7914e606,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_PictureFillSymbol =
    {0xd842b082,0x330c,0x11d2,{0x91,0x68,0x00,0x00,0xf8,0x78,0x08,0xee}};
extern "C" const GUID __declspec(selectany) CLSID_MarkerFillSymbol =
    {0x7914e608,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_GradientFillSymbol =
    {0x7914e609,0xc892,0x11d0,{0x8b,0xb6,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_DotDensityFillSymbol =
    {0x9a1eba10,0xcdf9,0x11d3,{0x81,0xeb,0x00,0x80,0xc7,0x9f,0x03,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_TextSymbol =
    {0xb65a3e74,0x2993,0x11d1,{0x9a,0x43,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_Template =
    {0x41093a71,0xcce1,0x11d0,{0xbf,0xaa,0x00,0x80,0xc7,0xe2,0x42,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleLineDecorationElement =
    {0x533d88f3,0x0a1a,0x11d2,{0xb2,0x7f,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_LineDecoration =
    {0x533d88f5,0x0a1a,0x11d2,{0xb2,0x7f,0x00,0x00,0xf8,0x78,0x22,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleTextPath =
    {0xb65a3e76,0x2993,0x11d1,{0x9a,0x43,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_BezierTextPath =
    {0x2de21000,0xbdeb,0x11d1,{0x97,0x0b,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_BalloonCallout =
    {0xc8d09ed2,0x4fbb,0x11d1,{0x9a,0x72,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_LineCallout =
    {0xc8d09ed3,0x4fbb,0x11d1,{0x9a,0x72,0x00,0x80,0xc7,0xec,0x5c,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_MarkerTextBackground =
    {0xc5c02d50,0x7282,0x11d2,{0x98,0x16,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_GeometryDraw =
    {0x40bd55f0,0x5f13,0x11d2,{0xbc,0xdb,0x00,0x00,0xf8,0x75,0xbc,0xce}};
extern "C" const GUID __declspec(selectany) CLSID_FontSize =
    {0x936ce290,0x0971,0x11d3,{0xbc,0xad,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_FontName =
    {0xb4514956,0xad9e,0x4880,{0x9e,0x94,0xa7,0x83,0xce,0xe5,0x16,0x7d}};
extern "C" const GUID __declspec(selectany) CLSID_FontAttributeBold =
    {0x4c4bd4c7,0x2600,0x449e,{0xaf,0xa1,0x7a,0x80,0xb0,0x3f,0xe0,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_FontAttributeItalic =
    {0x03c26b18,0x59ec,0x4481,{0xa5,0xd7,0xb7,0x7a,0xe1,0x61,0x96,0x1e}};
extern "C" const GUID __declspec(selectany) CLSID_FontAttributeUnderline =
    {0x812a8361,0x6403,0x4a96,{0x83,0xe3,0x2d,0xc9,0x7a,0x60,0xf3,0x0f}};
extern "C" const GUID __declspec(selectany) CLSID_SymbolCollection =
    {0x0e5d8c66,0x8d91,0x11d3,{0x9f,0xca,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) CLSID_SymbolIdentifier =
    {0x440b07bc,0x92f0,0x11d3,{0x9f,0xcc,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) CLSID_OverposterTextPath =
    {0xe0554440,0x25cf,0x11d3,{0x9f,0x97,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) CLSID_WordTextPath =
    {0x1eb7fe01,0x8d14,0x479d,{0xa3,0x8f,0x30,0xab,0x01,0xb4,0x12,0xe4}};
extern "C" const GUID __declspec(selectany) CLSID_SymbologyEnvironment =
    {0x65856cd8,0xad04,0x11d3,{0x9f,0xc2,0x00,0xc0,0x4f,0x6b,0xc8,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleLineCallout =
    {0xfa37b822,0xa959,0x4acd,{0x83,0x4a,0x0e,0x11,0x4b,0xf4,0x20,0xb8}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleTextParser =
    {0xd7099b91,0xe298,0x499e,{0x97,0x57,0x72,0xbb,0x39,0xe5,0x5c,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IStyleGalleryClass =
    {0xac0e9824,0x91cb,0x11d1,{0x88,0x13,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IStyleGalleryItem =
    {0xac0e9825,0x91cb,0x11d1,{0x88,0x13,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IEnumStyleGalleryItem =
    {0xac0e9828,0x91cb,0x11d1,{0x88,0x13,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IStyleGallery =
    {0xac0e9826,0x91cb,0x11d1,{0x88,0x13,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IStyleGalleryStorage =
    {0x001d15b3,0x0f79,0x11d2,{0xad,0xfe,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IStyleImporter =
    {0x17049f80,0x8e15,0x11d2,{0x98,0x3e,0x00,0x80,0xc7,0xe0,0x41,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_ServerStyleGalleryItem =
    {0x0b93a220,0xfa16,0x4b88,{0xbc,0x91,0x7f,0x41,0x3b,0x7c,0xa4,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_EnumServerStyleGalleryItem =
    {0x0f41edc3,0x0f2a,0x4351,{0x93,0xeb,0x13,0x8c,0xe0,0x2a,0x73,0x60}};
extern "C" const GUID __declspec(selectany) CLSID_ServerStyleGallery =
    {0x9cdcf7da,0x63b8,0x4f23,{0xb7,0x69,0x1d,0xb1,0xbc,0xea,0xdd,0x35}};

#pragma pack(pop)
