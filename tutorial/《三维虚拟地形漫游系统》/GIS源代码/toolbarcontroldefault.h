#if !defined(AFX_TOOLBARCONTROLDEFAULT_H__EB6CFF26_D3AD_4C6E_A56A_B13AEFC56559__INCLUDED_)
#define AFX_TOOLBARCONTROLDEFAULT_H__EB6CFF26_D3AD_4C6E_A56A_B13AEFC56559__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPicture;

/////////////////////////////////////////////////////////////////////////////
// CToolbarControlDefault wrapper class

class CToolbarControlDefault : public CWnd
{
protected:
	DECLARE_DYNCREATE(CToolbarControlDefault)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xb7d4358e, 0x3cbc, 0x11d6, { 0xaa, 0x9, 0x0, 0x10, 0x4b, 0xb6, 0xfc, 0x1c } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void SetBorderStyle(long nNewValue);
	long GetBorderStyle();
	void SetEnabled(BOOL bNewValue);
	BOOL GetEnabled();
	void SetAppearance(long nNewValue);
	long GetAppearance();
	void SetMousePointer(long nNewValue);
	long GetMousePointer();
	void SetRefMouseIcon(LPDISPATCH newValue);
	CPicture GetMouseIcon();
	long GetHWnd();
	void AboutBox();
	long AddItem(const VARIANT& CommandOrMenu, long subtype, long index, BOOL beginGroup, long GroupSpacing, long Style);
	void Remove(long index);
	void RemoveAll();
	LPUNKNOWN GetItem(long index);
	long GetCount();
	void Update(long index, BOOL fullUpdate);
	LPDISPATCH GetBuddy();
	LPUNKNOWN GetCurrentTool();
	void SetRefCurrentTool(LPUNKNOWN newValue);
	BOOL GetToolTips();
	void SetToolTips(BOOL bNewValue);
	long GetItemAppearance();
	void SetItemAppearance(long nNewValue);
	long GetUpdateInterval();
	void SetUpdateInterval(long nNewValue);
	long Find(const VARIANT& CommandOrMenu);
	LPUNKNOWN GetCommandPool();
	void SetRefCommandPool(LPUNKNOWN newValue);
	long AddToolbarDef(const VARIANT& ToolbarDef, long startIndex, BOOL Group, long GroupSpacing, long Style);
	long GetTextAlignment();
	void SetTextAlignment(long nNewValue);
	BOOL GetLargeIcons();
	void SetLargeIcons(BOOL bNewValue);
	BOOL GetCustomize();
	void SetCustomize(BOOL bNewValue);
	void MoveItem(long startIndex, long finalIndex);
	long HitTest(long x, long y, BOOL nearest);
	void GetItemRect(long index, long* Top, long* Left, long* Bottom, long* Right);
	LPUNKNOWN GetOperationStack();
	void SetRefOperationStack(LPUNKNOWN newValue);
	VARIANT GetCustomProperty();
	void SetCustomProperty(const VARIANT& newValue);
	void SetBuddyControl(LPDISPATCH pToolbarBuddy);
	BOOL GetMenuTracking();
	void SetMenuTracking(BOOL bNewValue);
	long AddMenuItem(const VARIANT& Menu, long index, BOOL beginGroup, long GroupSpacing);
	LPDISPATCH GetObject();
	long GetKeyIntercept();
	void SetKeyIntercept(long nNewValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_TOOLBARCONTROLDEFAULT_H__EB6CFF26_D3AD_4C6E_A56A_B13AEFC56559__INCLUDED_)
